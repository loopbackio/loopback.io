<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://loopback.io/blog/</id>
    <title>LoopBack Blog</title>
    <updated>2023-10-10T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://loopback.io/blog/"/>
    <subtitle>LoopBack Blog</subtitle>
    <icon>https://loopback.io/blog/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Happy 5th Birthday LoopBack 4!]]></title>
        <id>https://loopback.io/blog/happy-5th-bday</id>
        <link href="https://loopback.io/blog/happy-5th-bday"/>
        <updated>2023-10-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Can you believe it's been 5 years that LoopBack 4 GA was announced at Node+JS Interactive conference?]]></summary>
        <content type="html"><![CDATA[<p>Can you believe it's been 5 years that LoopBack 4 GA was <a href="https://strongloop.com/strongblog/loopback-4-ga" target="_blank" rel="noopener noreferrer">announced</a> at Node+JS Interactive conference?</p><p><img loading="lazy" alt="Happy birthday LoopBack" src="/blog/assets/images/bday-0ff7a81f833c0ae2f86583db8b7d6a95.jpg" width="5184" height="3456" class="img_ev3q"><span style="font-size:0.4em;text-align:center"><i>Photo by <a href="https://unsplash.com/@socialcut?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText" target="_blank" rel="noopener noreferrer">S O C I A L . C U T</a> on <a href="https://unsplash.com/photos/ww8hljWABIE?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText" target="_blank" rel="noopener noreferrer">Unsplash</a></i></span></p><p>Since then, the framework has gained stability and has gained users substantially. We also see more contributions from the community not only to the core framework, but also building extensions. Thank you for all your contributions to LoopBack and the <a href="https://www.npmjs.com/search?q=loopback-extension" target="_blank" rel="noopener noreferrer">160+ extensions published on npmjs.com</a>!</p><p>To continue moving towards an open governace model, it's exciting to see LoopBack <a href="https://openjsf.org/blog/2021/06/02/loopback-joins-openjs-foundation-as-new-incubating-project/" target="_blank" rel="noopener noreferrer">joined the OpenJS foundation as the incubating project</a> in 2021 and <a href="https://openjsf.org/blog/2022/04/25/node-js-framework-loopback-graduates-to-at-large-project-at-openjs-foundation/" target="_blank" rel="noopener noreferrer">graduated to at-large project</a> the following year.</p><p>Lastly, don't forget that <a href="https://hacktoberfest.com/" target="_blank" rel="noopener noreferrer">HacktoberFest</a> is on this month. No matter you're a new developer to LoopBack or seasoned contributors, your contributions are always welcomed!</p>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="Meta" term="Meta"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[New Home for the LoopBack Blog]]></title>
        <id>https://loopback.io/blog/new-home-for-the-loopback-blog</id>
        <link href="https://loopback.io/blog/new-home-for-the-loopback-blog"/>
        <updated>2022-04-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[After a long hiatus, the LoopBack Blog has gotten a new home! Learn how it came]]></summary>
        <content type="html"><![CDATA[<p>After a long hiatus, the LoopBack Blog has gotten a new home! Learn how it came
to be and how we managed to modernise blogging stack along the way.</p><p>As part of the planning for LoopBack moving to OpenJS Foundation, there have
been discussions around finding a new home for the blog, parting from the
strongloop.com web site. A few alternatives had brought up, such as having the
blog posts as part of the loopback.io repo, using a third party blog site and
creating a blog site in a separate repo.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="coming-up-with-a-plan">Coming Up With a Plan<a href="#coming-up-with-a-plan" class="hash-link" aria-label="Direct link to Coming Up With a Plan" title="Direct link to Coming Up With a Plan">​</a></h2><p>Putting the blog posts in the loopback.io repo is a natural progression, since
all the documentation and text-based content will be in the same repo. The
concern is that is Jekyll-based. Although it worked fine and integrated well
with GitHub Pages, many of the maintainers were not well-versed in the world of
Ruby. This was compounded by shell scripts that pulled data from other Git
Repositories and modified the site as part of the build process. Hence, a lot of
time was spent trying to understand how the website was put together and
figuring out the best way to tweak it to integrate the new blog.</p><p>The "Strong Blog" was also written with Jekyll and hosted on GitHub Pages. Hence
lifting and shifting was a real possibility that we contemplated. However,
the slow build times and the maintainers' unfamiliarity with Ruby and Jekyll
meant that we realised that the website's current stack wasn't worth keeping
around in the long run. At the same time, performing a full migration of the
website, documentation, and blog in one go was too daunting of a task for the
maintainers who were already working on the project on their own time.</p><p>The idea of using a third-party service such as <a href="https://www.medium.com" target="_blank" rel="noopener noreferrer">Medium</a>
was also considered. However utlimately, the lack of control over the interface,
the inability to place it in the same domain name as the main website and
documentation, and the frustration that stem from a reader being forced to use
a third-party service meant that it was quickly off the table.</p><p>As a result, we decided to come to a compromise.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="picking-a-blogging-stack">Picking A Blogging Stack<a href="#picking-a-blogging-stack" class="hash-link" aria-label="Direct link to Picking A Blogging Stack" title="Direct link to Picking A Blogging Stack">​</a></h2><p>After some deliberation we decided to create a hybrid stack which left the
website and documentation with Jekyll, and use
<a href="https://docusaurus.io" target="_blank" rel="noopener noreferrer">Docosaurus 2</a> as the new blogging platform. We found
Docusaurus to be a good fit as it is a Facebook-maintained open source project
which was written on top of React. Besides its benefit of speedy build times,
this JavaScript-based stack provides more opportunities for extensibility and a
reduced barrier for contributing and tweaking. The first-class support for MDX
was also a plus as it meant we were able to copy over most of our posts with
only a few tweaks, and the ability to generate the blog as build artifacts made
it compatible with the Jamstack-eque system of GitHub Pages.</p><p>Thanks to the amazing work done by <a href="https://github.com/dhmlau" target="_blank" rel="noopener noreferrer">Diana</a>, all of
the LoopBack 4 blog posts from 2019 and 2020 were migrated to Docusaurus. With
her work, we were able to quickly build and see the new blog coming together
with all of the past blog posts populating the blog.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="merging-jekyll-and-docusaurus">Merging Jekyll and Docusaurus<a href="#merging-jekyll-and-docusaurus" class="hash-link" aria-label="Direct link to Merging Jekyll and Docusaurus" title="Direct link to Merging Jekyll and Docusaurus">​</a></h2><p>When we started building the blog, we hosted it on GitHub Pages in its own Git
Repository and served it in its own sub-domain. This allowed us to quickly build
and patch any bugs that may have cropped up. However the end-goal was to host it
under the same domain as the main website and documentation:
<a href="https://loopback.io/blog" target="_blank" rel="noopener noreferrer">https://loopback.io/blog</a>. Hence, we had to create a solution which merged the
new blog with the exsitng website codebase.</p><p>This solution? A shell script!</p><p>Since we already had a precedence for using shell scripts to pull in data from
other Git Repositories, I've decided to write one to do the same thing, but this
time, specifically for the blog. This script clones the
<a href="https://github.com/loopbackio/loopback-blog" target="_blank" rel="noopener noreferrer"><code>loopbackio/loopback-blog</code> Git Repository</a>,
generates the blog's build artifacts, and copies it over to the <code>blog</code> directory
of the Jekyll website. There's additional logic in there to make it more
fool-proof and less verbose but in essence, that was what it did - Clone, build,
and copy. You can also view the
<a href="https://github.com/loopbackio/loopback.io/blob/8968cd6860c09a852ee4fd9ce07c7a1db3ce7771/update-blog.sh" target="_blank" rel="noopener noreferrer">source code</a>
yourself if you'd like to see how it was done. Over time, we hope to refine this
further and make it more reliable, such as using Git Submodules instead of a
clean clone on every build.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="future-work">Future Work<a href="#future-work" class="hash-link" aria-label="Direct link to Future Work" title="Direct link to Future Work">​</a></h2><p>As it stands, we now have a blog that all of the maintainers can now contribute
to. With this change, we now have revived a new way for us, the maintianers, to
engage with our community and we hope that the blog posts can complement the
existing documentation and community channels such as Slack, GitHub
Discussions, and the mailing list.</p><p>This is just the first step in modernising our website stack. There's still
plenty of work to do, and it's our vision to fully migrate our stack to one
powered by the JavaScript ecosystem.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="upcoming-blog-series-maintainers-testimonial">Upcoming Blog Series: Maintainers' Testimonial<a href="#upcoming-blog-series-maintainers-testimonial" class="hash-link" aria-label="Direct link to Upcoming Blog Series: Maintainers' Testimonial" title="Direct link to Upcoming Blog Series: Maintainers' Testimonial">​</a></h2><p>With the launch of our new blog, we're excited to announce an upcoming blog
series where the maintainers can share their expriences and journey in adopting
LoopBack 4. Through this series, we hope to share with the community the unique
perspectives of those who work closely on LoopBack 4, not only as users but as
maintainers as well.</p><p>Don't miss out on future blog posts by subscribing to our
<a href="https://loopback.io/blog/rss.xml" target="_blank" rel="noopener noreferrer">RSS</a> or
<a href="https://loopback.io/blog/atom.xml" target="_blank" rel="noopener noreferrer">Atom</a> feeds which contain the full articles.</p>]]></content>
        <author>
            <name>Rifa achrinza</name>
            <uri>https://github.com/achrinza</uri>
        </author>
        <category label="Meta" term="Meta"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 November 2020 Milestone Update]]></title>
        <id>https://loopback.io/blog/november-2020-milestone</id>
        <link href="https://loopback.io/blog/november-2020-milestone"/>
        <updated>2020-12-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Hope you had a wonderful Thanksgiving for those who celebrate it! In November, LoopBack team focused on improving the context module and documentation, as well as bug fixes. The Toronto squad participated in the <a href="https://www-01.ibm.com/ibm/cas/cascon/" target="_blank" rel="noopener noreferrer">CASCONxEVOKE</a> conference. Instead of a physical booth, we held a virtual one online. We welcomed <a href="https://github.com/nflaig" target="_blank" rel="noopener noreferrer">@nflaig</a> as the new maintainer of <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer"><code>loopback-next</code></a>.</p><p>Read more to know about the highlighted improvements:</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="context">Context<a href="#context" class="hash-link" aria-label="Direct link to Context" title="Direct link to Context">​</a></h2><ul><li><p>A new phase <code>init()</code> was added to the application life cycle events. It is used when a component need to contribute bindings asynchronously. For example:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyComponent</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">implements</span><span class="token plain"> </span><span class="token class-name">Component</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> LifeCycleObserver </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">init</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Contribute bindings via `init`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// This cannot be done via constructor since it's synchronous.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> val </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">readFromConfig</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">app</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'abc'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">to</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">val</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">status </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'initialized'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">initialized </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can check the <a href="https://loopback.io/doc/en/lb4/Component.html#component-life-cycle" target="_blank" rel="noopener noreferrer">Component</a> page to learn about its usage.</p></li><li><p><code>toInjectable()</code> was introduced as a shortcut to decorate a common/provider/dynamic-value-factory class and automatically creating binding for them. For example:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">injectable</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">scope</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> BindingScope</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">SINGLETON</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyController</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'my-options'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> options</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> MyOptions</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">binding</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toInjectable</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MyController</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The decorator's usage is well documented on page <a href="https://loopback.io/doc/en/lb4/Binding.html#an-injectable-class" target="_blank" rel="noopener noreferrer">Binding</a>.</p></li><li><p>PR <a href="https://github.com/strongloop/loopback-next/pull/6701" target="_blank" rel="noopener noreferrer">#6701</a> updated test cases to reflect how the design types of array/undefined/complex properties are retrieved.</p></li><li><p>Method injection is allowed for the lifecycle methods in PR <a href="https://github.com/strongloop/loopback-next/pull/6740" target="_blank" rel="noopener noreferrer">#6740</a>. For example:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyObserverWithMethodInjection</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">implements</span><span class="token plain"> </span><span class="token class-name">LifeCycleObserver</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  status </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'not-initialized'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">init</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'prefix'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> prefix</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">status </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">prefix</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:initialized</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'prefix'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> prefix</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">status </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">prefix</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:started</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">stop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'prefix'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> prefix</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">status </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">prefix</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:stopped</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>In some cases, your Express middleware wants to access LoopBack's RequestContext to resolve certain bindings. This can be done via <code>MIDDLEWARE_CONTEXT</code> property of the Express request object, which is set up by LoopBack when the <code>RequestContext</code> is instantiated. For example:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token constant" style="color:#36acaa">MIDDLEWARE_CONTEXT</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> RequestContext</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/rest'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">expressHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">req</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> res</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> next</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> reqCtx </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">req </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token builtin">any</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token constant" style="color:#36acaa">MIDDLEWARE_CONTEXT</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Now you have access to the LoopBack RequestContext</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation">Documentation<a href="#documentation" class="hash-link" aria-label="Direct link to Documentation" title="Direct link to Documentation">​</a></h2><ul><li><p>The guide for calling REST APIs and SOAP services were separated to make the steps involved clearer. You can check the overview page <a href="https://loopback.io/doc/en/lb4/Accessing-services.html" target="_blank" rel="noopener noreferrer">Accessing services</a> and its sub-topics <a href="https://loopback.io/doc/en/lb4/Calling-soap-web-services.html" target="_blank" rel="noopener noreferrer">Calling SOAP web services</a> and <a href="https://loopback.io/doc/en/lb4/Calling-rest-apis.html" target="_blank" rel="noopener noreferrer">Calling REST APIs</a> for details.</p></li><li><p>For troubleshooting, we added steps for creating breakpoints in vscode in the <a href="https://loopback.io/doc/en/lb4/Troubleshooting.html#creating-breakpoints" target="_blank" rel="noopener noreferrer">documentation</a>. You can find more details in PR <a href="https://github.com/strongloop/loopback-next/pull/6743" target="_blank" rel="noopener noreferrer">#6743</a>. </p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="rest">REST<a href="#rest" class="hash-link" aria-label="Direct link to REST" title="Direct link to REST">​</a></h2><ul><li>Matching a URL or hostname against a regular expression that contains an unescaped dot as part of the hostname might match more hostnames than expected. PR <a href="https://github.com/strongloop/loopback-next/pull/6813" target="_blank" rel="noopener noreferrer">#6813</a> updated the regular expression of hostnames accordingly.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="repository">Repository<a href="#repository" class="hash-link" aria-label="Direct link to Repository" title="Direct link to Repository">​</a></h2><ul><li><a href="https://github.com/strongloop/loopback-next/pull/6755" target="_blank" rel="noopener noreferrer">#6755</a> threw 400 <code>BadRequestError</code> for invalid inclusion relation name by rejecting the request with statusCode as 400.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="examples">Examples<a href="#examples" class="hash-link" aria-label="Direct link to Examples" title="Direct link to Examples">​</a></h2><ul><li>PR <a href="https://github.com/strongloop/loopback-next/pull/6598" target="_blank" rel="noopener noreferrer">#6598</a> updated artifacts of the <a href="https://github.com/strongloop/loopback-next/tree/master/examples/todo-list" target="_blank" rel="noopener noreferrer">todo-list</a> example to the latest style generated by the LoopBack CLI.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="enriching-loopback-and-its-community---you-are-invited">Enriching LoopBack and its Community - You are Invited!<a href="#enriching-loopback-and-its-community---you-are-invited" class="hash-link" aria-label="Direct link to Enriching LoopBack and its Community - You are Invited!" title="Direct link to Enriching LoopBack and its Community - You are Invited!">​</a></h2><p>As mentioned in our <a href="https://strongloop.com/strongblog/2020-community-contribution/" target="_blank" rel="noopener noreferrer">recent blog post</a>, your contribution is important to make LoopBack a sustainable open source project. </p><p>Here is what you can do:</p><ul><li><a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Join LoopBack Slack community</a></li><li><a href="https://github.com/strongloop/loopback-next/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22" target="_blank" rel="noopener noreferrer">Look for first-contribution-friendly issues</a></li><li>Give us feedback and join our discussion in <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">our GitHub repo</a></li></ul><p>Let's make LoopBack a better framework together!</p>]]></content>
        <author>
            <name>Janny Hou</name>
            <uri>https://github.com/jannyhou</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 October 2020 Milestone Update]]></title>
        <id>https://loopback.io/blog/october-2020-milestone</id>
        <link href="https://loopback.io/blog/october-2020-milestone"/>
        <updated>2020-11-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>In October, we were excited to see an increasing number of community contributions as people joined the <a href="https://strongloop.com/strongblog/2020-hacktoberfest/" target="_blank" rel="noopener noreferrer">Hacktoberfest</a> event. This month we had pretty balanced improvements in each area of the framework, including context, health check, OpenAPI specification and documentations. Keep reading to learn about the recently added features!</p><p>We welcomed <a href="https://github.com/mrmodise" target="_blank" rel="noopener noreferrer">@mrmodise</a> as the maintainer of <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer"><code>loopback4-shopping-example</code></a>. And we'd like to thank everyone <a href="https://github.com/nflaig" target="_blank" rel="noopener noreferrer">@nflaig</a>, <a href="https://github.com/MattiaPrimavera" target="_blank" rel="noopener noreferrer">@MattiaPrimavera</a>, <a href="https://github.com/mdbetancourt" target="_blank" rel="noopener noreferrer">@mdbetancourt</a>, <a href="https://github.com/mrmodise" target="_blank" rel="noopener noreferrer">@mrmodise</a>, <a href="https://github.com/frbuceta" target="_blank" rel="noopener noreferrer">@frbuceta</a>, <a href="https://github.com/HrithikMittal" target="_blank" rel="noopener noreferrer">@HrithikMittal</a>, <a href="https://github.com/simlt" target="_blank" rel="noopener noreferrer">@simlt</a>, <a href="https://github.com/hectorleiva" target="_blank" rel="noopener noreferrer">@hectorleiva</a>, <a href="https://github.com/pktippa" target="_blank" rel="noopener noreferrer">@pktippa</a>, <a href="https://github.com/VergilSkye" target="_blank" rel="noopener noreferrer">@VergilSkye</a>, <a href="https://github.com/kerolloz" target="_blank" rel="noopener noreferrer">@kerolloz</a>, <a href="https://github.com/arondn2" target="_blank" rel="noopener noreferrer">@arondn2</a>, <a href="https://github.com/mayank-SFIN571" target="_blank" rel="noopener noreferrer">@mayank-SFIN571</a> for your contributions in October!</p><p>Here are the highlighted improvements:</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="context">Context<a href="#context" class="hash-link" aria-label="Direct link to Context" title="Direct link to Context">​</a></h2><ul><li>A set of fine-grained scopes <code>APPLICATION</code>, <code>SERVER</code> and <code>REQUEST</code> has been introduced to allow better
scoping of binding resolutions. The limitation of the previous scopes is explained in section <a href="https://loopback.io/doc/en/lb4/Binding.html#choose-the-right-scope" target="_blank" rel="noopener noreferrer">choose the right scope</a>, and section <a href="https://loopback.io/doc/en/lb4/Binding.html#resolve-a-binding-value-by-key-and-scope-within-a-context-hierarchy" target="_blank" rel="noopener noreferrer">resolve a binding value by key and scope within a context hierarchy</a> explains how different scopes determine the binding resolutions.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="rest">REST<a href="#rest" class="hash-link" aria-label="Direct link to REST" title="Direct link to REST">​</a></h2><ul><li><p>Allowed array query parameter for a single value, like <code>{tags: 'hello'}</code> where parameter <code>tags</code> is a string array. See PR <a href="https://github.com/strongloop/loopback-next/pull/6542" target="_blank" rel="noopener noreferrer">#6542</a>.</p></li><li><p>Supported property level configuration for hidden fields, like <code>@property({type: 'string', hidden: true}) password: string</code>. This is the shortcut for specifying the hidden properties in model settings. See PR <a href="https://github.com/strongloop/loopback-next/pull/6484" target="_blank" rel="noopener noreferrer">#6484</a>.</p></li><li><p><code>save()</code> method throwing error due to missing <code>idName</code> is fixed in PR <a href="https://github.com/strongloop/loopback-next/pull/6640" target="_blank" rel="noopener noreferrer">#6640</a>.</p></li><li><p><code>modifySpec()</code> turns to an async function to allow async spec updates. See PR <a href="https://github.com/strongloop/loopback-next/pull/6655" target="_blank" rel="noopener noreferrer">#6655</a>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="build">Build<a href="#build" class="hash-link" aria-label="Direct link to Build" title="Direct link to Build">​</a></h2><ul><li><p>A force clean rebuild was added to the pre-start script for the LoopBack 4 examples. You can run <code>npm start</code> after removing artifacts without manually cleaning the <code>/dist</code> files. See PR <a href="https://github.com/strongloop/loopback-next/pull/6588" target="_blank" rel="noopener noreferrer">#6588</a>.</p></li><li><p>Turned on <code>exit</code> for mocha tests for the created LoopBack applications. See PR <a href="https://github.com/strongloop/loopback-next/pull/6475" target="_blank" rel="noopener noreferrer">#6475</a>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="extensions">Extensions<a href="#extensions" class="hash-link" aria-label="Direct link to Extensions" title="Direct link to Extensions">​</a></h2><ul><li><p>Module <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/socketio" target="_blank" rel="noopener noreferrer">@loopback/socketio</a> was added to use socket.io to expose controllers as WebSocket friendly endpoints.</p></li><li><p>Enable/disable the metrics endpoints in explorer when mounting the metric and health extensions. See PR <a href="https://github.com/strongloop/loopback-next/pull/6646" target="_blank" rel="noopener noreferrer">#6646</a> and PR <a href="https://github.com/strongloop/loopback-next/pull/6645" target="_blank" rel="noopener noreferrer">#6645</a>.</p></li><li><p>Only add <code>MetricsObserver</code>, <code>MetricsPushObserver</code> and expose <code>/metrics</code> endpoints when they are enabled. See PR <a href="https://github.com/strongloop/loopback-next/pull/6644" target="_blank" rel="noopener noreferrer">#6644</a>.</p></li><li><p>The health check for applications running in container now returns a more accurate HTTP status code based on the state. For example, checking <code>/health</code> for application in states 'STARTING', 'STOPPING' or 'STOPPED' returns 503. You can find more details in PR <a href="https://github.com/strongloop/loopback-next/pull/6648" target="_blank" rel="noopener noreferrer">#6648</a>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation-restructure">Documentation Restructure<a href="#documentation-restructure" class="hash-link" aria-label="Direct link to Documentation Restructure" title="Direct link to Documentation Restructure">​</a></h2><ul><li><p>LoopBack 4 targets both API developers and extension developers, while the current website doesn't distinguish them clearly. This month we restructured the sidebar to classify the documentation into two parts: "Building LoopBack Applications" and "Extending LoopBack Framework". You can check <a href="https://loopback.io/doc/en/lb4/Customizing-server-configuration.html" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/Customizing-server-configuration.html</a> to view the new layout.</p></li><li><p>The instructions for implementing HTTP redirects and mounting an Express router are extracted into a standalone page under "How-to guides". You can check <a href="https://loopback.io/doc/en/lb4/Customizing-routes.html" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/Customizing-routes.html</a> to view the content.</p></li><li><p>Moved server recipes to how-to guides <a href="https://loopback.io/doc/en/lb4/Customizing-server-configuration.html" target="_blank" rel="noopener noreferrer">Customizing-server-configuration</a>. See PR <a href="https://github.com/strongloop/loopback-next/pull/6663" target="_blank" rel="noopener noreferrer">#6663</a>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="examples">Examples<a href="#examples" class="hash-link" aria-label="Direct link to Examples" title="Direct link to Examples">​</a></h2><p>Two examples were added last month:</p><ul><li><p>Example <a href="https://github.com/strongloop/loopback-next/tree/master/examples/webpack" target="_blank" rel="noopener noreferrer">webpack</a> was added to demo LoopBack running inside the browser as client-side JavaScript application.</p></li><li><p>Example <a href="https://github.com/strongloop/loopback-next/tree/master/examples/socketio" target="_blank" rel="noopener noreferrer">socketio</a> gives a basic implementation of socketio with LoopBack 4.</p></li></ul><p>You can also download the examples by using the <code>lb4 example</code> command.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="enriching-loopback-and-its-community---you-are-invited">Enriching LoopBack and its Community - You are Invited!<a href="#enriching-loopback-and-its-community---you-are-invited" class="hash-link" aria-label="Direct link to Enriching LoopBack and its Community - You are Invited!" title="Direct link to Enriching LoopBack and its Community - You are Invited!">​</a></h2><p>As mentioned in our <a href="https://strongloop.com/strongblog/2020-community-contribution/" target="_blank" rel="noopener noreferrer">recent blog post</a>, your contribution is important to make LoopBack a sustainable open source project. </p><p>Here is what you can do:</p><ul><li><a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Join LoopBack Slack community</a></li><li><a href="https://github.com/strongloop/loopback-next/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22" target="_blank" rel="noopener noreferrer">Look for first-contribution-friendly issues</a></li><li>Give us feedback and join our discussion in <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">our GitHub repo</a></li></ul><p>Let's make LoopBack a better framework together!</p>]]></content>
        <author>
            <name>Janny Hou</name>
            <uri>https://github.com/jannyhou</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Community Q&A Monthly Digest - Oct 2020]]></title>
        <id>https://loopback.io/blog/2020-oct-slack-qa</id>
        <link href="https://loopback.io/blog/2020-oct-slack-qa"/>
        <updated>2020-10-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>It's been 6 months since we created the <a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Slack channel</a> for LoopBack community. Thanks to your support, over 500 members had joined and new members are joining almost everyday! Let's take a look at the October edition of the “Community Q&amp;A Monthly Digest”, capturing some of the Q&amp;A in this forum. </p><hr><p><strong>Question:</strong> How to get the raw request in LoopBack 4 in a function without changing the parsing for the entire app?</p><p><strong>Answer:</strong>
It's possible to get the raw request body with <code>x-parser</code>: <a href="https://loopback.io/doc/en/lb4/Parsing-requests.html#extend-request-body-parsing" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/Parsing-requests.html#extend-request-body-parsing</a>.
-- <em>Answered by @Rifa Achrinza</em></p><hr><p><strong>Question:</strong> Is there any solution for tracking database migration, for example, migrations has been already run and possible rollback of migration? </p><p><strong>Answer:</strong>
I created a module which tracks migrations and executes scripts based on the db version compared to the app version, see <a href="https://www.npmjs.com/package/loopback4-migration" target="_blank" rel="noopener noreferrer">https://www.npmjs.com/package/loopback4-migration</a>.
--<em>Answered by @nflaig</em></p><p>Ideally, LoopBack generates the DDL for users to review, and then it’s up to the users to run it or not. It's a feature to be implemented, see <a href="https://github.com/strongloop/loopback-next/issues/4757" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/issues/4757</a>.
--<em>Answered by @Diana Lau</em></p><hr><p><strong>Question:</strong> I want to check whether a specified <code>categoryId</code> exists in a Mongo datasource, how can I do that? For example,</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token property" style="color:#36acaa">"categories"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"categoryId"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"e759c15e-3552-4557-aa6b-c1396674c7e6"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"name"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"categoryId"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"e759c15e-3552-4557-aa6b-c1396674c7e5"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"name"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>I tried <code>await this.usersRepository.find({'categories.categoryId': 'e759c15e-3552-4557-aa6b-c1396674c7e5'});</code> but getting an error message below:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; { 'categories.categoryId': string; }' is not assignable to parameter of type 'Filter&lt;Users&gt;'. Object literal may only specify known properties, and ''categories.categoryId'' does not exist in type 'Filter&lt;Users&gt;'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Answer:</strong>
The object you pass into <code>.find()</code> needs to be a <code>Filter</code> object. Make sure you <code>import { Filter } from '@loopback/repository';</code>, then you can: </p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> existingCategoryFilter</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Filter </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//...filter properties in here...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> existingCategories </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">categoryRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">existingCategoryFilter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>-- Answered by @Jackson Hyde</p><p>To add on what @Jackson Hyde has mentioned, due to limitations on TypeScript types, nested objects are not included in the typings. Hence, you'll also need to override TypeScript's check by adding <code>// @ts-ignore</code> just before the repository function.
-- Answered by @Rifa Achrinza</p><hr><p><strong>Question:</strong> I want to implement JWT refresh token in LoopBack 4. Can you suggest any good tutorial?</p><p><strong>Answer:</strong> You can follow this <a href="https://loopback.io/doc/en/lb4/JWT-authentication-extension.html" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/JWT-authentication-extension.html</a>.
--<em>Answered by @Pratik Jaiswal</em></p><hr><p><strong>Question:</strong> I used LoopBack CLI to create a "SHIPPING" model but it tries to do lowercase "Shipping" in the SQL with the quotes. An error occurred in the SQL statement because it is case sensitive with the quotes around it. How can I fix this? I'm on LoopBack 4 and using the <code>loopback-connector-ibmi</code>.</p><p><strong>Answer:</strong>
Did u try to give the name in your model?</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'member_membership'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MemberMembership</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Entity</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>So <code>member_membership</code> is the table in the database.
-- Answered by @Mohammed</p><p>The <code>name</code> property customizes the model name, which is default to the class name if not provided. The model name is then used as the default for table name unless you further customize it for specific databases.
-- Answered by @Raymond Feng</p><hr><p><strong>Question:</strong> I have a CORS issue with <code>passport-login</code> example when trying to establish connection with Google using Angular Frontend. I keep getting CORS error:</p><blockquote><p>Access to XMLHttpRequest at '<a href="https://accounts.google.com/o/oauth2/v2/auth?...'" target="_blank" rel="noopener noreferrer">https://accounts.google.com/o/oauth2/v2/auth?...'</a> (redirected from 'http://localhost:3000/api/auth/thirdparty/google') from origin 'http://localhost:4200' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource."</p></blockquote><p>But the application is working fine with jade.</p><p><strong>Answer:</strong>
In your login component you could do something like:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token constant" style="color:#36acaa">OAUTH2_LINK_GOOGLE</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">api_url</span><span class="token operator" style="color:#393A34">+</span><span class="token string" style="color:#e3116c">'/api/auth/thirdparty/google?redirect_uri='</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">redir_url</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">onGoogleSignIn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    window</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">location</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">href </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">OAUTH2_LINK_GOOGLE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Bind the Google link to the above in the HTML code.</p><p>-- Answered by @marg330</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="enriching-loopback-and-its-community---you-are-invited">Enriching LoopBack and its Community - You are Invited!<a href="#enriching-loopback-and-its-community---you-are-invited" class="hash-link" aria-label="Direct link to Enriching LoopBack and its Community - You are Invited!" title="Direct link to Enriching LoopBack and its Community - You are Invited!">​</a></h2><p>As mentioned in our <a href="https://strongloop.com/strongblog/2020-community-contribution/" target="_blank" rel="noopener noreferrer">recent blog post</a>, your contribution is important to make LoopBack a sustainable open source project. </p><p>Here is what you can do:</p><ul><li><a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Join LoopBack Slack community</a></li><li><a href="https://github.com/strongloop/loopback-next/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22" target="_blank" rel="noopener noreferrer">Look for first-contribution-friendly issues</a></li><li>Give us feedback and join our discussion in <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">our GitHub repo</a></li></ul><p>Let's make LoopBack a better framework together!</p>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="Community" term="Community"/>
        <category label="Slack" term="Slack"/>
        <category label="Q&A" term="Q&A"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 2020 Q3 Overview]]></title>
        <id>https://loopback.io/blog/loopback-4-2020-q3-overview</id>
        <link href="https://loopback.io/blog/loopback-4-2020-q3-overview"/>
        <updated>2020-10-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Fall is the season of the harvest. We're glad to see the good progress that we've made in the past 3 months, together with the contributions from the community. In September, there is record high percentage (25.6%) of the merged PRs which are coming from the community. Thank you all!</p><p>If you haven't heard of <a href="https://hacktoberfest.digitalocean.com/" target="_blank" rel="noopener noreferrer">Hacktoberfest</a> happening this month, check out the details in our <a href="https://strongloop.com/strongblog/2020-hacktoberfest/" target="_blank" rel="noopener noreferrer">previous blog on Hacktoberfest</a>. There's still time to join. For those who participated, we appreciated your contributions. </p><p>Let's take a look some of the highlights in the last quarter by you and the LoopBack team.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="integrate-with-typeorm-typegraphql-and-messagepack">Integrate with TypeORM, TypeGraphQL and MessagePack<a href="#integrate-with-typeorm-typegraphql-and-messagepack" class="hash-link" aria-label="Direct link to Integrate with TypeORM, TypeGraphQL and MessagePack" title="Direct link to Integrate with TypeORM, TypeGraphQL and MessagePack">​</a></h2><p>One of our strategies to add value to LoopBack is to leverage third-party libraries and integrate with them. We created the following extensions:</p><ul><li><a href="https://www.npmjs.com/package/@loopback/typeorm" target="_blank" rel="noopener noreferrer"><code>@loopback/typeorm</code></a>: enables <a href="https://typeorm.io/" target="_blank" rel="noopener noreferrer">TypeORM</a> support in LoopBack</li><li><a href="https://www.npmjs.com/package/@loopback/graphql" target="_blank" rel="noopener noreferrer"><code>@loopback/graphql</code></a>: integrates with <a href="https://typegraphql.com/" target="_blank" rel="noopener noreferrer">TypeGraphQL</a> for creating GraphQL API <a href="https://loopback.io/doc/en/lb4/GraphQL.html" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/GraphQL.html</a></li><li><a href="https://www.npmjs.com/package/@loopback/rest-msgpack" target="_blank" rel="noopener noreferrer"><code>@loopback/rest-msgpack</code></a>: adds support to allow receive <a href="https://msgpack.org/index.html" target="_blank" rel="noopener noreferrer">MessagePack</a> requests and transparently convert it to a regular JavaScript object. It provides a BodyParser implementation and a component to register it. </li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reorganize-and-enhance-documentation">Reorganize and Enhance Documentation<a href="#reorganize-and-enhance-documentation" class="hash-link" aria-label="Direct link to Reorganize and Enhance Documentation" title="Direct link to Reorganize and Enhance Documentation">​</a></h2><p>To better organize our content and easier for navigation/discovery, we reorganized our content based on <a href="https://documentation.divio.com" target="_blank" rel="noopener noreferrer">four quadrants</a>: tutorials, how-to guides, concepts and reference guides. To find out more how our documentation is organized, see <a href="https://loopback.io/doc/en/lb4/#how-is-our-documentation-organized" target="_blank" rel="noopener noreferrer">this documentation page</a>.</p><p>Besides the ongoing <a href="https://github.com/strongloop/loopback-next/issues/5783" target="_blank" rel="noopener noreferrer">refactoring work</a>, we enriched the content and clarified on some of the topics that are frequently asked by you. For example, we:</p><ul><li><a href="https://loopback.io/doc/en/lb4/Extending-LoopBack-4.html" target="_blank" rel="noopener noreferrer">cleaned up the documentation about LoopBack extension</a> so that your extension creation experience would be easier and smoother. We'll continue to make some more improvement in this area as well. </li><li>enhanced the content for <a href="https://loopback.io/doc/en/lb4/Authentication-overview.html" target="_blank" rel="noopener noreferrer">authentication</a> and <a href="https://loopback.io/doc/en/lb4/Authorization-overview.html" target="_blank" rel="noopener noreferrer">authorization</a> to include basic concepts, usage and examples. </li><li>added a section on <a href="https://loopback.io/doc/en/lb4/Using-database-transactions.html#accessing-multiple-models-inside-one-transaction" target="_blank" rel="noopener noreferrer">accessing multiple models inside a transaction</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-key-feature-highlights">Other Key Feature Highlights<a href="#other-key-feature-highlights" class="hash-link" aria-label="Direct link to Other Key Feature Highlights" title="Direct link to Other Key Feature Highlights">​</a></h2><p>There were many features, fixes and enhancements in the past few months, and here are some highlights:</p><ul><li>completed the <a href="https://loopback.io/doc/en/lb4/HasManyThrough-relation.html" target="_blank" rel="noopener noreferrer">HasManyThrough relation</a></li><li><a href="https://strongloop.com/strongblog/august-2020-milestone/#improving-rest-experience" target="_blank" rel="noopener noreferrer">improved REST experience</a> by adding a <a href="https://loopback.io/doc/en/lb4/REST-middleware-sequence.html" target="_blank" rel="noopener noreferrer">middleware based sequence</a></li><li>added <a href="https://loopback.io/doc/en/lb4/Authentication-component-decorator.html" target="_blank" rel="noopener noreferrer">support for applying multiple authentication strategies to one endpoint</a></li><li>implemented the <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/authentication-jwt#endpoints-with-refresh-token" target="_blank" rel="noopener noreferrer">refresh token service</a> in the <code>@loopback/authentication-jwt</code> extension</li><li>added the <a href="https://github.com/strongloop/loopback-next/pull/6285" target="_blank" rel="noopener noreferrer">support of OpenAPI parameter AJV validation</a> on simple types and <a href="https://github.com/strongloop/loopback-next/pull/6262" target="_blank" rel="noopener noreferrer">AJV formats for OpenAPI spec data type formats</a>.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="encourage-community-contributions">Encourage Community Contributions<a href="#encourage-community-contributions" class="hash-link" aria-label="Direct link to Encourage Community Contributions" title="Direct link to Encourage Community Contributions">​</a></h2><p>In a <a href="https://strongloop.com/strongblog/2020-community-contribution/" target="_blank" rel="noopener noreferrer">recent blog post</a>, we shared our views on encouraging more community contributions to match with our growing user community. The <a href="https://loopback.io/doc/en/contrib/code-contrib.html#developer-certificate-of-origin-dco" target="_blank" rel="noopener noreferrer">switch to Developer Certificate of Origin (DCO)</a> as the contribution method is a change we made to make your contribution process easier. We also created a <a href="https://loopback.io/doc/en/lb4/Community-extensions.html" target="_blank" rel="noopener noreferrer">community extension documentation page</a> to showcase LoopBack extensions built by the community. </p><p>In addition, we are pleased to have <a href="https://github.com/nabdelgadir" target="_blank" rel="noopener noreferrer">@nabdelgadir</a> and <a href="https://github.com/madaky" target="_blank" rel="noopener noreferrer">@madaky</a> to be one of our community maintainers. We appreciate the great work you’ve done and welcome to the team.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="previous-milestone-blogs">Previous Milestone Blogs<a href="#previous-milestone-blogs" class="hash-link" aria-label="Direct link to Previous Milestone Blogs" title="Direct link to Previous Milestone Blogs">​</a></h2><p>There are many more accomplishments that cannot be captured in this blog, make sure you check out our previously published monthly milestone blog posts in Q3 for more details:</p><ul><li><a href="https://strongloop.com/strongblog/july-2020-milestone" target="_blank" rel="noopener noreferrer">July summary</a></li><li><a href="https://strongloop.com/strongblog/august-2020-milestone" target="_blank" rel="noopener noreferrer">August summary</a></li><li><a href="https://strongloop.com/strongblog/september-2020-milestone/" target="_blank" rel="noopener noreferrer">Sept summary</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="enriching-loopback-and-its-community---you-are-invited">Enriching LoopBack and its Community - You are Invited!<a href="#enriching-loopback-and-its-community---you-are-invited" class="hash-link" aria-label="Direct link to Enriching LoopBack and its Community - You are Invited!" title="Direct link to Enriching LoopBack and its Community - You are Invited!">​</a></h2><p>Your contribution is important to make LoopBack a sustainable open source project. </p><p>Here is what you can do:</p><ul><li><a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Join LoopBack Slack community</a></li><li><a href="https://github.com/strongloop/loopback-next/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22" target="_blank" rel="noopener noreferrer">Look for first-contribution-friendly issues</a></li><li>Give us feedback and join our discussion in <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">our GitHub repo</a></li><li>Limited time only: <a href="https://strongloop.com/strongblog/2020-hacktoberfest/" target="_blank" rel="noopener noreferrer">Join the Hacktoberfest</a> in the month of October</li></ul><p>Let's make LoopBack a better framework together!</p>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="Quarterly update" term="Quarterly update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 3 End-of-Life]]></title>
        <id>https://loopback.io/blog/2020-lb3-eol</id>
        <link href="https://loopback.io/blog/2020-lb3-eol"/>
        <updated>2020-10-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>LoopBack 3 is <a href="https://loopback.io/doc/en/contrib/Long-term-support.html" target="_blank" rel="noopener noreferrer">approaching its end-of-life</a> at the end of the year for community support. For LoopBack 3 users, we hope the <a href="https://loopback.io/doc/en/lb4/migration-overview.html" target="_blank" rel="noopener noreferrer">migration guide</a> helps you migrate your applications to version 4. </p><p>At the same time, we understand you might still be using LoopBack 3 and/or in the process of migrating to LoopBack 4. For the next few months after the EOL date, we'll try to support the community in the following ways:</p><ul><li><strong>Helping the community to migrate</strong>: we will continue to help with questions on <a href="https://github.com/strongloop/loopback" target="_blank" rel="noopener noreferrer">GitHub</a> and <a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Slack</a>, but it will be on a best-effort basis.</li><li><strong>Security vulnerabilities</strong>: Critical security fixes will be applied as needed by <a href="https://www.ibm.com/cloud/api-connect" target="_blank" rel="noopener noreferrer">IBM API Connect</a>.</li><li><strong>New features</strong>: No features will be accepted.</li><li><strong>Bugs</strong>: We are not going to actively fix any bugs reported by the community users. For critical bugs, maintainers will review and assess the risks of community-submitted PRs. If you’re planning to submit a fix, it’s the best to open a GitHub issue to discuss with the maintainers before proceeding.</li></ul><p>Please note that the December 2020 end-of-life date is applicable to community support. If you are using LoopBack as part of the <a href="https://www.ibm.com/cloud/api-connect" target="_blank" rel="noopener noreferrer">IBM API Connect</a> v5 or v2018 product, check with the product announcement for its end-of-support schedule.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-should-i-do-if-im-still-using-loopback-3">What Should I Do If I'm Still Using LoopBack 3?<a href="#what-should-i-do-if-im-still-using-loopback-3" class="hash-link" aria-label="Direct link to What Should I Do If I'm Still Using LoopBack 3?" title="Direct link to What Should I Do If I'm Still Using LoopBack 3?">​</a></h2><p>If you already have LoopBack 3 applications running in production, it is highly recommended for you to review the <a href="https://loopback.io/doc/en/lb4/Understanding-the-differences.html" target="_blank" rel="noopener noreferrer">Understanding the differences between LoopBack 3 and LoopBack 4 page</a> as mentioned in <a href="https://strongloop.com/strongblog/lb3-extended-lts/" target="_blank" rel="noopener noreferrer">one of our older blog posts</a>. There is also the <a href="https://loopback.io/doc/en/lb4/migration-overview.html" target="_blank" rel="noopener noreferrer">migration guide</a> helping you to migrate your LoopBack 3 applications incrementally.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-if-i-cannot-migrate-to-loopback-4-any-time-soon">What If I Cannot Migrate to LoopBack 4 Any Time Soon?<a href="#what-if-i-cannot-migrate-to-loopback-4-any-time-soon" class="hash-link" aria-label="Direct link to What If I Cannot Migrate to LoopBack 4 Any Time Soon?" title="Direct link to What If I Cannot Migrate to LoopBack 4 Any Time Soon?">​</a></h2><p>Your LoopBack 3 applications will continue to work even after LoopBack 3 reaches end of life. There will be <em>very</em> minimal, if any, changes going into the codebase. In the case of addressing security vulnerabilities, you might need to fork the corresponding GitHub repos and apply security fixes. See <a href="https://strongloop.com/strongblog/lb3-entered-maintenance-mode/" target="_blank" rel="noopener noreferrer">this blog</a> for the list of Node.js packages reaching end-of-life along with <code>loopback</code> repo. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="enriching-loopback-and-its-community---you-are-invited">Enriching LoopBack and its Community - You are Invited!<a href="#enriching-loopback-and-its-community---you-are-invited" class="hash-link" aria-label="Direct link to Enriching LoopBack and its Community - You are Invited!" title="Direct link to Enriching LoopBack and its Community - You are Invited!">​</a></h2><p>Your contribution is important to make LoopBack a sustainable open source project. Here is what you can do:</p><ul><li><a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Join LoopBack Slack community</a></li><li><a href="https://github.com/strongloop/loopback-next/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22" target="_blank" rel="noopener noreferrer">Look for first-contribution-friendly issues</a></li><li>Give us feedback and join our discussion in <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">our GitHub repo</a></li></ul><p>Let's make LoopBack a better framework together!</p>]]></content>
        <author>
            <name>Raymond Feng</name>
            <uri>https://github.com/raymondfeng</uri>
        </author>
        <author>
            <name>Miroslav Bajtoš</name>
            <uri>http://github.com/bajtos</uri>
        </author>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="LoopBack 3" term="LoopBack 3"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 September 2020 Milestone Update]]></title>
        <id>https://loopback.io/blog/september-2020-milestone</id>
        <link href="https://loopback.io/blog/september-2020-milestone"/>
        <updated>2020-10-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>We bring another month of new features, fixes, and improvements in documentation and developer experience in LoopBack. Make sure to update your compatible projects with <code>lb4 update</code> if you want to update the underlying libraries to their latest versions.</p><p>Also, as part of our long-term effort to encourage more community contributions, we are participating in this year’s <a href="https://hacktoberfest.digitalocean.com/" target="_blank" rel="noopener noreferrer">Hacktoberfest</a>. You can read more about the event and participation details at our <a href="https://strongloop.com/strongblog/2020-hacktoberfest/" target="_blank" rel="noopener noreferrer">Hacktoberfest blogpost</a>. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation-enhancements">Documentation Enhancements<a href="#documentation-enhancements" class="hash-link" aria-label="Direct link to Documentation Enhancements" title="Direct link to Documentation Enhancements">​</a></h2><p>There has been a continuous effort to improve our documentation. Below are some highlights for this month:</p><ul><li>A new documentation page, <a href="https://loopback.io/doc/en/lb4/Accessing-http-request-response.html" target="_blank" rel="noopener noreferrer">Accessing HTTP request and response objects</a>, was added explaining the various ways and places to access the request and response objects.</li><li>We are working on a series of troubleshooting guides for LoopBack. This month we completed the <a href="https://loopback.io/doc/en/lb4/Troubleshooting.html" target="_blank" rel="noopener noreferrer">basic guide</a> and <a href="https://loopback.io/doc/en/lb4/Debugging-tests-with-mocha.html" target="_blank" rel="noopener noreferrer">Debugging tests with Mocha</a>. <a href="https://github.com/strongloop/loopback-next/issues/5701#issuecomment-700955686" target="_blank" rel="noopener noreferrer">A few more areas</a> that can be added to the guide.</li><li>We added an <a href="https://github.com/strongloop/loopback-next/tree/master/examples/binding-resolution" target="_blank" rel="noopener noreferrer">example app</a> demonstrating LoopBack 4's context binding resolution and dependency injection within a context hierarchy.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-experimental-features">New Experimental Features<a href="#new-experimental-features" class="hash-link" aria-label="Direct link to New Experimental Features" title="Direct link to New Experimental Features">​</a></h2><ul><li>We have created a <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/graphql" target="_blank" rel="noopener noreferrer">GraphQL extension</a> that provides integration with GraphQL using <a href="https://typegraphql.com/" target="_blank" rel="noopener noreferrer">type-graphql</a>. Check out the <a href="https://github.com/strongloop/loopback-next/tree/master/examples/graphql" target="_blank" rel="noopener noreferrer">GraphQL example app</a> for a sample app.</li><li>We added support for parsing <a href="https://msgpack.org/index.html" target="_blank" rel="noopener noreferrer">MessagePack</a> bodies. For usage, refer to the <a href="https://github.com/strongloop/loopback-next/tree/master/bodyparsers/rest-msgpack" target="_blank" rel="noopener noreferrer">documentation</a>.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="investigation-on-better-handling-of-objectid-in-mongodb">Investigation on Better Handling of ObjectID in MongoDB<a href="#investigation-on-better-handling-of-objectid-in-mongodb" class="hash-link" aria-label="Direct link to Investigation on Better Handling of ObjectID in MongoDB" title="Direct link to Investigation on Better Handling of ObjectID in MongoDB">​</a></h2><p>We spent a good amount of time to improve the experience of using <code>ObjectID</code> with LoopBack. We have identified the direction we want to take and the tasks to work on. You can learn more about the spike in issue <a href="https://github.com/strongloop/loopback-next/issues/3456" target="_blank" rel="noopener noreferrer">3456</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="fixes-and-improvements">Fixes and Improvements<a href="#fixes-and-improvements" class="hash-link" aria-label="Direct link to Fixes and Improvements" title="Direct link to Fixes and Improvements">​</a></h2><ul><li><a href="https://github.com/strongloop/loopback-next/pull/6230" target="_blank" rel="noopener noreferrer">added <code>.onStart()</code> and <code>.onStop()</code> methods of the <code>Application</code></a>, so that they can be used to register observers as plain functions for the start and stop life-cycle events.</li><li><a href="https://github.com/strongloop/loopback-next/pull/6398" target="_blank" rel="noopener noreferrer">enhanced the <code>lb4 update</code> command</a> to be runnable against any projects that use <code>@loopback/*</code> dependencies in <code>dependencies</code> or <code>devDependencies</code>, or <code>peerDependencies</code>; not just LoopBack 4 projects.</li><li><a href="https://github.com/strongloop/loopback-next/pull/6390" target="_blank" rel="noopener noreferrer">included the application build when running <code>migrate</code> and <code>openapi-spec</code> scripts</a>.</li><li>added <code>@injectable</code>, so that <code>@injectable</code> can be used instead of <code>@bind</code>, which is in tune with other frameworks using Dependency Injection. <code>@bind</code> is not removed from the framework, so apps using <code>@bind</code> will not be affected.</li><li>made the <code>keepAliveTimeout</code>, <code>headersTimeout</code>, <code>maxConnections</code>, <code>maxHeadersCount</code>, and <code>timeout</code> properties of the underlying <a href="https://nodejs.org/dist/latest-v14.x/docs/api/http.html#http_class_http_server" target="_blank" rel="noopener noreferrer">HTTP server</a> instance <a href="https://github.com/strongloop/loopback-next/pull/6267" target="_blank" rel="noopener noreferrer">configurable by specifying them in the application config object</a>.</li><li><a href="https://github.com/strongloop/loopback-next/pull/6429" target="_blank" rel="noopener noreferrer">updated the generated application directory name during application scaffolding</a> when application names involve numbers</li><li>added <a href="https://github.com/strongloop/loopback-next/pull/6315" target="_blank" rel="noopener noreferrer">the ability to boot dynamic value provider classes and classes with <code>@inject</code></a>.</li><li>removed the <code>extension-</code> prefix from the affected extensions for their names to be consistent with other extension modules.</li><li><a href="https://github.com/strongloop/loopback-next/pull/6313" target="_blank" rel="noopener noreferrer">improved the overall experience of graphql configuration and subscriptions</a> in LoopBack. </li><li>added the <a href="https://github.com/strongloop/loopback-next/pull/6285" target="_blank" rel="noopener noreferrer">support of OpenAPI parameter AJV validation</a> on simple types and <a href="https://github.com/strongloop/loopback-next/pull/6262" target="_blank" rel="noopener noreferrer">AJV formats for OpenAPI spec data type formats</a>.</li><li><a href="https://github.com/strongloop/loopback-next/pull/6284" target="_blank" rel="noopener noreferrer">updated the REST middleware</a> so that it can now cached by the use of singleton binding scope.</li><li>added Twitter example in the <a href="https://github.com/strongloop/loopback-next/tree/master/examples/passport-login" target="_blank" rel="noopener noreferrer">Passport login example app</a>.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="community-contributions">Community Contributions<a href="#community-contributions" class="hash-link" aria-label="Direct link to Community Contributions" title="Direct link to Community Contributions">​</a></h2><p>Shout out to <a href="https://github.com/achrinza" target="_blank" rel="noopener noreferrer">Rifa Achrinza</a> for explaining the differences between weak and strong relations in PR <a href="https://github.com/strongloop/loopback-next/pull/6404" target="_blank" rel="noopener noreferrer">6404</a>, <a href="https://github.com/strongloop/loopback-next/pull/6155" target="_blank" rel="noopener noreferrer">MessagePack PR</a>, and his numerous other PRs.</p><p>Opening issues are community contributions too, so thanks to all those who help LoopBack become better by reporting bugs and usability issue. We try to address popular issues with higher priority, so continue to let us know the problems you face on <a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">GitHub</a> or <a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Slack</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="enriching-loopback-and-its-community---you-are-invited">Enriching LoopBack and its Community - You are Invited!<a href="#enriching-loopback-and-its-community---you-are-invited" class="hash-link" aria-label="Direct link to Enriching LoopBack and its Community - You are Invited!" title="Direct link to Enriching LoopBack and its Community - You are Invited!">​</a></h2><p>As mentioned in our <a href="https://strongloop.com/strongblog/2020-community-contribution/" target="_blank" rel="noopener noreferrer">recent blog post</a>, your contribution is important to make LoopBack a sustainable open source project. </p><p>Here is what you can do:</p><ul><li><a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Join LoopBack Slack community</a></li><li><a href="https://github.com/strongloop/loopback-next/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22" target="_blank" rel="noopener noreferrer">Look for first-contribution-friendly issues</a></li><li>Give us feedback and join our discussion in <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">our GitHub repo</a></li></ul><p>Let's make LoopBack a better framework together!</p>]]></content>
        <author>
            <name>Yaapa Hage</name>
            <uri>https://github.com/hacksparrow</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack is participating in Hacktoberfest 2020]]></title>
        <id>https://loopback.io/blog/2020-hacktoberfest</id>
        <link href="https://loopback.io/blog/2020-hacktoberfest"/>
        <updated>2020-09-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>As part of our long-term effort to <a href="/2020-community-contribution">encourange more community
contributions</a>,
LoopBack is going to participate in this year's
<a href="https://hacktoberfest.digitalocean.com" target="_blank" rel="noopener noreferrer">Hacktoberfest</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-hacktoberfest">What is Hacktoberfest?<a href="#what-is-hacktoberfest" class="hash-link" aria-label="Direct link to What is Hacktoberfest?" title="Direct link to What is Hacktoberfest?">​</a></h2><p>Hacktoberfest is an annual event encouraging participation in the open source community, open to everyone. Whether you’re new to development, a student, or a long-time contributor, you can help drive the growth of open source and make positive impact on an ever-growing community. All backgrounds and skills levels are encouraged to complete the challenge.</p><p>You can learn more about Hacktoberfest values at <a href="https://hacktoberfest.digitalocean.com/details#values" target="_blank" rel="noopener noreferrer">https://hacktoberfest.digitalocean.com/details#values</a>.</p><p>Participants completing the challenge (contributing at least 4 valid pull requests) will earn a limited edition T-shirt.</p><p><em>Please note that any prizes are subject to conditions set by Hacktoberfest. IBM and the LoopBack team are not involved and not responsible in any way.</em></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-participate">How to participate<a href="#how-to-participate" class="hash-link" aria-label="Direct link to How to participate" title="Direct link to How to participate">​</a></h2><p>Joining the effort is simple. Just pick any problem that is itching you and send a pull request to fix it. You can also choose one of LoopBack's issues labelled as <a href="https://github.com/issues?q=is%3Aopen+is%3Aissue+user%3Astrongloop+label%3AHacktoberfest" target="_blank" rel="noopener noreferrer">Hacktoberfest</a> or <a href="https://github.com/issues?q=is%3Aopen+is%3Aissue+user%3Astrongloop+label%3A%22good+first+issue%22" target="_blank" rel="noopener noreferrer">good first issue</a> if you need inspiration.</p><p>Make sure to familiarize yourself with Hacktoberfest's <a href="https://hacktoberfest.digitalocean.com/details#rules" target="_blank" rel="noopener noreferrer">Participation rules</a> and <a href="https://hacktoberfest.digitalocean.com/details#quality" target="_blank" rel="noopener noreferrer">Quality standards</a>; and also LoopBack's <a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing guide</a>.</p><p>Are you new to open source? No problem, we have you covered! Check out Hacktoberfest's <a href="https://hacktoberfest.digitalocean.com/details#beginners" target="_blank" rel="noopener noreferrer">Beginners</a> guides and LoopBack's guide on <a href="https://loopback.io/doc/en/lb4/submitting_a_pr.html" target="_blank" rel="noopener noreferrer">submitting a pull request to LoopBack 4</a>.</p><p>For the entire month of October, LoopBack's maintainers team will be giving extra priority to pull request reviews and helping new contributors along their journey to the first accepted contribution.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="focus-areas">Focus areas<a href="#focus-areas" class="hash-link" aria-label="Direct link to Focus areas" title="Direct link to Focus areas">​</a></h2><p>We are primarily looking for quick wins with long term impact: small enhancements improving your day-to-day experience while using LoopBack.</p><p>As you may know, we have introduced a new documentation system in June to better organize the content and make it easier to find the information you need (see <a href="/june-2020-milestone#new-documentation-structure">New Documentation Structure</a> and <a href="/june-2020-milestone#alignment-along-abstraction-levels">Alignment Along Abstraction Levels</a>). The reorganization is still in progress and we would love to get some help. In particular, extracting recipes from "Concepts" explanations into proper "How-to guides" is an easy way how to quickly score valuable pull requests. See the GitHub issue <a href="https://github.com/strongloop/loopback-next/issues/5783" target="_blank" rel="noopener noreferrer">loopback-next#5783</a> for the list of docs pages to rework.</p><p>Having said that, all improvements are welcome!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="closing-thoughts">Closing thoughts<a href="#closing-thoughts" class="hash-link" aria-label="Direct link to Closing thoughts" title="Direct link to Closing thoughts">​</a></h2><p>We are looking forward to receive and eventually land your pull requests. Let's make LoopBack a better framework together!</p>]]></content>
        <author>
            <name>Miroslav Bajtoš</name>
            <uri>http://github.com/bajtos</uri>
        </author>
        <category label="hacktoberfest" term="hacktoberfest"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Community Q&A Monthly Digest - Sept 2020]]></title>
        <id>https://loopback.io/blog/2020-sept-slack-qa</id>
        <link href="https://loopback.io/blog/2020-sept-slack-qa"/>
        <updated>2020-09-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Welcome back to the September edition of the "Community Q&amp;A Monthly Digest", in which we are curating some of the Q&amp;A that we think it might be helpful to you. Thank you for posting your questions and helping your fellow LoopBack users. </p><p>The <a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">LoopBack Slack community</a> is a platform where LoopBack users are helping each other out. If you haven't joined already, sign up today!</p><p>Let's take a look at some of the questions and answers from the community.</p><p><strong>Question:</strong> Is it possible to use auto-generate timestamp property in a model?</p><p><strong>Answer:</strong> To set the property to the current datetime upon Model Create, you can:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'date'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">defaultFn</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'now'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">timestamp</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p><strong>Question:</strong> Does LoopBack has any built-in cache? Or should we implement that to make response even faster?</p><p><strong>Answer:</strong>
We currently don’t but there are some example implementations for your reference:</p><ul><li><a href="https://github.com/strongloop/loopback-next/tree/master/packages/rest/src/__tests__/acceptance/caching-interceptor" target="_blank" rel="noopener noreferrer">caching interceptor</a></li><li><a href="https://github.com/strongloop/loopback-next/blob/master/examples/greeting-app/src/caching-service.ts" target="_blank" rel="noopener noreferrer">caching service</a></li></ul><hr><p><strong>Question:</strong> I want to perform schema migration but the order of tables is important beacause there are some relation and foreign key between them. How can I set the order of tables to be migrated?</p><p><strong>Answer:</strong> Within <code>migrate.ts</code>, <code>app.migrateSchema</code> accepts a <code>model</code> array. So it can be updated as such:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> app</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">migrateSchema</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">assign</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">SchemaMigrationOptions</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">models</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token comment" style="color:#999988;font-style:italic">/* Add model names here */</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> existingSchema</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Like with any auto-migration, please do take a backup of the database before running the migration.</p><hr><p><strong>Question:</strong> I wanted to implement an API like the <code>file-transfer</code> example on the docs but with more endpoints with different storage directories. How is that possible?</p><p><strong>Answer:</strong> You can have different endpoints backed by different methods using <code>post /&lt;url&gt;</code> decoration as you see at <a href="https://github.com/strongloop/loopback-next/blob/master/examples/file-transfer/src/controllers/file-upload.controller.ts#L28" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/blob/master/examples/file-transfer/src/controllers/file-upload.controller.ts#L28</a>. If you want to calculate the file path per request, you can instantiate a new upload service instance instead of using the injected one.</p><hr><p><strong>Questions:</strong> I work with LoopBack in a k8 cluster, when i try to implement JWT authentication, all users get the same token, and the data in that token is not equal to that user. Is there any way to fix it besides saving the token in a database? </p><p><strong>Answer:</strong> Typically JWT tokens are generated using a combination of a secret and some sort of UUID of the user. When they successfully authenticate, a token is generated and returned. When you need to verify the token, you decode it using the secret, giving you the UUID of the user. This means that you don’t actually have to save a token at all. Here’s how we are generating tokens for our users.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> userInfoForToken </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> userProfile</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> userProfile</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">roles</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> userProfile</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">roles</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Generate a JSON Web Token</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> token</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">token </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">signAsync</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">userInfoForToken</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">jwtSecret</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">expiresIn</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Number</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">jwtExpiresIn</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpErrors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unauthorized</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Error encoding token : </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">error</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In this context, <code>signAsync</code> is a <code>promisify</code>’d version of <code>jsonwebtoken.sign()</code>.</p><hr><p><strong>Question:</strong> I want to use the LoopBack app cli-command programmatically. Is this possible?</p><p><strong>Answer:</strong>
You can try to <code>require('@loopback/cli/lib/cli')</code>. See <a href="https://github.com/strongloop/loopback-next/blob/master/packages/cli/lib/cli.js" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/blob/master/packages/cli/lib/cli.js</a>. <code>cli.js</code> has logic to create yeoman env and register generators.</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="enriching-loopback-and-its-community---you-are-invited">Enriching LoopBack and its Community - You are Invited!<a href="#enriching-loopback-and-its-community---you-are-invited" class="hash-link" aria-label="Direct link to Enriching LoopBack and its Community - You are Invited!" title="Direct link to Enriching LoopBack and its Community - You are Invited!">​</a></h2><p>As mentioned in our <a href="https://strongloop.com/strongblog/2020-community-contribution/" target="_blank" rel="noopener noreferrer">recent blog post</a>, your contribution is important to make LoopBack a sustainable open source project. </p><p>Here is what you can do:</p><ul><li><a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Join LoopBack Slack community</a></li><li><a href="https://github.com/strongloop/loopback-next/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22" target="_blank" rel="noopener noreferrer">Look for first-contribution-friendly issues</a></li><li>Give us feedback and join our discussion in <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">our GitHub repo</a></li></ul><p>Let's make LoopBack a better framework together!</p>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="Community" term="Community"/>
        <category label="Slack" term="Slack"/>
        <category label="Q&A" term="Q&A"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 August 2020 Milestone Update]]></title>
        <id>https://loopback.io/blog/august-2020-milestone</id>
        <link href="https://loopback.io/blog/august-2020-milestone"/>
        <updated>2020-09-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Our focus in August is the documentation restructure. The layout of several main sections are reorganized for easier navigation. Another significant improvement is about the request handling. More flexible approaches of adding LoopBack style middleware and express middleware are introduced in <code>@loopback/rest</code>.</p><p>We would like to appreciate <a href="https://github.com/agnes512" target="_blank" rel="noopener noreferrer">Agnes Lin</a>'s great contributions during her internship. There has been so much fun and pleasure working with her! She will be continue helping us part time. Good luck with your school.</p><p>Keep reading to learn about the improved documentation and recently added features!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation-enhancements">Documentation Enhancements<a href="#documentation-enhancements" class="hash-link" aria-label="Direct link to Documentation Enhancements" title="Direct link to Documentation Enhancements">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="reorganizing-the-concepts-list">Reorganizing the Concepts List<a href="#reorganizing-the-concepts-list" class="hash-link" aria-label="Direct link to Reorganizing the Concepts List" title="Direct link to Reorganizing the Concepts List">​</a></h3><p>The fundamental concepts were listed in section "Behind the Scene" sorted by the publish date. To have a concise name and a more organized layout for users to search, we renamed the section to be "Concepts" and restructured the documentations into the following sub-sections:</p><ul><li>Crafting LoopBack 4</li><li>Core</li><li>REST APIs</li><li>Data Access</li></ul><p>You can visit the more organized contents in <a href="https://loopback.io/doc/en/lb4/Concepts.html" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/Concepts.html</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="reorganizing-how-to-guide-list">Reorganizing How-to Guide List<a href="#reorganizing-how-to-guide-list" class="hash-link" aria-label="Direct link to Reorganizing How-to Guide List" title="Direct link to Reorganizing How-to Guide List">​</a></h3><p>The "How-to Guide" is also reorganized by topics. The existing tutorials are classified into the following sections for users to search quickly:</p><ul><li>Building REST APIs</li><li>Creating Other Forms of APIS</li><li>Accessing Databases</li><li>Accessing Services</li><li>Validating Data</li><li>Securing Applications</li><li>Deploying Applications</li><li>Troubleshooting</li></ul><p>You can visit the more organized contents in <a href="https://loopback.io/doc/en/lb4/" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="adding-property-types">Adding Property Types<a href="#adding-property-types" class="hash-link" aria-label="Direct link to Adding Property Types" title="Direct link to Adding Property Types">​</a></h3><p>We added documentation for LoopBack 4 types including the syntax of model property definition in page <a href="https://loopback.io/doc/en/lb4/LoopBack-types.html" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/LoopBack-types.html</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="adding-application-layout">Adding Application Layout<a href="#adding-application-layout" class="hash-link" aria-label="Direct link to Adding Application Layout" title="Direct link to Adding Application Layout">​</a></h3><p>We added project layout for LoopBack 4 applications in page <a href="https://loopback.io/doc/en/lb4/Loopback-application-layout.html" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/Loopback-application-layout.html</a>, users can find each file's meaning and responsibility in the application scaffolded by <code>lb4 app</code>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="cleaning-up-extensions">Cleaning up Extensions<a href="#cleaning-up-extensions" class="hash-link" aria-label="Direct link to Cleaning up Extensions" title="Direct link to Cleaning up Extensions">​</a></h3><p>We are seeing more users creating extensions and it's a good time to make the extension creation experience easier and smoother. Therefore the extension generator and related documentations are updated to align with the latest code base. You can check the latest material in:</p><ul><li><a href="https://loopback.io/doc/en/lb4/Component.html" target="_blank" rel="noopener noreferrer">Concept Component</a></li><li><a href="https://loopback.io/doc/en/lb4/Creating-components.html" target="_blank" rel="noopener noreferrer">Creating Components</a></li></ul><p>And run <code>lb4 extension</code> to create extensions with the new component template.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="renaming-legacy-juggler">Renaming Legacy Juggler<a href="#renaming-legacy-juggler" class="hash-link" aria-label="Direct link to Renaming Legacy Juggler" title="Direct link to Renaming Legacy Juggler">​</a></h3><p>The term "legacy juggler bridge" might give the wrong impression to users that the <code>loopback-datasource-juggler</code> won't be supported or not working well because of the "legacy" word. So we removed the misleading word "legacy" across the documentations and CLI prompts.</p><p><code>loopback-datasource-juggler</code> is still well maintained and we have a plan to modernize it. Feel free to join the discussion in <a href="https://github.com/strongloop/loopback-next/issues/5956" target="_blank" rel="noopener noreferrer">issue #5956</a> if you are interested.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="investigation">Investigation<a href="#investigation" class="hash-link" aria-label="Direct link to Investigation" title="Direct link to Investigation">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="restructuring-connector-reference">Restructuring Connector Reference<a href="#restructuring-connector-reference" class="hash-link" aria-label="Direct link to Restructuring Connector Reference" title="Direct link to Restructuring Connector Reference">​</a></h3><p>The current connector contents are mixed with how-to guides, references and tutorials. The spike story <a href="https://github.com/strongloop/loopback-next/issues/5961" target="_blank" rel="noopener noreferrer">5961</a> came up with a better plan to reorganize them into the four quadrants layout:</p><ul><li>Connector concepts, its role in the framework and its relations to other artifacts will go to section "Concepts/Datasources".</li><li>Datasource level configurations and features like migration/discovery will go to section "How-to Guides/Configuring DataSource".</li><li>All the other connector specific tutorials will go to section "Tutorials/Connect to back-end tutorial".</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="improving-rest-experience">Improving REST Experience<a href="#improving-rest-experience" class="hash-link" aria-label="Direct link to Improving REST Experience" title="Direct link to Improving REST Experience">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="rest-middleware">REST Middleware<a href="#rest-middleware" class="hash-link" aria-label="Direct link to REST Middleware" title="Direct link to REST Middleware">​</a></h3><p>A big feature took place in <code>@loopback/rest</code> to support more flexible ways to add express middleware for handling requests. PR <a href="https://github.com/strongloop/loopback-next/pull/5366" target="_blank" rel="noopener noreferrer">#5366</a> added a middleware based sequence and wrapped existing actions as middleware. The new usage is documented in the following pages:</p><ul><li>Concept <a href="https://loopback.io/doc/en/lb4/Middleware.html" target="_blank" rel="noopener noreferrer">Middleware</a> in LoopBack 4.</li><li><a href="https://loopback.io/doc/en/lb4/REST-middleware-sequence.html" target="_blank" rel="noopener noreferrer">Middleware-based Sequence for REST Server</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="optimizing-middleware-based-sequence">Optimizing Middleware Based Sequence<a href="#optimizing-middleware-based-sequence" class="hash-link" aria-label="Direct link to Optimizing Middleware Based Sequence" title="Direct link to Optimizing Middleware Based Sequence">​</a></h3><p>PR <a href="https://github.com/strongloop/loopback-next/pull/6062" target="_blank" rel="noopener noreferrer">#6062</a> optimized middleware based sequence and its middleware providers to be singletons:</p><ul><li>MiddlewareSequence is now a singleton and it caches a list of middleware.</li><li>Built-in middleware providers are now singletons.</li><li>Validating sorted middleware groups is supported. Error will be reported if a middleware is unreachable.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="improving-serviceability-of-loopbackrest">Improving Serviceability of @loopback/rest<a href="#improving-serviceability-of-loopbackrest" class="hash-link" aria-label="Direct link to Improving Serviceability of @loopback/rest" title="Direct link to Improving Serviceability of @loopback/rest">​</a></h3><p>There are several improvements made for easier debugging and error tracing in <code>@loopback/rest</code> module:</p><ul><li><p>PR <a href="https://github.com/strongloop/loopback-next/pull/6159" target="_blank" rel="noopener noreferrer">#6159</a> added more debug information for request parsing, routing, and method invocation. The debugging keywords are <code>loopback:rest:find-route</code>, <code>loopback:rest:invoke-method</code>, and <code>loopback:rest:parse-param</code>.</p></li><li><p>The route description is improved in PR <a href="https://github.com/strongloop/loopback-next/pull/6168" target="_blank" rel="noopener noreferrer">#6188</a> to include the verb and the path.</p></li><li><p>PR <a href="https://github.com/strongloop/loopback-next/pull/6171" target="_blank" rel="noopener noreferrer">#6171</a> added HTTP server options and status information in the debug string. The debugging keyword is <code>loopback:http-server</code>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="switching-to-dco">Switching to DCO<a href="#switching-to-dco" class="hash-link" aria-label="Direct link to Switching to DCO" title="Direct link to Switching to DCO">​</a></h2><p>To <a href="https://strongloop.com/strongblog/switching-to-dco/" target="_blank" rel="noopener noreferrer">make your contribution process simpler</a>, we have changed the contribution method from CLA to DCO for <code>loopback-next</code> and most of the connector repositories. Be sure to sign off your commits using the <code>-s</code> flag or adding <code>Signed-off-By: Name&lt;Email&gt;</code> in the commit message. For more details, see <a href="https://loopback.io/doc/en/contrib/code-contrib.html#developer-certificate-of-origin-dco" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/contrib/code-contrib.html</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="miscellaneous">Miscellaneous<a href="#miscellaneous" class="hash-link" aria-label="Direct link to Miscellaneous" title="Direct link to Miscellaneous">​</a></h2><ul><li><p>PR <a href="https://github.com/strongloop/loopback-next/pull/6172" target="_blank" rel="noopener noreferrer">#6172</a> makes sure the REST options are passed to http-server.</p></li><li><p>PR <a href="https://github.com/strongloop/loopback-next/pull/6105" target="_blank" rel="noopener noreferrer">#6105</a> Reworked the validation code to use exiting <code>RestHttpErrors.invalidData</code> error. This way the error object includes the parameter name in the error message &amp; properties and has a machine-readable code property.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="community-contributions">Community Contributions<a href="#community-contributions" class="hash-link" aria-label="Direct link to Community Contributions" title="Direct link to Community Contributions">​</a></h2><p>Thank you for the contribution coming from the community. Here are some of the contributions that we'd like highlight:</p><ul><li><p>Thanks to <a href="https://github.com/nflaig" target="_blank" rel="noopener noreferrer">Nico Flaig</a>'s <a href="https://github.com/strongloop/loopback-next/pull/5735" target="_blank" rel="noopener noreferrer">contribution</a>! Now <code>@loopback/authenticate</code> supports applying multiple authentication strategies to one endpoint. The new syntax of decorator is:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">authenticate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  strategyOne </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> strategyOneWithOptions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  strategyTwo </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> strategyTwoWithOptions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">myFunction</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The new syntax is well documented in page <a href="https://loopback.io/doc/en/lb4/Authentication-component-decorator.html" target="_blank" rel="noopener noreferrer">Authentication Decorator</a>.</p></li><li><p>We appreciate <a href="https://github.com/madaky" target="_blank" rel="noopener noreferrer">Madaky</a>'s feature PR <a href="https://github.com/strongloop/loopback-next/pull/5589" target="_blank" rel="noopener noreferrer">#5589</a> which adds the token refresh service in extension <code>@loopback/authentication-jwt</code>. You can check the <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/authentication-jwt#endpoints-with-refresh-token" target="_blank" rel="noopener noreferrer">new guide</a> to try it.</p></li><li><p>Many thanks to <a href="https://github.com/achrinza" target="_blank" rel="noopener noreferrer">Rifa Achrinza</a>'s contribution in PR <a href="https://github.com/strongloop/loopback-next/pull/6153" target="_blank" rel="noopener noreferrer">6153</a>. The order filter now supports string value as the shortcut in addition to the existing array value. You can specify an order filter as <code>{order: 'name DESC'}</code>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="enriching-loopback-and-its-community---you-are-invited">Enriching LoopBack and its Community - You are Invited!<a href="#enriching-loopback-and-its-community---you-are-invited" class="hash-link" aria-label="Direct link to Enriching LoopBack and its Community - You are Invited!" title="Direct link to Enriching LoopBack and its Community - You are Invited!">​</a></h2><p>As mentioned in our <a href="https://strongloop.com/strongblog/2020-community-contribution/" target="_blank" rel="noopener noreferrer">recent blog post</a>, your contribution is important to make LoopBack a sustainable open source project. </p><p>Here is what you can do:</p><ul><li><a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Join LoopBack Slack community</a></li><li><a href="https://github.com/strongloop/loopback-next/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22" target="_blank" rel="noopener noreferrer">Look for first-contribution-friendly issues</a></li><li>Give us feedback and join our discussion in <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">our GitHub repo</a></li></ul><p>Let's make LoopBack a better framework together!</p>]]></content>
        <author>
            <name>Janny Hou</name>
            <uri>https://github.com/jannyhou</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Enriching LoopBack and its Community - You are Invited!]]></title>
        <id>https://loopback.io/blog/2020-community-contribution</id>
        <link href="https://loopback.io/blog/2020-community-contribution"/>
        <updated>2020-08-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Almost two years ago, <a href="https://strongloop.com/strongblog/loopback-4-ga" target="_blank" rel="noopener noreferrer">LoopBack 4 was released and announced</a> at Node+JS Interactive event. Thanks to your support, we now have over 110k downloads per month on npmjs.com and over 3000 GitHub stars on the <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">loopback-next repo</a>. Recently, we created the <a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">LoopBack Slack community</a> to provide a platform for the community and us helping each other. We are glad to see an increasing engagement in that front as well!</p><p>With the core of the framework maturing and contributions shifting to the LoopBack extensions, we think LoopBack has entered a new stage and it's time to revisit our approach to planning work, delivering features, fixing bugs, and improving documentation.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-short-history-of-loopback-4">A Short History of LoopBack 4<a href="#a-short-history-of-loopback-4" class="hash-link" aria-label="Direct link to A Short History of LoopBack 4" title="Direct link to A Short History of LoopBack 4">​</a></h2><p>As we started the rewrite of LoopBack from ground up back in early 2017 (see the <a href="https://strongloop.com/strongblog/announcing-loopback-next/" target="_blank" rel="noopener noreferrer">kick-off post</a>), it quickly became clear the scope is huge and we must be very disciplined in planning and scoping features if we want to reach a meaningful release in a reasonable time. We were working in short iterations, burning through a backlog of tasks we identified as required for the initial release. Eventually we published the first <a href="https://strongloop.com/strongblog/loopback-4-developer-preview-release" target="_blank" rel="noopener noreferrer">Developer Preview</a> in November 2017, followed by more preview releases, until we finally released <a href="https://strongloop.com/strongblog/loopback-4-ga" target="_blank" rel="noopener noreferrer">LoopBack 4 GA</a> in October 2018. Keeping a tight control over backlog prioritization and milestone planning allowed us to achieve this great milestone.</p><p>Such a tight planning worked great while it was mostly the IBM core team working on the project. On the flip side, this process made it sometimes difficult to juggle our time between working on our roadmap vs helping community contributors; and often created the impression that the core team will eventually implement all missing features, given enough time, and community contributions are not really necessary. This was acceptable while the framework offered only a limited subset of features needed to build real applications, because there were only few early adopters to support and it was indeed the core team that was contributing most of the improvements.</p><p>As more and more users discover and try LoopBack, they may find feature gaps, identify bugs, or even come up great ideas. If the perception is that somebody else (the core team) will eventually implement those features, then there are little incentives for users to step up and join the project as contributors. As a result, the number of maintainers is not keeping up with the growing number of users, leading to ever-increasing load on existing maintainers and eventually maintainers burning out or leaving the project. (You can read more on this topic in <a href="https://medium.com/the-node-js-collection/healthy-open-source-967fa8be7951" target="_blank" rel="noopener noreferrer">Healthy Open Source</a> and <a href="https://medium.com/loopback/sustaining-loopback-project-b67fd59673e4" target="_blank" rel="noopener noreferrer">Sustaining and growing LoopBack as a successful open source project</a>).</p><p>Many of us has experienced this ourselves in the past, when LoopBack 3 got to the stage where the maintainers were overwhelmed with the amount of incoming issues and pull requests. We feel it's time to turn the ship around and make sure we don't repeat the same mistakes in LoopBack 4. As LoopBack 4 user base grows, it is essential to grow our contributor community joining forces to enhance the framework together.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="encourage-more-community-contributions">Encourage More Community Contributions<a href="#encourage-more-community-contributions" class="hash-link" aria-label="Direct link to Encourage More Community Contributions" title="Direct link to Encourage More Community Contributions">​</a></h2><p>We have been always actively looking for new ways to attract more contributions from our community and grow contributors into maintainers.</p><p>To make it easy for our users to find easy-to-implement improvements to contribute, we are adding <code>good first issue</code> and <code>help wanted</code> labels on GitHub issues, and listing items we'd like to see progress in our roadmaps and milestones.</p><p>In addition, we recently made <a href="https://strongloop.com/strongblog/switching-to-dco/" target="_blank" rel="noopener noreferrer">an announcement</a> about switching the contribution method to Developer Certificate of Origin (DCO) from Contributor License Agreement (CLA). We hope this will make the contribution process easier for you.</p><p>Going forward, we would like to focus more on enabling more of you to contribute by mentoring and coaching them to complete their PRs and providing technical guidance on their work if needed. We would also like to create more examples and starter code for experimental features, and invite the community to enhance those features collectively.</p><p>To further encourage community contributions, we are going to open our planning process too and start building the roadmap together with our community, based on what tasks individual contributors would like to work on.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="inspire-more-community-extensions">Inspire More Community Extensions<a href="#inspire-more-community-extensions" class="hash-link" aria-label="Direct link to Inspire More Community Extensions" title="Direct link to Inspire More Community Extensions">​</a></h2><p>One of the strengths of LoopBack 4 is its extensibility. You can create extensions to extend the programming model and integration capability of the LoopBack 4 framework.</p><p>We created a number of extensions, for example, the recently published <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/typeorm" target="_blank" rel="noopener noreferrer">TypeORM</a> and <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/pooling" target="_blank" rel="noopener noreferrer">pooling service</a> extensions. These can be served as references to inspire you to build extensions to fit your needs. </p><p>Moreover, we'll be working on <a href="https://github.com/strongloop/loopback-next/issues/5336" target="_blank" rel="noopener noreferrer">cleaning up the extension template and documentation</a>, so that the developer experience of building an extension is smoother.</p><p>At the same time, we're happy to see more extensions built by the community, see the <a href="https://loopback.io/doc/en/lb4/Community-extensions.html" target="_blank" rel="noopener noreferrer">community extensions page</a>. Let's build this list together by submitting a PR to include your extensions!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="potential-work-under-our-radar">Potential Work under Our Radar<a href="#potential-work-under-our-radar" class="hash-link" aria-label="Direct link to Potential Work under Our Radar" title="Direct link to Potential Work under Our Radar">​</a></h2><p>We have been investigating a few areas that can further improve LoopBack 4 based on our visions, even more importantly community feedbacks. There are some ideas for inspiration.</p><p>Modernizing the juggler has been under our radar. We would like to position LoopBack as the composition layer that brings API/microservice stories together. It will include built-in capabilities such as REST API and Data/Service access as well as integration with other frameworks. We're planning to publish a blog to cover that. Stay tuned.</p><p>Below are areas that we've done some initial investigation/implementation and would like to invite you to join us to build a more complete story. It includes continuing to improve our documentation and building more education materials. Likewise, we'll be publishing blog posts to share our plans and visions in the following areas:</p><ul><li><a href="https://github.com/strongloop/loopback-next/tree/master/examples/multi-tenancy" target="_blank" rel="noopener noreferrer">Multi-tenancy</a></li><li><a href="https://github.com/raymondfeng/loopback4-example-websocket" target="_blank" rel="noopener noreferrer">Web socket</a></li><li><a href="https://github.com/strongloop/loopback4-example-kafka" target="_blank" rel="noopener noreferrer">Kafka integration</a></li><li><a href="https://github.com/strongloop/loopback-next/pull/5545" target="_blank" rel="noopener noreferrer">GraphQL</a></li><li><a href="https://github.com/strongloop/loopback-next/pull/6134" target="_blank" rel="noopener noreferrer">gRPC</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2><p>Your contribution is important to make LoopBack a sustainable open source project. We hope our plans to adopt DCO, improve the extension development experience and focus on enabling contributors would make your contribution experience smoother and better. We are also planning on sharing our views on a few technologies. </p><p>Here is what you can do:</p><ul><li><a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Join LoopBack Slack community</a></li><li><a href="https://github.com/strongloop/loopback-next/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22" target="_blank" rel="noopener noreferrer">Look for first-contribution-friendly issues</a></li><li>Give us feedback and join our discussion in <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">our GitHub repo</a></li></ul><p>Let's make LoopBack a better framework together!</p>]]></content>
        <author>
            <name>Raymond Feng</name>
            <uri>https://github.com/raymondfeng</uri>
        </author>
        <author>
            <name>Miroslav Bajtoš</name>
            <uri>http://github.com/bajtos</uri>
        </author>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="Community" term="Community"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Community Q&A Monthly Digest - July 2020]]></title>
        <id>https://loopback.io/blog/2020-jul-slack-qa</id>
        <link href="https://loopback.io/blog/2020-jul-slack-qa"/>
        <updated>2020-08-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Welcome to the July edition of the "Community Q&amp;A Monthly Digest", curating some of the Q&amp;A that we think it might be helpful to you. Let's take a look.</p><hr><p><strong>Question</strong>: Is there a built-in support in LB4 for database retries if the db responds with 429 for example? Or is it possible to overwrite a single method to implement this for all db operations similiar to how entityToData can be overwriten if data should be added to all create/update operations.</p><p><strong>Answer</strong>: It's better to intercept execution errors inside the datasource, not at repository level. I created a small example to demonstrate the approach. In a real app, I would extract the code into a mixin that can be applied on any DataSource class.
<a href="https://gist.github.com/bajtos/2379d7c6df31e477aaa3a3f6ea87886c" target="_blank" rel="noopener noreferrer">https://gist.github.com/bajtos/2379d7c6df31e477aaa3a3f6ea87886c</a></p><hr><p><strong>Question</strong>: Is it possible to connect my API to a webhook, so that when an event is triggered, it notifies my API? What documentation could I read about doing this?</p><p><strong>Answer</strong>: A webhook is just another HTTP request. Depending on the architecture of the lb4 app, this request can be done in a Service, an Interceptor, or a Controller, using either the built-in Node.js API or third-party HTTP request modules such as Axios.
Besides that, no special configuration is needed for web hooks.&nbsp;</p><hr><p><strong>Question</strong>: How to implement&nbsp;<code>findOrCreate</code>&nbsp;instead&nbsp;<code>await exists</code>&nbsp;+&nbsp;<code>await create</code>?</p><p><strong>Answer</strong>: You can extend&nbsp;<code>DefaultCrudRepository</code>&nbsp;with&nbsp;<code>findOrCreate</code>&nbsp;’s implementation.
Then your repositories extend the custom one. Similar to&nbsp;how <code>AccountRepository</code> extends <code>MyDefaultCrudRepository</code> in the tutorial <a href="https://loopback.io/doc/en/lb4/Repositories.html#define-repositories" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/Repositories.html#define-repositories</a>.</p><hr><p><strong>Question</strong>: I started using Loopback 4. How to redirect home screen of LB4 to angular 8 running on some other port?</p><p><strong>Answer</strong>: It should be possible to replace the <code>.static</code> function in the app class with <code>.redirect</code>: <a href="https://loopback.io/doc/en/lb4/apidocs.rest.restapplication.redirect.html" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/apidocs.rest.restapplication.redirect.html</a>.</p><hr><p><strong>Question</strong>: The compiler throws the error <code>error TS2322: Type 'string' is not assignable to type PredicateComparison&lt;..&gt;</code> when I tried some repository CRUD methods. Is it a bug or anything wrong with my setup?</p><p><strong>Answer</strong>: It is a type issue. For <a href="https://loopback.io/doc/en/lb4/apidocs.repository.defaultcrudrepository.html#methods" target="_blank" rel="noopener noreferrer">repository CRUD methods</a>, they may take in <code>Filter</code> or <code>Where</code> type parameters. For those cases, you will need to specify the type of it, for example:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> userCount </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">userRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">tags</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'admin'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> Where</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">User</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> vipUser </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">userRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">where</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">tags</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'vip'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> Filter</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">User</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p><strong>Question</strong>: We have a project which includes multi-tenancy based multi-database pattern (We have Common DB which stores Client Informations (Users, DB configs etc), and each clients has own database). How can I perform switching datasource dynamically with the multi-tenancy based project?</p><p><strong>Answer</strong>: You can check out <a href="https://github.com/strongloop/loopback-next/tree/master/examples/multi-tenancy" target="_blank" rel="noopener noreferrer">the multi-tenancy example</a> and <a href="https://github.com/strongloop/loopback-next/issues/5056" target="_blank" rel="noopener noreferrer">the GH issue</a> that discusses about multi-tenancy and dynamic schema selection. You can create datasources at runtime. Meanwhile, if the number of dbs is limited, you can define them upfront and reuse them, see <a href="https://loopback.io/doc/en/lb4/DataSources.html#creating-a-datasource-at-runtime" target="_blank" rel="noopener noreferrer">Creating a datasource at runtime</a>. Then the tenant strategy can inject a repository talking to your common DB to load configs per logged in user.</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="interested-to-join-our-slack-workspace">Interested to Join our Slack Workspace?<a href="#interested-to-join-our-slack-workspace" class="hash-link" aria-label="Direct link to Interested to Join our Slack Workspace?" title="Direct link to Interested to Join our Slack Workspace?">​</a></h2><p>Simply click <a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">this invitation link</a> to join. You can also find more channel details here: <a href="https://github.com/strongloop/loopback-next/issues/5048" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/issues/5048</a>.</p>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="Community" term="Community"/>
        <category label="Slack" term="Slack"/>
        <category label="Q&A" term="Q&A"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 July 2020 Milestone Update]]></title>
        <id>https://loopback.io/blog/july-2020-milestone</id>
        <link href="https://loopback.io/blog/july-2020-milestone"/>
        <updated>2020-08-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>We can't believe that it is already August! Let's check out the work we did in July:</p><ul><li><a href="#hasmanythrough-relation">HasManyThrough Relation</a></li><li><a href="#documentation-enhancements">Documentation Enhancements</a></li><li><a href="#reorganize-code-and-docs-along-abstraction-levels">Reorganize Code and Docs Along Abstraction Levels</a></li><li><a href="#bug-fixes">Bug Fixes</a></li><li><a href="#community-contribution">Community Contribution</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="hasmanythrough-relation">HasManyThrough Relation<a href="#hasmanythrough-relation" class="hash-link" aria-label="Direct link to HasManyThrough Relation" title="Direct link to HasManyThrough Relation">​</a></h2><p>A <code>HasManyThrough</code> relation sets up a many-to-many connection through another model. A real-world example is a doctor has many patients through appointments. The relation can be defined with <code>@hasMany</code> decorator as:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">hasMany</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> Patient</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">through</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token function-variable function" style="color:#d73a49">model</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> Appointment</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  patients</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Patient</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We finished most of implementation in June, and we added <code>HasManyThrough</code> to the relation CLI and also related documentation so that users could learn it better. Please make sure you have <code>@loopback/repository</code> with version 2.10.0 or higher installed.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="documentation">Documentation<a href="#documentation" class="hash-link" aria-label="Direct link to Documentation" title="Direct link to Documentation">​</a></h3><p>The <a href="https://loopback.io/doc/en/lb4/HasManyThrough-relation.html" target="_blank" rel="noopener noreferrer"><code>hasManyThrough</code> Relation</a> page is being added under <a href="https://loopback.io/doc/en/lb4/Relations.html" target="_blank" rel="noopener noreferrer">Relations</a> page. We introduced the use cases, definitions, and examples of how you can customize the relation to meet your requirements. Nevertheless, as mentioned in the docs, because it is an experimental feature, there are some missing functionalities such as <a href="https://github.com/strongloop/loopback-next/issues/5946" target="_blank" rel="noopener noreferrer"><code>inclusionResolver</code></a>. Feel free to join discussions on GitHub or even contribute :D</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="cli-command">CLI Command<a href="#cli-command" class="hash-link" aria-label="Direct link to CLI Command" title="Direct link to CLI Command">​</a></h3><p>Command line interfaces (CLI) is a convenient tool to help you create artifacts quickly. We added <code>hasManyThrough</code> relation to <code>lb4 relation</code> command. With a few prompts, you can define a <code>hasManyThrough</code> relation easily:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ lb4 relation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please select the relation type hasManyThrough</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please select source model Doctor</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please select target model Patient</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please select through model Appointment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Foreign key name that references the source model to define on the through model</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> doctorId</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Foreign key name that references the target model to define on the through model</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> patientId</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Source property name for the relation getter (will be the relation name)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> patients</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Don't forget to install the latest <code>@loopback/cli</code> to try it out!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation-enhancements">Documentation Enhancements<a href="#documentation-enhancements" class="hash-link" aria-label="Direct link to Documentation Enhancements" title="Direct link to Documentation Enhancements">​</a></h2><p>One of our recent targets is to upgrade the documentation system. As you can see on the site, we reorganized most of the items in sidebar. In the overview page, the section <a href="https://loopback.io/doc/en/lb4/index.html#how-is-our-documentation-organized" target="_blank" rel="noopener noreferrer">How is our documentation organized</a> introduces how you can find documentation in the four quadrants.</p><p>Besides improving the structure, here are some documentation enhancements we'd like to share:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="apply-jwt-authentication-component-to-shopping-example">Apply JWT Authentication Component to Shopping Example<a href="#apply-jwt-authentication-component-to-shopping-example" class="hash-link" aria-label="Direct link to Apply JWT Authentication Component to Shopping Example" title="Direct link to Apply JWT Authentication Component to Shopping Example">​</a></h3><p>The <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/authentication-jwt" target="_blank" rel="noopener noreferrer"><code>@loopback/authentication-jwt</code></a> component was created to make adding JWT authentication to your application earlier. We've applied it to the <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer">shopping example</a>. To find out more, see the <a href="https://loopback.io/doc/en/lb4/JWT-authentication-extension.html" target="_blank" rel="noopener noreferrer">JWT authentication extension documentation page</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-access-multiple-models-in-a-single-transaction">How to Access Multiple Models in a Single Transaction<a href="#how-to-access-multiple-models-in-a-single-transaction" class="hash-link" aria-label="Direct link to How to Access Multiple Models in a Single Transaction" title="Direct link to How to Access Multiple Models in a Single Transaction">​</a></h3><p>A <em>transaction</em> is a sequence of data operations performed as a single logical
unit of work. LoopBack 4 has many relational database connectors support such logic requirements. We added a section <a href="https://loopback.io/doc/en/lb4/Using-database-transactions.html#accessing-multiple-models-inside-one-transaction" target="_blank" rel="noopener noreferrer">Accessing multiple models inside one transaction</a> to show how it can be achieved.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="custom-ajv-validation">Custom AJV Validation<a href="#custom-ajv-validation" class="hash-link" aria-label="Direct link to Custom AJV Validation" title="Direct link to Custom AJV Validation">​</a></h3><p>We realized that the current AJV Validation documentation is missing a crucial information piece on how to enable custom validation and error messages. Please check out the section <a href="https://loopback.io/doc/en/lb4/Model.html#custom-validation-rules-and-error-messages" target="_blank" rel="noopener noreferrer">Custom validation rules and error messages</a> and <a href="https://github.com/strongloop/loopback-next/tree/master/examples/validation-app" target="_blank" rel="noopener noreferrer">Validation example</a> for details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reorganize-code-and-docs-along-abstraction-levels">Reorganize Code and Docs Along Abstraction Levels<a href="#reorganize-code-and-docs-along-abstraction-levels" class="hash-link" aria-label="Direct link to Reorganize Code and Docs Along Abstraction Levels" title="Direct link to Reorganize Code and Docs Along Abstraction Levels">​</a></h2><p>As LoopBack 4 is growing larger, we decide to hide some low-level tools from users so that the framework looks neat and friendly. In July, we hid module <a href="https://github.com/strongloop/loopback-next/tree/master/packages/openapi-v3" target="_blank" rel="noopener noreferrer"><code>@loopback/openapi-v3</code></a> as it can be loaded from <a href="https://github.com/strongloop/loopback-next/tree/master/packages/rest" target="_blank" rel="noopener noreferrer"><code>@loopback/rest</code></a>.</p><p>We removed <code>@loopback/openapi-v3</code> from dependencies and also our CLI template dependencies. If you check the page <a href="https://loopback.io/doc/en/lb4/Extending-OpenAPI-specification.html" target="_blank" rel="noopener noreferrer">Extending OpenAPI Specification</a> or other related pages, you will notice it is now hidden and replaced by <code>@loopback/rest</code>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="execute-raw-nosql-queries">Execute Raw NoSQL Queries<a href="#execute-raw-nosql-queries" class="hash-link" aria-label="Direct link to Execute Raw NoSQL Queries" title="Direct link to Execute Raw NoSQL Queries">​</a></h2><p>If you have a SQL database as back-end service, you can execute raw queries using the <code>execute</code> method that we have in <code>Repository</code>, and it works great. Unfortunately, <code>execute</code> does not work for NoSQL connectors such as MongoDB as they require more than just a <code>command</code> string and <code>args</code> array.</p><p>In July, we started working on how we can improve LB4 API and MongoDB connector API to make it easy to execute raw MongoDB commands. We added a <code>DataSource.execute</code> method to the Juggler, and leveraged it to support different <code>execute</code> styles. We also added support for non-SQL variants of <code>Repository.execute()</code> in the <code>loopback/repository</code> module. More works will be done in August. You can check the progress in story <a href="https://github.com/strongloop/loopback-next/issues/3342" target="_blank" rel="noopener noreferrer">Execute raw NoSQL queries</a> on GitHub if you're interested.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="bug-fixes">Bug Fixes<a href="#bug-fixes" class="hash-link" aria-label="Direct link to Bug Fixes" title="Direct link to Bug Fixes">​</a></h2><p>There was a story that a boy woke up in one morning and found himself transformed into a gigantic bug. We don't want that to happen, so we fixed a few bugs in July:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="unable-to-perform-nested-filters">Unable to Perform Nested Filters<a href="#unable-to-perform-nested-filters" class="hash-link" aria-label="Direct link to Unable to Perform Nested Filters" title="Direct link to Unable to Perform Nested Filters">​</a></h3><p>As we added the support for coercing query object with schema last month, it exposed a bug that the nested scope filters don't have the correct constraints. It is being fixed and released in <code>@loopback/rest@5.2.1</code>. Now you can include nested navigational properties using filter like:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  include</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      relation</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"orders"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      scope</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// nested relation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        include</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            relation</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"someOtherRelation"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="query-with-dollar-signs-in-mongodb-connector">Query with Dollar Signs in MongoDB Connector<a href="#query-with-dollar-signs-in-mongodb-connector" class="hash-link" aria-label="Direct link to Query with Dollar Signs in MongoDB Connector" title="Direct link to Query with Dollar Signs in MongoDB Connector">​</a></h3><p>If you're using MongoDB, you would be used to have dollar signs ($) in your queries. However, the dollar signs are not needed in LB4 general queries, and that's why <a href="https://github.com/strongloop/loopback-connector-mongodb" target="_blank" rel="noopener noreferrer">loopback-mongodb-connector</a> users get confused usually. To improve the user experience, we made some changes in the connector <a href="https://github.com/strongloop/loopback-connector-mongodb" target="_blank" rel="noopener noreferrer">loopback-mongodb-connector</a>, so that the connector users won't get errors even if the queries contain extra dollar signs. The change is released in <code>@loopback-connector-mongodb@5.3.0</code></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="community-contribution">Community Contribution<a href="#community-contribution" class="hash-link" aria-label="Direct link to Community Contribution" title="Direct link to Community Contribution">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-community-maintainers">New Community Maintainers<a href="#new-community-maintainers" class="hash-link" aria-label="Direct link to New Community Maintainers" title="Direct link to New Community Maintainers">​</a></h3><p>We are glad to have <a href="https://github.com/nabdelgadir" target="_blank" rel="noopener noreferrer">@nabdelgadir</a> and <a href="https://github.com/madaky" target="_blank" rel="noopener noreferrer">@madaky</a> to be one of our community maintainers. We appreciate your great work you've done and welcome to the team.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="highlights">Highlights<a href="#highlights" class="hash-link" aria-label="Direct link to Highlights" title="Direct link to Highlights">​</a></h3><ul><li>As LoopBack 4 is designed to be more scalable and extensible, there are numbers of extensions created by the open source community. You may find some interesting and helpful extensions under the <a href="https://loopback.io/doc/en/lb4/Community-extensions.html" target="_blank" rel="noopener noreferrer">Community extensions</a> page. We are also considering adding example usages of LB4 from the community. Please let us know if you got any great extensions or examples you would like to share with us!</li><li>The community user <a href="https://github.com/zyqVizzzzz" target="_blank" rel="noopener noreferrer">@zyqVizzzzz</a> translated several tutorials for LB4 in Chinese. They can be found in the page <a href="https://loopback.io/doc/zh/lb4/Tutorials" target="_blank" rel="noopener noreferrer">教程（Tutorials）</a>. We really appreciate it! If you're interested in translating LB4 documentation, the instructions can be found in the page <a href="https://loopback.io/doc/en/contrib/translation.html" target="_blank" rel="noopener noreferrer">Translation</a>.</li></ul><p>In order to make your contribution process simpler, we will be gradually changing the contribution method from Contribution License Agreement (CLA) to Developer Certificate of Origin (DCO). Take a look at <a href="https://strongloop.com/strongblog/switching-to-dco/" target="_blank" rel="noopener noreferrer">this blog</a> to find out what the changes are and what it means to you.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>If you're interested in what we're working on next, you can check out the <a href="https://github.com/strongloop/loopback-next/pull/6028" target="_blank" rel="noopener noreferrer">August Milestone</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>In 2020, we look forward to helping you and seeing you around! LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Agnes Lin</name>
            <uri>https://github.com/agnes512</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Making Your Contribution Process Simpler - Switching from CLA to DCO]]></title>
        <id>https://loopback.io/blog/switching-to-dco</id>
        <link href="https://loopback.io/blog/switching-to-dco"/>
        <updated>2020-07-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Since the beginning of the LoopBack project, we have been using the Contributor License Agreement (CLA) as the contribution method. Contributors need to sign each CLA for each LoopBack repository they're contributing. To simplify the contribution process and encourage community contributions, we are planning to gradually switch to use <a href="https://developercertificate.org/" target="_blank" rel="noopener noreferrer">Developer Certificate of Origin (DCO)</a> as the contribution method. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-developer-certificate-of-origin-dco">What Is Developer Certificate of Origin (DCO)?<a href="#what-is-developer-certificate-of-origin-dco" class="hash-link" aria-label="Direct link to What Is Developer Certificate of Origin (DCO)?" title="Direct link to What Is Developer Certificate of Origin (DCO)?">​</a></h2><p>As an alternative to CLA, a Developer Ceritifcate of Origin (DCO) is a more lightweight contribution method. According to <a href="https://en.wikipedia.org/wiki/Developer_Certificate_of_Origin" target="_blank" rel="noopener noreferrer">Wikipedia</a>:</p><blockquote><p>Instead a signed legal contract, a DCO is an affirmation that the source code being submitted originated from the developer, or that the developer has permission to submit the code.</p></blockquote><p>The full text of DCO can be found: <a href="https://developercertificate.org/" target="_blank" rel="noopener noreferrer">https://developercertificate.org/</a>. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-are-we-switching">Why Are We Switching?<a href="#why-are-we-switching" class="hash-link" aria-label="Direct link to Why Are We Switching?" title="Direct link to Why Are We Switching?">​</a></h2><p>Community contributions are vital to the success of LoopBack. Since DCO simply needs your affirmation that you are the one who is submitting the code, we hope this switch would make the contribution process simpler and thus encourages more contributions from you!</p><p>In addition, this change can help us to reduce the infrastructure cost, including the team's time and effort, to maintain the CLA server. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-does-it-mean-to-you">What Does It Mean To You?<a href="#what-does-it-mean-to-you" class="hash-link" aria-label="Direct link to What Does It Mean To You?" title="Direct link to What Does It Mean To You?">​</a></h2><p>Currently, the <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer">loopback4-example-shopping</a> is already using DCO. </p><p>To sign off the commit, you can:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git commit -s -m "feat: my commit message"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Over the next little while, we'll start the switch for the repositories with the most community contributions, namely <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">loopback-next</a>, <a href="https://github.com/strongloop/loopback.io" target="_blank" rel="noopener noreferrer">loopback.io</a> and <a href="https://github.com/strongloop/loopback-datasource-juggler" target="_blank" rel="noopener noreferrer">loopback-datasource-juggler</a>, then we'll roll it out for the connector repos. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="start-contributing">Start Contributing!<a href="#start-contributing" class="hash-link" aria-label="Direct link to Start Contributing!" title="Direct link to Start Contributing!">​</a></h2><p>You are more than welcome to contribute on something that you find it relevant and interesting to you. If you're simply looking for items that we want help, you can look for GitHub issues with <a href="https://github.com/issues?q=is%3Aopen+is%3Aissue+archived%3Afalse+user%3Astrongloop+label%3A%22help+wanted%22" target="_blank" rel="noopener noreferrer"><code>help wanted</code></a> or <a href="https://github.com/issues?q=is%3Aopen+is%3Aissue+archived%3Afalse+user%3Astrongloop+label%3A%22good+first+issue%22" target="_blank" rel="noopener noreferrer"><code>good first issue</code></a> labels. </p><p>More questions? Feel free to ask in the #loopback-contributors channel of the <a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">LoopBack Slack community</a>.</p>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="Community" term="Community"/>
        <category label="Contribution" term="Contribution"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Community Q&A Monthly Digest - Jun 2020]]></title>
        <id>https://loopback.io/blog/2020-Jun-slack-qa</id>
        <link href="https://loopback.io/blog/2020-Jun-slack-qa"/>
        <updated>2020-07-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Welcome back to the "Community Q&amp;A Monthly Digest", in which we highlight some of the questions and answers in <a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">our LoopBack Slack community</a> here.</p><p><strong>Question:</strong> Has anyone implemented Casbin on a brand new project? or is there a good tutorial for lb4? I need to have some rbac / roles system in an app.. or what would you suggest to achieve that?</p><p><strong>Answer:</strong> We have an access control example uses casbin, see the <a href="https://github.com/strongloop/loopback-next/tree/master/examples/access-control-migration" target="_blank" rel="noopener noreferrer">access-control-migration example</a> and <a href="https://loopback.io/doc/en/lb4/migration-auth-access-control-example.html" target="_blank" rel="noopener noreferrer">its tutorial</a>. The logic on casbin side is only a prototype, the example mainly shows the integration between casbin and LoopBack authorization system.</p><hr><p><strong>Question:</strong> I am new to LoopBack and so far I really like what it has to offer. I was wondering if anyone knows of a good online course to learn LoopBack. I have worked through the basic tutorials found in the documentation, but I find it easier to listen and follow along to videos. </p><p><strong>Answer:</strong> Recently one of our community member posts a <a href="https://www.youtube.com/watch?v=cgBCRY169qg" target="_blank" rel="noopener noreferrer">YouTube tutorial for LoopBack 4 beginners</a>. There is another series of educational videos on <a href="https://www.youtube.com/watch?v=pDGWb-q65qM" target="_blank" rel="noopener noreferrer">a LoopBack introduction</a> and <a href="https://www.youtube.com/watch?v=1U9ZCDlBtjc" target="_blank" rel="noopener noreferrer">installation</a>. </p><p>From our side, there are a few recent videos on our <a href="https://www.youtube.com/channel/UCR8LLOxVNwSEWLMqoZzQNXw/videos" target="_blank" rel="noopener noreferrer">StrongLoop YouTube channel</a> and we're trying to add more. Hope it helps.</p><hr><p><strong>Question:</strong> I am trying to disable the openapi.json from showing in my loopback 4 application and its not working. I was able to disable the explorer. Any ideas?</p><p><strong>Answer:</strong> You can use <code>openApiSpec: {disabled: true}</code> in <code>index.ts</code>. i.e. </p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> config </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rest</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">//..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      openApiSpec</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        disabled</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">//..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p><strong>Question:</strong> Does Loopback 4 support extracting cookies from the header? Currently I had to integrate Express server to achieve this. </p><p><strong>Answer:</strong> You can use express middleware like <a href="http://expressjs.com/en/resources/middleware/cookie-parser.html" target="_blank" rel="noopener noreferrer">http://expressjs.com/en/resources/middleware/cookie-parser.html</a> see how to use middleware in <a href="https://loopback.io/doc/en/lb4/Express-middleware.html" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/Express-middleware.html</a>.</p><hr><p><strong>Question:</strong> Is there a quick way to generate timestamp? Like at the model level <code>generated:true</code>?</p><p><strong>Answer:</strong> I recommend to use defaultFn set to one of the following string values:</p><ul><li>"guid": generate a new globally unique identifier (GUID) using the computer MAC address and current time (UUID version 1).</li><li>"uuid": generate a new universally unique identifier (UUID) using the computer MAC address and current time (UUID version 1).</li><li>"uuidv4": generate a new universally unique identifier using the UUID version 4 algorithm.</li><li>"now": use the current date and time as returned by new Date()</li></ul><p>See also <a href="https://github.com/strongloop/loopback/issues/292" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback/issues/292</a> and <a href="https://loopback.io/doc/en/lb4/Model.html#property-decorator" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/Model.html#property-decorator</a>.</p><p>It would be great to capture these options in our TypeScript definitions, see <a href="https://github.com/strongloop/loopback-next/blob/ae6427322451c914ae54f44dbb656981e7fbbb81/packages/repository/src/model.ts#L34-L42" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/blob/ae6427322451c914ae54f44dbb656981e7fbbb81/packages/repository/src/model.ts#L34-L42</a>.</p><hr><p><strong>Question:</strong> Can I use MongoDB update operators in LoopBack apps? How can I enable it?</p><p><strong>Answer:</strong> Yes, except comparison and logical operators, the mongo connector also supports MongoDB update operators such as <code>max</code>, <code>rename</code>, etc. You will need to set the flag <code>allowExtendedOperators</code> to <code>true</code> in the datasource configuration. You can find details and examples at <a href="https://loopback.io/doc/en/lb4/MongoDB-connector.html#update-operators" target="_blank" rel="noopener noreferrer">MongoDB connector - update operators</a>.</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="interested-to-join-our-slack-workspace">Interested to Join our Slack Workspace?<a href="#interested-to-join-our-slack-workspace" class="hash-link" aria-label="Direct link to Interested to Join our Slack Workspace?" title="Direct link to Interested to Join our Slack Workspace?">​</a></h2><p>Simply click <a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">this invitation link</a> to join. You can also find more channel details here: <a href="https://github.com/strongloop/loopback-next/issues/5048" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/issues/5048</a>.</p>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="Community" term="Community"/>
        <category label="Slack" term="Slack"/>
        <category label="Q&A" term="Q&A"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 2020 Q2 Overview]]></title>
        <id>https://loopback.io/blog/loopback-4-2020-q2-overview</id>
        <link href="https://loopback.io/blog/loopback-4-2020-q2-overview"/>
        <updated>2020-07-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Over the recent months, this global pandemic has affected our lives in different ways; we hope you all stay safe during these difficult times. The LoopBack team has adapted to new ways of working, including virtually and in new settings. Even though it could be challenging sometimes, we are glad that we were able to complete most of our Q2 plan. Thanks to all the support from the team and the community!</p><p>Here's a brief look at the Q2 summary:</p><ul><li><a href="#migration-guide">Migration Guide</a></li><li><a href="#enhancing-documentation">Enhancing Documentation</a></li><li><a href="#leveraging-authentication-system">Leveraging Authentication System</a></li><li><a href="#apic/lb4-integration">APIC/LB4 Integration</a></li><li><a href="#other-highlights">Other Highlights</a></li><li><a href="#building-loopBack-community">Building LoopBack Community</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="migration-guide">Migration Guide<a href="#migration-guide" class="hash-link" aria-label="Direct link to Migration Guide" title="Direct link to Migration Guide">​</a></h2><p>One of our main targets in Q2 was to finish the migration guide, and we did it! We accomplished all the items on the <a href="https://github.com/strongloop/loopback-next/issues/453" target="_blank" rel="noopener noreferrer">migration plan</a>. The <a href="https://loopback.io/doc/en/lb4/migration-overview.html" target="_blank" rel="noopener noreferrer">Migration guide</a> can be found easily on the LB4 home page. We have instructions that helps you migrate various artifacts and also have docs to explain similarities and differences between LB3 and LB4. From request/response infrastructure to datasource setup, from model definitions to the authentication and authorization, we hope the guide is useful for you when migrating your LoopBack 3 applications to LoopBack 4.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="enhancing-documentation">Enhancing Documentation<a href="#enhancing-documentation" class="hash-link" aria-label="Direct link to Enhancing Documentation" title="Direct link to Enhancing Documentation">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-documentation-structure">New Documentation Structure<a href="#new-documentation-structure" class="hash-link" aria-label="Direct link to New Documentation Structure" title="Direct link to New Documentation Structure">​</a></h3><p>This quarter, one of our targets was to upgrade the documentation system. As we are adding more features and documentation to LoopBack 4, the abundant amount of sidebar entries was overwhelming and difficult to navigate with the old documentation system. We reorganized most of them into the following four parts:</p><ul><li>"Tutorials"</li><li>"How-to guides"</li><li>"Behind the scenes"</li><li>"References guides"</li></ul><p>For example, if you'd like to learn how you can secure your LoopBack 4 application, now you can find it easily under the "Tutorials" sections instead of searching through the whole path "Concept -&gt; Authentication -&gt; Authentication tutorial".</p><p>Moreover, we also started working on reorganizing most of our documentation to focus on framework-level APIs and de-emphasizing the lower-level building blocks to reduce the complexity. For example, we removed <code>@loopback/express</code> from framework-level documentation and replaced references to use <code>@loopback/rest instead</code>.</p><p>This is just the first step of our long journey of improving the documentation system. Please let us know if you have any feedback.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="rewriting-your-favorite-lb3-content-to-loopback-4">Rewriting your favorite LB3 content to LoopBack 4<a href="#rewriting-your-favorite-lb3-content-to-loopback-4" class="hash-link" aria-label="Direct link to Rewriting your favorite LB3 content to LoopBack 4" title="Direct link to Rewriting your favorite LB3 content to LoopBack 4">​</a></h3><p>We've been using shared content for some topics in both LB3 and LB4, but this might be confusing if the user is not familiar with LB3. To reduce the gap between these two versions, we also rewrote some documentation from LB3 in LB4 style. For example, now you can check usage examples written in LB4 style for the Filters under the page <a href="https://loopback.io/doc/en/lb4/Working-with-data.html" target="_blank" rel="noopener noreferrer">Working with data</a>. What's more is that we also created tutorials for connecting to <a href="https://loopback.io/doc/en/lb4/Connecting-to-MySQL.html" target="_blank" rel="noopener noreferrer">MySQL</a>, <a href="https://loopback.io/doc/en/lb4/Connecting-to-Oracle.html" target="_blank" rel="noopener noreferrer">Oracle</a>, <a href="https://loopback.io/doc/en/lb4/Connecting-to-PostgreSQL.html" target="_blank" rel="noopener noreferrer">PostgreSQL</a>, and <a href="https://loopback.io/doc/en/lb4/Connecting-to-MongoDB.html" target="_blank" rel="noopener noreferrer">MongoDB</a> databases. By following the steps in these tutorials, you'll find it easy to connect to databases with LB4 applications.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="leveraging-authentication-system">Leveraging Authentication System<a href="#leveraging-authentication-system" class="hash-link" aria-label="Direct link to Leveraging Authentication System" title="Direct link to Leveraging Authentication System">​</a></h2><p>The authentication system has changed a lot since it was being used as an experimental feature. It is now more reliable and flexible. We improved it in the following aspects:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="examples">Examples<a href="#examples" class="hash-link" aria-label="Direct link to Examples" title="Direct link to Examples">​</a></h3><p>We added two examples for different authentication strategies:</p><ul><li><p><a href="https://github.com/strongloop/loopback-next/tree/master/examples/todo-jwt" target="_blank" rel="noopener noreferrer">TODO example with JWT</a> demos enabling JWT authentication in the Todo application. This is a good example for beginners to follow the authentication system.</p></li><li><p><a href="https://github.com/strongloop/loopback-next/tree/master/examples/passport-login" target="_blank" rel="noopener noreferrer">Passport Login example</a> shows how to use <a href="http://www.passportjs.org/docs/" target="_blank" rel="noopener noreferrer">Passport Strategies</a> in LoopBack 4. If you are using the loopback-component-passport in LoopBack 3, this example can help you migrate your application to LoopBack 4.</p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="documentation">Documentation<a href="#documentation" class="hash-link" aria-label="Direct link to Documentation" title="Direct link to Documentation">​</a></h3><p>We reorganized the authentication documentation to make it more easy to adopt. Instead of throwing all the details to users, now the <a href="https://loopback.io/doc/en/lb4/Authentication-overview.html" target="_blank" rel="noopener noreferrer">authentication docs</a> starts with a simple high-level explanation, then it walks through users with several examples with different difficulties to show what the system is capable of and how they can be achieved.</p><p>Besides, as we mentioned above, we also added page <a href="https://loopback.io/doc/en/lb4/migration-auth-overview.html" target="_blank" rel="noopener noreferrer">Migrating authentication and authorization</a> as part of the migration plan as well.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="apiclb4-integration">APIC/LB4 Integration<a href="#apiclb4-integration" class="hash-link" aria-label="Direct link to APIC/LB4 Integration" title="Direct link to APIC/LB4 Integration">​</a></h2><p><a href="https://developer.ibm.com/apiconnect/" target="_blank" rel="noopener noreferrer">API Connect</a> is a complete, intuitive and scalable API platform provided by IBM.</p><p>In Q2, we completed the integration of LoopBack 4 with API Connect v10 which was released in June. When a LoopBack application is scaffolded through the APIC toolkit, the LoopBack-generated OpenAPIv3 spec comes with API Connect specific metadata added, thanks to the <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/apiconnect" target="_blank" rel="noopener noreferrer">LoopBack APIConnect extension</a>. If you're interested, we've been preparing an article on how you can take the APIs created from LoopBack and import them into API Connect for API management. Stay tuned!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-highlights">Other Highlights<a href="#other-highlights" class="hash-link" aria-label="Direct link to Other Highlights" title="Direct link to Other Highlights">​</a></h2><p>Here are some highlights of our work we would like to share!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="supporting-typeorm">Supporting TypeORM<a href="#supporting-typeorm" class="hash-link" aria-label="Direct link to Supporting TypeORM" title="Direct link to Supporting TypeORM">​</a></h3><p>You might decide to use an alternative ORM/ODM in your LoopBack 4 application, and LoopBack 4 also has such flexibility as it no longer expects you to provide your data in its own custom Model format for routing purposes, which means you are free to alter your classes to suit these ORMs/ODMs.</p><p><a href="https://typeorm.io/#/" target="_blank" rel="noopener noreferrer">TypeORM</a> is an ORM that can run in NodeJS and others platforms and can be used with TypeScript and JavaScript, which fits LoopBack 4 well. We implemented initial support for TypeORM in LoopBack 4 in the <code>@loopback/typeorm</code> package. Please check the <a href="https://github.com/strongloop/loopback-next/blob/master/packages/typeorm/README.md" target="_blank" rel="noopener noreferrer">README</a> file for the usage and limitations.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="express-middleware">Express Middleware<a href="#express-middleware" class="hash-link" aria-label="Direct link to Express Middleware" title="Direct link to Express Middleware">​</a></h3><p>LoopBack 4 leverages Express behind the scenes for its REST server implementation. The new <a href="https://github.com/strongloop/loopback-next/tree/master/packages/express" target="_blank" rel="noopener noreferrer">Express Package</a>, has enabled injecting single and multiple express middleware functions as <code>Interceptor</code>s into <code>Controller</code> invocations and also as a middleware step in the application <code>Sequence</code>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="component-application-booter">Component Application Booter<a href="#component-application-booter" class="hash-link" aria-label="Direct link to Component Application Booter" title="Direct link to Component Application Booter">​</a></h3><p>Sometimes it might be the case that we want to break our complex application into multiple smaller LoopBack applications. The component application booter composes these sub applications into the main application. This is helpful for building a scalable micro-services application. See the page <a href="https://loopback.io/doc/en/lb4/Booting-an-Application.html" target="_blank" rel="noopener noreferrer">Booting an Application</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="hasmanythrough-relation">HasManyThrough Relation<a href="#hasmanythrough-relation" class="hash-link" aria-label="Direct link to HasManyThrough Relation" title="Direct link to HasManyThrough Relation">​</a></h3><p>With help from the community users, the experimental feature <a href="https://github.com/strongloop/loopback-next/blob/master/packages/repository/src/relations/has-many/has-many-through.repository.ts" target="_blank" rel="noopener noreferrer"><code>HasManyThrough</code> relation</a> is added to LB4. Currently it only has some basic functionalities. The documentation and related CLI will be updated in the near future.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="run-tests-in-parallel">Run Tests in Parallel<a href="#run-tests-in-parallel" class="hash-link" aria-label="Direct link to Run Tests in Parallel" title="Direct link to Run Tests in Parallel">​</a></h3><p>We upgraded <code>mocha</code> to the new version 8, and it enable parallel execution of Mocha tests. With the option, we can control the number of worker processes and make the testing process more efficient. Details can be found in <a href="https://loopback.io/doc/en/lb4/code-contrib-lb4.html#running-tests" target="_blank" rel="noopener noreferrer">Running tests</a> section.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="extensions">Extensions<a href="#extensions" class="hash-link" aria-label="Direct link to Extensions" title="Direct link to Extensions">​</a></h3><p>Extensions/Extension points is one of the main features of LB4 to make the application extensible. We added the following two extensions in Q2:</p><ul><li><p>JWT authentication: as the authentication system gets popular and more solid, we extracted the JWT authentication system into a separate extension package as an experimental feature, so that users can quickly mount a component to try out the feature. Check <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/authentication-jwt" target="_blank" rel="noopener noreferrer"><code>authentication-jwt</code></a> for details.</p></li><li><p>LoopBack APIConnect extension: the <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/apiconnect" target="_blank" rel="noopener noreferrer">LoopBack APIConnect extension</a> is ready for use. It provides <code>ApiConnectComponent</code> that adds an <code>OASEnhencer</code> extension to contribute <code>x-ibm-configuration</code> to the OpenAPI spec generated by LoopBack applications.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="building-loopback-community">Building LoopBack Community<a href="#building-loopback-community" class="hash-link" aria-label="Direct link to Building LoopBack Community" title="Direct link to Building LoopBack Community">​</a></h2><p>We're happy to see more users/developers join our community. We appreciate all the help! We've opened a public <a href="https://slack.com/" target="_blank" rel="noopener noreferrer">Slack</a> channel so that developers can ask questions, discuss issues, and share their knowledge to help each other easily.</p><p>We also had a several video-calls with LoopBack maintainers. It's nice to get to know each other, share the plans &amp; visions and discuss topics by talking together. Let's continue building LoopBack a better framework together.</p><p>Wanna join us? Yes! You're invited 👉 <a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Join LoopBack Channel on Slack</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="previous-milestone-blogs">Previous Milestone Blogs<a href="#previous-milestone-blogs" class="hash-link" aria-label="Direct link to Previous Milestone Blogs" title="Direct link to Previous Milestone Blogs">​</a></h2><p>There are many more accomplishments that cannot be captured in this blog, make sure you check out our previously published monthly milestone blog posts in Q2 for more details:</p><ul><li><a href="https://strongloop.com/strongblog/april-2020-milestone/" target="_blank" rel="noopener noreferrer">April 2020</a></li><li><a href="https://strongloop.com/strongblog/may-2020-milestone/" target="_blank" rel="noopener noreferrer">May 2020</a></li><li><a href="https://strongloop.com/strongblog/june-2020-milestone/" target="_blank" rel="noopener noreferrer">June 2020</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>We have published a blog <a href="https://strongloop.com/strongblog/2020-goals/" target="_blank" rel="noopener noreferrer">LoopBack - 2020 Goals and Focus</a> about our plans this year. Here is a summary of the <a href="https://github.com/strongloop/loopback-next/blob/master/docs/ROADMAP.md#q3-2020-roadmap" target="_blank" rel="noopener noreferrer">Q3 2020 roadmap</a>:</p><ul><li>finish migration guide for both general runtime and authentication &amp; authorization</li><li>continue with API Connect and LoopBack integration</li><li>look into feature parity gaps that are highly requested by users</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>In 2020, we look forward to helping you and seeing you around! LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Agnes Lin</name>
            <uri>https://github.com/agnes512</uri>
        </author>
        <category label="Quarterly update" term="Quarterly update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 June 2020 Milestone Update]]></title>
        <id>https://loopback.io/blog/june-2020-milestone</id>
        <link href="https://loopback.io/blog/june-2020-milestone"/>
        <updated>2020-07-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Documentation restructuring, TypeORM support, and HasManyThrough were the three main accomplishments in the month of June. Based on the community feedback, documentation improvement remains our number one priority in the coming month. Besides, while welcoming Nathan Chen join as a maintainer of the <code>strong-globalize</code> repo, we said farewell to Deepak. </p><p>Here is what we did in the month June:</p><ul><li><a href="#documentation-improvements">Documentation Improvements</a></li><li><a href="#hasmanythrough">HasManyThrough</a></li><li><a href="#typeormsupport">TypeORM Support</a></li><li><a href="#miscellaneous">Miscellaneous</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation-improvements">Documentation Improvements<a href="#documentation-improvements" class="hash-link" aria-label="Direct link to Documentation Improvements" title="Direct link to Documentation Improvements">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-documentation-structure">New Documentation Structure<a href="#new-documentation-structure" class="hash-link" aria-label="Direct link to New Documentation Structure" title="Direct link to New Documentation Structure">​</a></h3><p>When writing documentation for new features, we were often struggling to find the right place to put the content and the right form to frame the information. Recently, we discovered a documentation system based on four different functions. It explains why we were struggling and provides a structure to guide us when writing new content.</p><blockquote><p>Documentation needs to include and be structured around its four different functions: tutorials, how-to guides, technical reference and explanation. Each of them requires a distinct mode of writing. People working with software need these four different kinds of documentation at different times, in different circumstances - so software usually needs them all, and they should all be integrated into your documentation.</p></blockquote><p>In June, we explored how to apply this documentation system to our content and implemented first high-level changes in the way how our content is organized. Check out <a href="https://github.com/strongloop/loopback-next/issues/5549" target="_blank" rel="noopener noreferrer">loopback-next#5549</a> to find more resources about our new documentation system.</p><p>In a series of incremental pull requests, we reworked our documentation structure as follows:</p><ul><li>Renamed "Usage scenarios" to "How-to guides" to make it clear what kind of content is there.</li><li>Placed all explanation-related pages in "Behind the scenes" section and removed the section "Key concepts".</li><li>Relocated all reference guides to be nested under "Reference guides". We moved pages like "Error handling" and "Reserved binding keys" to references guides to make them easier to find.</li><li>Moved pages from "Using components" to "How-to guides".</li><li>Added support for sidebar sections that are just grouping related pages together but don't have a page of their own. This allowed us to remove few section pages that were rather anemic: "Access databases", "Reference guides", "How-to guides".</li><li>Reworked the "Server" page in "Behind the scenes" because there was a mix of different kinds of content in the page. We extracted some of the guides into new pages nested under "How-to guides".</li></ul><p>The re-organized documentation is already live at <a href="https://loopback.io/doc/en/lb4" target="_blank" rel="noopener noreferrer">loopback.io</a>, take a look and let us know what do you think!</p><p>Now that the new structure is in place, we are going to gradually review and update existing documentation content to align it with the new system. You can find the list of relevant tasks in <a href="https://github.com/strongloop/loopback-next/issues/5113" target="_blank" rel="noopener noreferrer">loopback-next#5113</a>. As always, your help is welcome!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="alignment-along-abstraction-levels">Alignment Along Abstraction Levels<a href="#alignment-along-abstraction-levels" class="hash-link" aria-label="Direct link to Alignment Along Abstraction Levels" title="Direct link to Alignment Along Abstraction Levels">​</a></h3><p>As we were incrementally adding new features to the framework and extracting building blocks into standalone packages, our documentation ended up describing concepts from different abstraction layers in the same place, mixing information for framework users with references to low-level building blocks. This resulted in a steep learning curve for new users, because there were so many concept and packages to learn about!</p><p>In June, we reorganized most of our documentation to focus on framework-level APIs and deemphasize lower-level building blocks. As a result, we updated our developer documentation to describe which packages are considered as building blocks, see <a href="https://loopback.io/doc/en/lb4/code-contrib-lb4.html#organization-of-content" target="_blank" rel="noopener noreferrer">Organization of content</a>. We also:</p><ul><li><a href="https://github.com/strongloop/loopback-next/pull/5625" target="_blank" rel="noopener noreferrer">updated our packages and documentation pages to use <code>@loopback/core</code> instead of <code>@loopback/context</code></a></li><li><a href="https://github.com/strongloop/loopback-next/pull/5696" target="_blank" rel="noopener noreferrer">removed <code>@loopback/metadata</code> from framework-level documentation and replaced references to use <code>@loopback/core</code> instead</a></li><li><a href="https://github.com/strongloop/loopback-next/pull/5693" target="_blank" rel="noopener noreferrer">removed <code>@loopback/express</code> from framework-level documentation and replaced references to use <code>@loopback/rest</code> instead</a></li></ul><p>Now we need to update places referring to <code>@loopback/openapi-v3</code>, as discussed in <a href="https://github.com/strongloop/loopback-next/issues/5692" target="_blank" rel="noopener noreferrer">loopback-next5692</a>. Want to contribute those changes yourself? Submit a PR today!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="refactoring-of-authentication-related-documentation">Refactoring of Authentication-related Documentation<a href="#refactoring-of-authentication-related-documentation" class="hash-link" aria-label="Direct link to Refactoring of Authentication-related Documentation" title="Direct link to Refactoring of Authentication-related Documentation">​</a></h3><p>We refactored the authentication documentation so that it is easier for beginners to follow. As the new entry page, the <a href="https://loopback.io/doc/en/lb4/Authentication-overview.html" target="_blank" rel="noopener noreferrer">authentication overview page</a> describes a typical scenario for securing APIs and it also helps you understand what "authentication" means in LoopBack 4. Next you can follow a simple hands-on tutorial <a href="https://loopback.io/doc/en/lb4/Authentication-tutorial.html" target="_blank" rel="noopener noreferrer">secure your LoopBack 4 application with JWT authentication</a> to start exploring this feature. Then you can gradually learn the authentication system's mechanism and how to implement your own authentication strategies.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="adding-loopback-4-content-to-connector-pages">Adding LoopBack 4 Content to Connector Pages<a href="#adding-loopback-4-content-to-connector-pages" class="hash-link" aria-label="Direct link to Adding LoopBack 4 Content to Connector Pages" title="Direct link to Adding LoopBack 4 Content to Connector Pages">​</a></h3><p>As the continuation of improving connector documentation, after updating the PostgreSQL connector, we updated the connector page and added three more tutorials for <a href="https://loopback.io/doc/en/lb4/Connecting-to-MySQL.html" target="_blank" rel="noopener noreferrer">MySQL</a>, <a href="https://loopback.io/doc/en/lb4/Connecting-to-Oracle.html" target="_blank" rel="noopener noreferrer">Oracle</a>, and <a href="https://loopback.io/doc/en/lb4/Connecting-to-MongoDB.html" target="_blank" rel="noopener noreferrer">MongoDB</a> connectors in June. By walking you through the steps of creating a LB4 application and connecting to a certain database, we hope new users find the tutorial helpful to adopt LoopBack 4 better. Besides the basic setup steps, we also added some sections to explain those questions that are being asked a lot from the community. Check out these documentations under <a href="https://loopback.io/doc/en/lb4/Database-connectors.html" target="_blank" rel="noopener noreferrer">Database connectors</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="hasmanythrough">HasManyThrough<a href="#hasmanythrough" class="hash-link" aria-label="Direct link to HasManyThrough" title="Direct link to HasManyThrough">​</a></h2><p>A <code>HasManyThrough</code> relation sets up a many-to-many connection through another model. At the moment, LB4 only supports three basic relations: <code>HasMany</code>, <code>BelongsTo</code>, and <code>HasOne</code>.</p><p>Thanks to the initial work by <a href="https://github.com/codejamninja" target="_blank" rel="noopener noreferrer"><code>codejamninja</code></a> and <a href="https://github.com/derdeka" target="_blank" rel="noopener noreferrer"><code>derdeka</code></a>, we have a working prototype of the feature.</p><p>While functional, the <a href="https://github.com/strongloop/loopback-next/pull/2359" target="_blank" rel="noopener noreferrer">PR</a> is pretty huge and some of the parts are up for discussion. As a result, we started to extract the core parts of the implementation into smaller PRs so that it's easier for review. In June, we had the basic operations working and tests are added. As the next step, we'll be adding documentation.</p><p>Stay tuned with the progress by going to <a href="https://github.com/strongloop/loopback-next/issues/5835" target="_blank" rel="noopener noreferrer">loopback-next #5835</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="typeorm-support">TypeORM Support<a href="#typeorm-support" class="hash-link" aria-label="Direct link to TypeORM Support" title="Direct link to TypeORM Support">​</a></h2><p>We have implemented initial support for TypeORM in LoopBack. All it takes to enable TypeORM is to compose your app with the <code>TypeOrmMixin</code> mixin.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">BootMixin</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/boot'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">RestApplication</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/rest'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">TypeOrmMixin</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/typeorm'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyApplication</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">BootMixin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">TypeOrmMixin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">RestApplication</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>For details about using TypeORM with LoopBack, refer to the <code>@loopback/typeorm</code> <a href="https://github.com/strongloop/loopback-next/blob/master/packages/typeorm/README.md" target="_blank" rel="noopener noreferrer">doc</a>.</p><p>Complete support for TypeORM is a significant amount of work. While the initial work is done, we're looking for ways to improve the implementation in the following areas.</p><ol><li>Complete TypeORM to OpenAPI data type conversion (currently only <code>number</code>,
<code>string</code>, and <code>boolean</code> are supported)</li><li>Full JSON/OpenAPI schema for models, including variants like with/without id,
with/without relations, partial, etc.</li><li>Json/OpenAPI schema to describe the supported filter format</li><li>Support for LoopBack-style filters</li><li>Custom repository classes (e.g. to implement bookRepo.findByTitle(title)).</li><li>Database migration</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="miscellaneous">Miscellaneous<a href="#miscellaneous" class="hash-link" aria-label="Direct link to Miscellaneous" title="Direct link to Miscellaneous">​</a></h2><p>We upgraded <code>mocha</code> to the new version 8. This version brings support for running tests in parallel (yay!), but also drops support for <code>--opts</code> argument and <code>test/mocha.opts</code> file. See <a href="https://github.com/mochajs/mocha/releases/tag/v8.0.0" target="_blank" rel="noopener noreferrer">Mocha 8.0.0 release notes</a> for the full list of breaking changes and instructions on migrating existing projects. Our changes were introduced by <a href="https://github.com/strongloop/loopback-next/pull/5750" target="_blank" rel="noopener noreferrer">loopback-next#5750</a> and <a href="https://github.com/strongloop/loopback-next/pull/5710" target="_blank" rel="noopener noreferrer">loopback-next#5710</a>; and published in <code>@loopback/build</code> version <code>6.0.0</code>.</p><p><a href="https://strongloop.com/authors/Miroslav_Bajto%C5%A1" target="_blank" rel="noopener noreferrer">Miroslav</a> benchmarked the performance of LoopBack and found an opportunity for a quick but significant improvement. By changing the algorithm used in <code>@loopback/context</code> to generate unique context instance names, we managed to improve the performance of our REST API layer by 45%! Learn more in the blog post <a href="https://strongloop.com/strongblog/2020-improve-looopback-performance-uuid/" target="_blank" rel="noopener noreferrer">How We Improved LoopBack REST Performance by 45%</a>.</p><p>A new method <code>exportOpenApiSpec()</code> was added to the <code>RestServer</code> for generating OpenAPI specs in JSON or YAML format. This method can be called from the project directory by running the <code>openapi-spec</code> script.</p><p>When a binding key is not bound,<code>ResolutionError</code> now captures more contextual information. Earlier it used to print a long stack trace and was not easy to find out where the failure happened.</p><p>The implementation of binding cache was <a href="https://github.com/strongloop/loopback-next/pull/5731" target="_blank" rel="noopener noreferrer">improved</a> to prevent race conditions and better handle bindings in async conditions.</p><p><code>CoreBindings.APPLICATION_INSTANCE</code> now has corresponding <code>@config()</code> decorator.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="july-milestones">July Milestones<a href="#july-milestones" class="hash-link" aria-label="Direct link to July Milestones" title="Direct link to July Milestones">​</a></h2><p>In the month of July we will continue focusing on improving the documentation. You can see the whole list on the <a href="https://github.com/strongloop/loopback-next/issues/5837" target="_blank" rel="noopener noreferrer">July milestone issue</a>.</p><p>There is also ongoing work to have <a href="https://github.com/strongloop/loopback-next/pull/5545" target="_blank" rel="noopener noreferrer">native GraphQL support</a> and a <a href="https://github.com/strongloop/loopback-next/pull/5681" target="_blank" rel="noopener noreferrer">new extension for pooling service</a>. Your feedback is welcome.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="welcome-and-goodbyes">Welcome and Goodbyes<a href="#welcome-and-goodbyes" class="hash-link" aria-label="Direct link to Welcome and Goodbyes" title="Direct link to Welcome and Goodbyes">​</a></h2><p>We're pleased to welcome <a href="https://github.com/codechennerator" target="_blank" rel="noopener noreferrer">Nathan Chen</a> as the maintainer of the <a href="https://github.com/strongloop/strong-globalize" target="_blank" rel="noopener noreferrer">strong-globalize</a> repo. Thank you Nathan for all the good work you've done. On the other hand, it's sad to see <a href="https://strongloop.com/authors/Deepak_Rajamohan/" target="_blank" rel="noopener noreferrer">Deepak</a> leaving the LoopBack team. We wish him best of luck in his new adventure.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>In 2020, we look forward to helping you and seeing you around! LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Yaapa Hage</name>
            <uri>https://github.com/hacksparrow</uri>
        </author>
        <author>
            <name>Miroslav Bajtoš</name>
            <uri>http://github.com/bajtos</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Community Q&A Monthly Digest - May 2020]]></title>
        <id>https://loopback.io/blog/2020-may-slack-qa</id>
        <link href="https://loopback.io/blog/2020-may-slack-qa"/>
        <updated>2020-06-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Since we made the <a href="https://loopbackio.slack.com/" target="_blank" rel="noopener noreferrer">LoopBack Slack community</a> available, we are happy to see more and more users are joining. Let's see some of the questions and answers that we've highlighted below.</p><hr><p><strong>Question</strong>: In the <a href="https://loopback.io/doc/en/lb4/Model.html#using-the-juggler-bridge" target="_blank" rel="noopener noreferrer">Model documentation page</a>, it says "To define a model for use with the juggler bridge, extend your classes from Entity". What's the juggler bridge?</p><p><strong>Answer</strong>: the Juggler bridge is used to bridge the gap between <code>@loopback/repository</code> and <code>loopback-datasource-juggler</code>. The former is used by LoopBack 4 to help define Models, Repositories, etc. It also allows for cross-datasource relations, etc. as they are enforced at the application level instead of the database.</p><p>The latter is the ORM/ODM that builds the queries and interacts with the database. It's from LoopBack 3 and is probably the only major component that didn't get revamped to keep backwards-compatibility.</p><p>Hence, the Juggler bridge helps bridge the gaps between these Node.js packages.</p><p><code>Entity</code> is, at it's core, a model that has an ID property. Looking at the source code for <code>Entity</code>, there's quite a bit of boilerplate code added.</p><hr><p><strong>Question:</strong> Is there a way to change the application port to string ? I am trying to deploy the application under Azure web app where the port is a string.</p><p><strong>Answer</strong>: Use <code>port: +(process.env.BILLING_PORT || 3000),</code>. The <code>+</code> converts a string to number. For the pipe, you should use <code>path</code> property instead of <code>port</code>. See <a href="https://github.com/strongloop/loopback-next/blob/master/packages/http-server/src/__tests__/integration/http-server.integration.ts#L272" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/blob/master/packages/http-server/src/<strong>tests</strong>/integration/http-server.integration.ts#L272</a>.</p><hr><p><strong>Question:</strong> I have a model with a field which is defined as “number”. Working with Postgres. How should I define it to have the field as a double and not an integer ?</p><p><strong>Answer:</strong> You can specify the dataType field to define a certain type of that column. For type Double, for example,</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Item</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Entity</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'number'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    generated</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'number'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    postgresql</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      dataType</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'double precision'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  price</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then run <code>npm run build</code> and then <code>npm run migrate</code> commands, the table should have columns:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">price       |                | double precision</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Besides the data type, LB4 also allows you to describe tables via the model definition and/or property definition. See <a href="https://loopback.io/doc/en/lb4/Model.html#data-mapping-properties" target="_blank" rel="noopener noreferrer">Data Mapping Properties</a> for information.</p><hr><p><strong>Question:</strong> Is there client sdk for lb4 for api code generation? I tried with swagger codegen, but the generated code seems doesn't work.</p><p><strong>Answer:</strong> You should try <code>lb4 openapi --client</code>. It generates strongly-typed LoopBack service proxies over openapi spec using TypeScript. We use it to generate SDKs in TS.</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="interested-to-join-our-slack-workspace">Interested to Join our Slack Workspace?<a href="#interested-to-join-our-slack-workspace" class="hash-link" aria-label="Direct link to Interested to Join our Slack Workspace?" title="Direct link to Interested to Join our Slack Workspace?">​</a></h2><p>Simply click <a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">this invitation link</a> to join. You can also find more channel details here: <a href="https://github.com/strongloop/loopback-next/issues/5048" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/issues/5048</a>.</p>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="Community" term="Community"/>
        <category label="Slack" term="Slack"/>
        <category label="Q&A" term="Q&A"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[How We Improved LoopBack REST Performance by 45%]]></title>
        <id>https://loopback.io/blog/2020-improve-looopback-performance-uuid</id>
        <link href="https://loopback.io/blog/2020-improve-looopback-performance-uuid"/>
        <updated>2020-06-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Recently, I measured the performance of LoopBack 4 and found an opportunity for an easy but significant improvement in the way how we are building per-request context instances.</p><p>I have been always interested in performance, from high-level design patterns like caching &amp; memoization, to micro-optimizations at language level (anybody remembers <a href="https://stackoverflow.com/a/44765284/69868" target="_blank" rel="noopener noreferrer">CrankShaftScript</a> from Node.js 0.10 days?), all the way down to Mechanical Sympathy.</p><p>Since we started rewritting LoopBack from scratch in 2016/17, our primary focus was on features; performance aspects were a bit off the radar. (Not entirely, we were careful to design our HTTP routing layer to avoid the low performance of regexp-matching approach used by Express.) Now that LoopBack 4 is pretty mature, I though it's a good time to take a quick look on how fast is our framework.</p><p>To quickly get a high-level overview, I installed <a href="https://clinicjs.org" target="_blank" rel="noopener noreferrer">Clinic.js</a> and benchmarked our <a href="https://loopback.io/doc/en/lb4/todo-list-tutorial.html" target="_blank" rel="noopener noreferrer">TodoList example application</a>. I used the following TodoList query (<code>filter</code>) for all benchmarks:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"include"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"relation"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"todos"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The filter value needs to be URL-encoded, producing the following URL to pass to Clinic.js - let's save it to a shell variable for later use.</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token assign-left variable" style="color:#36acaa">URL</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"/todo-lists?filter=%7B%0A%20%20%22include%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22relation%22%3A%20%22todos%22%0A%20%20%20%20%7D%0A%20%20%5D%0A%7D"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="clinicjs-doctor">Clinic.js Doctor<a href="#clinicjs-doctor" class="hash-link" aria-label="Direct link to Clinic.js Doctor" title="Direct link to Clinic.js Doctor">​</a></h2><p>The Doctor component performs an overall diagnosis looking for common anti-patterns. After installing Clinic.js globally, I ran the following command in <code>examples/todo-list</code> directory of loopback-next monorepo:</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ clinic doctor --debug --autocannon </span><span class="token variable" style="color:#36acaa">$URL</span><span class="token plain"> -- </span><span class="token function" style="color:#d73a49">node</span><span class="token plain"> </span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Server is running at http://127.0.0.1:3000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Running 10s </span><span class="token builtin class-name">test</span><span class="token plain"> @ http://localhost:3000/todo-lists?filter</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">10</span><span class="token plain"> connections</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">18k requests </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">11</span><span class="token plain">.05s, </span><span class="token number" style="color:#36acaa">11.1</span><span class="token plain"> MB </span><span class="token builtin class-name">read</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Analysing data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Generated HTML </span><span class="token function" style="color:#d73a49">file</span><span class="token plain"> is file:///</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">/todo-list/.clinic/41598.clinic-doctor.html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">You can use this </span><span class="token builtin class-name">command</span><span class="token plain"> to upload it:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">clinic upload .clinic/41598.clinic-doctor</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The report says there were no issue detected, hooray!</p><img loading="lazy" class="aligncenter size-full" src="./images/uuid-clinic-doctor.png"><p>A closer inspection shows that our process is consuming quite a lot of memory.  We don't have any memory leaks, which is most important. However, excessive allocations put more pressure on garbage collector which does impact application's performance. Let's set the memory usage aside for now and check how much time is the application spending on waiting for asynchronous operations.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="clinicjs-bubbleprof">Clinic.js Bubbleprof<a href="#clinicjs-bubbleprof" class="hash-link" aria-label="Direct link to Clinic.js Bubbleprof" title="Direct link to Clinic.js Bubbleprof">​</a></h2><p>Quoting from <a href="https://www.thoughtworks.com/radar/languages-and-frameworks/clinic-js-bubbleprof" target="_blank" rel="noopener noreferrer">ThoughtWorks Technology Radar</a>:</p><blockquote><p>Clinic.js Bubbleprof represents visually the async operations in Node.js processes, drawing a map of delays in the application's flow. We like this tool because it helps developers to easily identify and prioritize what to improve in the code.</p></blockquote><p>Let's see how the bubbles look like for a LoopBack application!</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ clinic bubbleprof --debug --autocannon </span><span class="token variable" style="color:#36acaa">$URL</span><span class="token plain"> -- </span><span class="token function" style="color:#d73a49">node</span><span class="token plain"> </span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Warning: The code is transpiled, bubbleprof does not support </span><span class="token builtin class-name">source</span><span class="token plain"> maps yet.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Server is running at http://127.0.0.1:3000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Running 10s </span><span class="token builtin class-name">test</span><span class="token plain"> @ http://localhost:3000/todo-lists?filter</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">10</span><span class="token plain"> connections</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2k requests </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain">.06s, </span><span class="token number" style="color:#36acaa">1.28</span><span class="token plain"> MB </span><span class="token builtin class-name">read</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Analysing data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Generated HTML </span><span class="token function" style="color:#d73a49">file</span><span class="token plain"> is file:///</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">/todo-list/.clinic/42229.clinic-bubbleprof.html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">You can use this </span><span class="token builtin class-name">command</span><span class="token plain"> to upload it:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">clinic upload .clinic/42229.clinic-bubbleprof</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>There isn't much to see in the report, the application spent less than 20ms waiting for async operations. I guess that was kind of expected considering that our example application is using in-memory storage and not communicating with any external service.</p><img loading="lazy" class="aligncenter size-full" src="./images/uuid-clinic-bubbleprof.png"><h2 class="anchor anchorWithStickyNavbar_LWe7" id="clinicjs-flame">Clinic.js Flame<a href="#clinicjs-flame" class="hash-link" aria-label="Direct link to Clinic.js Flame" title="Direct link to Clinic.js Flame">​</a></h2><p>The last item in Clinic.js toolbox is Flame. Quoting from Clinic's website:</p><blockquote><p>(...)  flamegraphs are a visualization of profiled software, allowing the most frequent code-paths to be identified quickly and accurately. Clinic.js Flame is specifically for Node.js and is built into Clinic.js. It collects metrics using by CPU sampling, then tracks top-of-the-stack frequency and creates flamegraphs.</p></blockquote><p>Can we find anything interesting in the flames? Let's see.</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ clinic flame --debug --autocannon </span><span class="token variable" style="color:#36acaa">$URL</span><span class="token plain"> -- </span><span class="token function" style="color:#d73a49">node</span><span class="token plain"> </span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Server is running at http://127.0.0.1:3000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Running 10s </span><span class="token builtin class-name">test</span><span class="token plain"> @ http://localhost:3000/todo-lists?filter</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">10</span><span class="token plain"> connections</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">15k requests </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain">.03s, </span><span class="token number" style="color:#36acaa">9.44</span><span class="token plain"> MB </span><span class="token builtin class-name">read</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Analysing data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Generated HTML </span><span class="token function" style="color:#d73a49">file</span><span class="token plain"> is file:///</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">/todo-list/.clinic/42454.clinic-flame.html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">You can use this </span><span class="token builtin class-name">command</span><span class="token plain"> to upload it:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">clinic upload .clinic/42454.clinic-flame</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>There is a lot of information packaged into a flame graph. Initially, Clinic.js is selecting the hottest frame - the stack that was observed most often while running the application. In our case, the hottest frame is pointing to Node.js internals dealing with writing data to streams.</p><img loading="lazy" class="aligncenter size-full" src="./images/uuid-clinic-flame-1.png"><p><img loading="lazy" src="/blog/assets/images/uuid-clinic-flame-1-8efb456149e922b8f5bf9c3322ce3d14.png" width="2538" height="1312" class="img_ev3q"></p><p>There isn't much we can do about Node.js streams. Our application is writing HTTP responses so it has to spend some time writing the data. The third hottest frame is <code>parseQueryStringValues</code> from the module <code>qs</code>, this is again not something we can easily improve. Let's remove all components except <code>dist</code> in the check-box list at the bottom of the screen to focus on LoopBack code only.</p><p><img loading="lazy" src="/blog/assets/images/uuid-clinic-flame-2-e69cba5738c76e48971ad0fa70b7e523.png" width="2538" height="1312" class="img_ev3q"></p><p>Now the list of hot frames looks much more actionable! Here are the top entries:</p><ol><li><code>handle</code> in <code>sequence.js</code> was 11.4% of time on top of stack</li><li><code>buildLookupMap</code> in <code>relation.helpers.js</code> was 6.3% of time on top of stack</li><li><code>findByForeignKeys</code> in <code>relation.helpers.js</code> was 5.7% of time on top of stack</li></ol><p>And so the list goes on. The entry number 7 caught my attention: the application is spending 1.3% of the time in <code>generateName</code> from <code>context.js</code>.  That's suspicious, why is generating context names so expensive?</p><p>It turns out we are generating unique context names to make it easier to debug binding-related issues. Our initial implementation was based on <a href="https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)" target="_blank" rel="noopener noreferrer">UUID version 4 (random)</a> algorithm. Universally unique ids are great when you are aggregating debug logs from a mesh of microservices. However, most of the time, context names are just a hidden property of context instances that's not surfaced anywhere.  Applications shouldn't be paying performance tax for something they don't use. Let's see if we can find a better solution.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="uuid-alternatives">UUID Alternatives<a href="#uuid-alternatives" class="hash-link" aria-label="Direct link to UUID Alternatives" title="Direct link to UUID Alternatives">​</a></h2><p>What other options are there to generate unique ids?</p><ul><li>We can use UUID version 1 that's based on date-time and MAC address.</li><li>If we didn't need universally unique values, then a simple counter (perhaps prefixed with the current process id) could be a viable alternative.</li><li>Surely somebody else must have encountered this problem before us. Aren't there any fast id generators on npmjs.com? Of course there are! The search for <a href="https://www.npmjs.com/search?q=fast%20unique%20id" target="_blank" rel="noopener noreferrer">"fast unique id"</a> returned
<a href="https://www.npmjs.com/package/hyperid" target="_blank" rel="noopener noreferrer">hyperid</a> as the best match.</li></ul><p>Let's compare the performance of these alternatives. I wrote a simple benchmark which you can find in this <a href="https://gist.github.com/bajtos/6343512b171156872d3b701b2c10a682" target="_blank" rel="noopener noreferrer">Gist</a> and measured the following data:</p><table><thead><tr><th>method</th><th align="right">ids/second</th></tr></thead><tbody><tr><td>numeric counter</td><td align="right"><code>11095k</code></td></tr><tr><td>hyperid</td><td align="right"><code>10234k</code></td></tr><tr><td>UUID v1</td><td align="right"><code>1649k</code></td></tr><tr><td>UUID v4</td><td align="right"><code>325k</code></td></tr></tbody></table><p>Initially, I wanted to use a numeric counter because it has the best performance. However, that would mean losing uniqueness of context names.  At the end, I decided to go with <code>hyperid</code>. It combines UUID v4 with a counter to achieve almost the same performance as the counter-only algorithm while preserving universal uniqueness of the generated ids.</p><p>To better measure the impact on performance, I created a small REST application that does not parse the query string and returns the response data directly, without going through <code>@loopback/repository</code>. Replacing <code>uuid/v4</code> with <code>hyperid</code> improved the performance of my test application from <code>~2.4k</code> requests/second to <code>~3.5k</code> requests/second on average. The average request latency has improved from <code>3.8ms</code> to <code>2.6ms</code>.</p><p>The pull request <a href="https://github.com/strongloop/loopback-next/pull/5628" target="_blank" rel="noopener noreferrer">loopback-next#5628</a> improving <code>generateName</code> performance has been already landed and will become publicly available in the next framework release.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h2><p>As the popular saying goes, performance is not a problem until it becomes a problem. Even if your project is not performance sensitive, it's still good to pay attention to how much resources it consumes at runtime.</p><ol><li><p>Watch for warning signs. Maybe an existing test has suddenly started to fail on a timeout? When that happens, try to take the hard path: investigate the problem, dig deep to find the root cause and fix it.</p></li><li><p>Measure, measure, measure. Always create a reproducible benchmark to measure the effect of the changes you are going to make. Performance tuning is full of surprises and not all changes are for better.</p></li><li><p>Know the tooling. Node.js is compatible with many tools provided by Chrome's Developer Tools, it provides also tracing functionality for a more fine-grained analysis. You can learn more in Node.js documentation, starting from <a href="https://nodejs.org/en/docs/guides/debugging-getting-started/" target="_blank" rel="noopener noreferrer">Debugging - Getting Started</a>, <a href="https://nodejs.org/en/docs/guides/simple-profiling/" target="_blank" rel="noopener noreferrer">Easy profiling for Node.js Applications</a> and <a href="https://nodejs.org/en/docs/guides/diagnostics-flamegraph/" target="_blank" rel="noopener noreferrer">Flame Graphs</a>.</p></li><li><p>Optimize hot paths. A semi-expensive function can become a performance problem when it's called for every incoming request.</p></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Join the community Slack chat</a></li><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li></ul>]]></content>
        <author>
            <name>Miroslav Bajtoš</name>
            <uri>http://github.com/bajtos</uri>
        </author>
        <category label="REST" term="REST"/>
        <category label="Performance" term="Performance"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 May 2020 Milestone Update]]></title>
        <id>https://loopback.io/blog/may-2020-milestone</id>
        <link href="https://loopback.io/blog/may-2020-milestone"/>
        <updated>2020-06-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>The completion of the migration epic would be the biggest news in May. Now LoopBack 3 users can find the migration guide <a href="https://loopback.io/doc/en/lb4/migration-overview.html" target="_blank" rel="noopener noreferrer">here</a>. Meanwhile, we have feature contributions and bug fixes happened across all the functional areas. </p><p>There are more than 20 community PRs merged in May and we really appreciate every community member's help. We set up community calls every four weeks to keep in touch with our maintainers. See the latest schedule and recording in <a href="https://github.com/strongloop/loopback-governance/issues/4" target="_blank" rel="noopener noreferrer">this story</a>.</p><p>Keep reading to learn about what happened in May.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="migration-epic">Migration Epic<a href="#migration-epic" class="hash-link" aria-label="Direct link to Migration Epic" title="Direct link to Migration Epic">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-components">Migrating components<a href="#migrating-components" class="hash-link" aria-label="Direct link to Migrating components" title="Direct link to Migrating components">​</a></h3><p>The migration guide for components, which is a powerful way to contribute any artifacts, is the last but most widely covered story in the migration epic. To make the migration guide easier to navigate, we split component-related instructions into several sub-sections as "project layout", "models, entities and repositories", "current context", "model mixins", "REST API endpoints". You can check the documentation <a href="https://loopback.io/doc/en/lb4/migration-extensions-overview.html" target="_blank" rel="noopener noreferrer">migration-extensions-overview</a> and its sub-pages to learn the details.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-loopback-3-tests-to-loopback-4">Migrating LoopBack 3 tests to LoopBack 4<a href="#migrating-loopback-3-tests-to-loopback-4" class="hash-link" aria-label="Direct link to Migrating LoopBack 3 tests to LoopBack 4" title="Direct link to Migrating LoopBack 3 tests to LoopBack 4">​</a></h3><p>When a LoopBack 3 application is mounted in a LoopBack 4 project, its endpoints are exposed through the LoopBack 4's REST server. To reuse the existing LoopBack 3 tests, you can easily migrate them by following the instructions in <a href="https://github.com/strongloop/loopback-next/tree/master/examples/lb3-application#running-lb3-tests-from-lb4" target="_blank" rel="noopener noreferrer">example <code>lb3-application</code></a>. It covers how to set up clients to test requests and how to test runtime functions.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="features">Features<a href="#features" class="hash-link" aria-label="Direct link to Features" title="Direct link to Features">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="preserving-prototype-for-toobject">Preserving prototype for toObject<a href="#preserving-prototype-for-toobject" class="hash-link" aria-label="Direct link to Preserving prototype for toObject" title="Direct link to Preserving prototype for toObject">​</a></h3><p>LoopBack CRUD operations invoke <code>toObject</code> function internally to return a model instance. <code>toObject</code> converts a value to a plain object as DTO (Data transfer object). It returned a JSON representation before, which doesn't preserve the prototype of complicated types like <code>Date</code>, <code>ObjectId</code> but returned the value as a string instead. Now such values' prototypes are kept, for example:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">DATE</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Date</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'2020-05-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> created </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> repo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  createdAt</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">DATE</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// The returned model instance has `createdAt` as type Date</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">created</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toObject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">deepEqual</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  createdAt</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">DATE</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="express-middleware">Express Middleware<a href="#express-middleware" class="hash-link" aria-label="Direct link to Express Middleware" title="Direct link to Express Middleware">​</a></h3><p>LookBack 4 leverages Express behind the scenes for its REST server implementation. We decided to not use Express middleware as-is but now we support integrating the middleware in different ways. You can invoke it explicitly in the sequence, or register it to be executed by <code>InvokeMiddleware</code> action, or use it as controller interceptors.</p><p>Page <a href="https://loopback.io/doc/en/lb4/Express-middleware.html" target="_blank" rel="noopener noreferrer">Express middlware</a> explains all the scenarios and usages. And page <a href="https://loopback.io/doc/en/lb4/Middleware.html" target="_blank" rel="noopener noreferrer">Middleware</a> provides the general knowledge of LoopBack 4 middleware.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="context-improvements">Context Improvements<a href="#context-improvements" class="hash-link" aria-label="Direct link to Context Improvements" title="Direct link to Context Improvements">​</a></h3><ul><li><p>Function <code>createBindingFromClass</code> allow bindings to be created from dynamic value provider classes, for example: </p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">tags</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">greeting</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'c'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">DynamicGreetingProvider</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">value</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'currentUser'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> user</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Hello, </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation keyword" style="color:#00009f">this</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">user</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// toDynamicValue() is used internally</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// A tag `{type: 'dynamicValueProvider'}` is added</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> binding </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">createBindingFromClass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">GreetingProvider</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">binding</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>A provider class can use dependency injection to receive resolution-related
metadata such as context and binding. But the overhead to wrap a factory
function is not desired for some use cases. <a href="https://github.com/strongloop/loopback-next/pull/5370" target="_blank" rel="noopener noreferrer">PR#5370</a> introduces a lightweight alternative using toDynamicValue as follows:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ValueFactory</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/context'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// The factory function now have access extra metadata about the resolution</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> factory</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ValueFactory</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token builtin">string</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> resolutionCtx </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Hello, </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">resolutionCtx</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">context</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">name</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">#</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string interpolation">    resolutionCtx</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">binding</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">key</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string interpolation">  </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c"> </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">resolutionCtx</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">options</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">session</span><span class="token template-string interpolation operator" style="color:#393A34">?.</span><span class="token template-string interpolation function" style="color:#d73a49">getBindingPath</span><span class="token template-string interpolation punctuation" style="color:#393A34">(</span><span class="token template-string interpolation punctuation" style="color:#393A34">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> b </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ctx</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'msg'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toDynamicValue</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">factory</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>  A benchmark is added to measure the performance of
different styles of context bindings in package <a href="https://github.com/strongloop/loopback-next/tree/master/benchmark" target="_blank" rel="noopener noreferrer">@loopback/benchmark</a>. You can run <code>npm run -s benchmark:context</code> to see the result.</p></li><li><p><a href="https://github.com/strongloop/loopback-next/pull/5378" target="_blank" rel="noopener noreferrer">PR#5378</a> introduced a model booter to automatically bind model classes to the application during boot. You can retrieve and inject model constructors using key <code>models.&lt;model_name&gt;</code>. For example:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyModel</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyModelComponent</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  models </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">MyModel</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// you can get MyModel by `models.MyModel`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> modelCtor </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> myApp</span><span class="token punctuation" style="color:#393A34">.</span><span class="token generic-function function" style="color:#d73a49">getSync</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name keyword" style="color:#00009f">typeof</span><span class="token generic-function generic class-name"> MyModel</span><span class="token generic-function generic class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'models.MyModel'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="build-improvements">Build Improvements<a href="#build-improvements" class="hash-link" aria-label="Direct link to Build Improvements" title="Direct link to Build Improvements">​</a></h3><ul><li><p>We upgraded the dependency to <a href="mailto:TypeScript@3.9.2." target="_blank" rel="noopener noreferrer">TypeScript@3.9.2.</a> Code adjustments including <code>null</code> check and type intersection were made to be compatible with the new version. You can check <a href="https://github.com/strongloop/loopback-next/pull/5041/commits" target="_blank" rel="noopener noreferrer">PR#5041</a> for more details.</p></li><li><p>Replace eslint rule <code>no-invalid-this</code> with TypeScript-aware one: In code accessing <code>this</code> variable, eslint-ignore comment for <code>no-invalid-this</code> will no longer work. You can either
change those comments to disable <code>@typescript-eslint/no-invalid-this</code>,  or better tell TypeScript what is the type of <code>this</code> in your function.</p><p>  A TypeScript example:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Suite</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'mocha'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">describe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'my mocha suite'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Suite</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">timeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">it</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'is slow'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Mocha</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">timeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>  A JavaScript example:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">describe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'my mocha suite'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/** @this {Mocha.Suite} */</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">timeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">it</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'is slow'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/** @this {Mocha.Context} */</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">timeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Remove hand-written index files: We removed the root level dummy index files and changed the entry point of project to be the index file inside <code>src</code> folder. An example of the latest layout of a package can be found in the <a href="https://github.com/strongloop/loopback-next/tree/master/examples/todo" target="_blank" rel="noopener noreferrer">Todo application</a>.</p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="application-booter">Application Booter<a href="#application-booter" class="hash-link" aria-label="Direct link to Application Booter" title="Direct link to Application Booter">​</a></h3><ul><li><p>You can register a booter to boot a sub-application as:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MainAppWithSubAppBooter</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">BootMixin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Application</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">projectRoot </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> __dirname</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// boot a sub-application `app`, its bindings will be added as well</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">applicationBooter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation-and-blog">Documentation and Blog<a href="#documentation-and-blog" class="hash-link" aria-label="Direct link to Documentation and Blog" title="Direct link to Documentation and Blog">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-loopback-can-offer-on-top-of-express">What LoopBack can offer on top of Express<a href="#what-loopback-can-offer-on-top-of-express" class="hash-link" aria-label="Direct link to What LoopBack can offer on top of Express" title="Direct link to What LoopBack can offer on top of Express">​</a></h3><p>LoopBack is a framework built on top of Express. It comes packed with tools, features, and capabilities that enables rapid API and micro-services development and easy maintenance. Last month we published a blog summarizing the points that make LoopBack a compelling choice for Express developers when it comes to API development. You can read <a href="https://strongloop.com/strongblog/express-to-loopback/" target="_blank" rel="noopener noreferrer">this blog</a> to see how LoopBack can bring Express to the next level.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="managing-loopback-apis-with-ibm-apiconnect">Managing LoopBack APIs with IBM APIConnect<a href="#managing-loopback-apis-with-ibm-apiconnect" class="hash-link" aria-label="Direct link to Managing LoopBack APIs with IBM APIConnect" title="Direct link to Managing LoopBack APIs with IBM APIConnect">​</a></h3><p>LoopBack 4 application can integrate with API Connect framework. We've prepared an article on how you can take the APIs created from LoopBack and import them into API Connect for API management. Stay tuned for the published article.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="setting-debug-string">Setting Debug String<a href="#setting-debug-string" class="hash-link" aria-label="Direct link to Setting Debug String" title="Direct link to Setting Debug String">​</a></h3><p>Documentation <a href="https://loopback.io/doc/en/lb4/Setting-debug-strings.html" target="_blank" rel="noopener noreferrer">setting debug string</a> explains the usage of running a LoopBack 4 application with debug string turned on. You can check the documentation above to learn the debug string pattern and the format in each package.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="strong-error-handler">Strong Error Handler<a href="#strong-error-handler" class="hash-link" aria-label="Direct link to Strong Error Handler" title="Direct link to Strong Error Handler">​</a></h3><p>As a dependency of <a href="https://github.com/strongloop/loopback-next/tree/master/packages/rest" target="_blank" rel="noopener noreferrer"><code>@loopback/rest</code></a>, package <code>strong-error-handler</code> is an error handler for use in both development (debug) and production environments. You can use it to customize the error rejection in the LoopBack 4 sequence. For its detailed usage, please read the documentation <a href="https://loopback.io/doc/en/lb4/Using-strong-error-handler.html" target="_blank" rel="noopener noreferrer">using string error handler</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="postgresql-connector">Postgresql Connector<a href="#postgresql-connector" class="hash-link" aria-label="Direct link to Postgresql Connector" title="Direct link to Postgresql Connector">​</a></h3><p>We've been sharing the connector documentation with LB3, which might be confusing, especially for new LB4 users. We updated the PostgreSQL connector page and also the tutorial. By walking you through the steps of creating a LB4 application and connecting to the PostgreSQL database, we hope the new tutorial helps new users to pick up LoopBack 4 better.</p><p>You can read page <a href="https://loopback.io/doc/en/lb4/Connecting-to-PostgreSQL.html" target="_blank" rel="noopener noreferrer">connecting to PostgreSQL</a> to follow the tutorial.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="youtube-videos">Youtube Videos<a href="#youtube-videos" class="hash-link" aria-label="Direct link to Youtube Videos" title="Direct link to Youtube Videos">​</a></h2><p>For creating tutorials, we have more materials than documentations. Last month, one of our core maintainers <a href="https://github.com/bajtos" target="_blank" rel="noopener noreferrer">Miroslav</a> published two video tutorials on <a href="https://www.youtube.com/channel/UCR8LLOxVNwSEWLMqoZzQNXw" target="_blank" rel="noopener noreferrer">our StrongLoop YouTube channel</a>:</p><ul><li>How to reuse LoopBack repository code: <a href="https://www.youtube.com/watch?v=s2yDaKiNYCg" target="_blank" rel="noopener noreferrer">Click to watch the video</a></li><li>Migrate LoopBack 4 datasource config to TypeScript: <a href="https://www.youtube.com/watch?v=S3BKXh7wDYE" target="_blank" rel="noopener noreferrer">Click to watch the video</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="authentication">Authentication<a href="#authentication" class="hash-link" aria-label="Direct link to Authentication" title="Direct link to Authentication">​</a></h2><p>There are several documentation and user experience improvements happened this month to make the authentication system more automatic and easy to use:</p><ul><li><p>Added example <a href="https://github.com/strongloop/loopback-next/tree/master/examples/todo-jwt" target="_blank" rel="noopener noreferrer"><code>@loopback/todo-jwt</code></a> to demo enabling JWT authentication in the Todo application. Its corresponding tutorial <a href="https://loopback.io/doc/en/lb4/Authentication-Tutorial.html" target="_blank" rel="noopener noreferrer">JWT authentication tutorial</a> is coming soon.</p></li><li><p>Added security specification enhancer in <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/authentication-jwt" target="_blank" rel="noopener noreferrer">@loopback/authentication-jwt</a> to automatically bind the JWT scheme and global security specification to application. You don't need to manually add them in the application constructor anymore. The updated usage is documented in the <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/authentication-jwt#usage" target="_blank" rel="noopener noreferrer">README.md</a> file.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="june-milestones">June Milestones<a href="#june-milestones" class="hash-link" aria-label="Direct link to June Milestones" title="Direct link to June Milestones">​</a></h2><p>This month, we would like to work on the remaining items for the migration guide epic, documentation improvement and more. For more details, take a look at our <a href="https://github.com/strongloop/loopback-next/issues/5607" target="_blank" rel="noopener noreferrer">June milestone list on GitHub</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>In 2020, we look forward to helping you and seeing you around! LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Janny Hou</name>
            <uri>https://github.com/jannyhou</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to reuse custom LoopBack Repository code]]></title>
        <id>https://loopback.io/blog/2020-share-repository-code</id>
        <link href="https://loopback.io/blog/2020-share-repository-code"/>
        <updated>2020-06-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>When building a LoopBack 4 application, we often need to tweak or improve the default data access behavior provided by the framework. It's usually desirable to apply the same set of customizations for multiple models, possibly across several microservices. In this post, I'd like to share a few tips and tricks for reusing such repository code.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-a-repository-base-class">Using a Repository Base Class<a href="#using-a-repository-base-class" class="hash-link" aria-label="Direct link to Using a Repository Base Class" title="Direct link to Using a Repository Base Class">​</a></h2><p>In this approach, you insert a new repository class (the Repository Base Class, e.g. <code>AuditableRepository</code>) between your model-specific repository class (e.g. <code>ProductRepository</code>) and the repository class provided by the framework (typically <code>DefaultCrudRepository</code>). The base class will hold any code you want to reuse in multiple model-specific repositories.</p><p>A week ago, I recorded a screencast showing the concept of Repository base classes in practice, you can watch it here:</p><iframe width="560" height="315" src="https://www.youtube.com/embed/s2yDaKiNYCg" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe><p>The first step is to create a new source code file and implement an empty Repository Base Class. It's important to use <code>.repository.base.ts</code> suffix in the file name, this will allow <code>lb4 repository</code> to recognize the file as contributing a base class.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// src/repositories/auditing.repository.base.ts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  DefaultCrudRepository</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Entity</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  juggler</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/repository'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">AuditingRepository</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">  </span><span class="token class-name constant" style="color:#36acaa">T</span><span class="token class-name"> </span><span class="token class-name keyword" style="color:#00009f">extends</span><span class="token class-name"> Entity</span><span class="token class-name punctuation" style="color:#393A34">,</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">  </span><span class="token class-name constant" style="color:#36acaa">ID</span><span class="token class-name punctuation" style="color:#393A34">,</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">  Relations </span><span class="token class-name keyword" style="color:#00009f">extends</span><span class="token class-name"> object </span><span class="token class-name operator" style="color:#393A34">=</span><span class="token class-name"> </span><span class="token class-name punctuation" style="color:#393A34">{</span><span class="token class-name punctuation" style="color:#393A34">}</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name"></span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">DefaultCrudRepository</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name constant" style="color:#36acaa">T</span><span class="token class-name punctuation" style="color:#393A34">,</span><span class="token class-name"> </span><span class="token class-name constant" style="color:#36acaa">ID</span><span class="token class-name punctuation" style="color:#393A34">,</span><span class="token class-name"> Relations</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// put the shared code here</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You should also add an entry to <code>src/repositories/index.ts</code> file to re-export the new class:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// src/repositories/index.ts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./auditing.repository.base'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>When you run <code>lb4 repository</code> command now, it will find our new base class and offer it in the prompts:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ lb4 repository</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please select the datasource DbDatasource</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Select the model(s) you want to generate a repository for Product</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please select the repository base class (Use arrow keys)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">❯ DefaultCrudRepository (Legacy juggler bridge)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ----- Custom Repositories -----</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  AuditingRepository</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>I will not go into details on implementing custom persistence behavior here, please watch the screencast to learn how to create a repository class that sets the model property <code>modifiedBy</code> to the currently authenticated user on every write operation.</p><p>Once you have the repository base class implemented, you may want to share it between multiple projects (e.g. microservices). I recommend creating a LoopBack 4 extension providing the base class and packaging the extension as a standalone npm module..</p><ol><li>Create a new LoopBack 4 extension using <code>lb4 extension</code></li><li>Move <code>src/repositories/auditing.repository.base.ts</code> file to the extension (you can use the same file name and path, i.e. <code>src/repositories/auditing.repository.base.ts</code>)</li><li>In the extension, update <code>src/repositories/index.ts</code> and <code>src/index.ts</code> to re-export (new) artifacts.</li><li>Publish the extension to your (private) npm registry or add it as a new package to your monorepo.</li></ol><p>In order to use the repository base class from the extension in an application project, we have a bit of work to do. At the moment, <code>lb4 repository</code> does not scan dependencies in <code>node_modules</code> for repository base classes. To make the base class discoverable by LoopBack's CLI, you can add a tiny wrapper file to your application into a location discoverable by the CLI. Implementation-wise, the wrapper just re-exports the base class provided by the extension.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// src/repositories/auditing.repository.base.ts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">AuditingRepository</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'my-extension-name'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>That's it! Now you can easily create new model-specific repositories using <code>lb4 repository</code> and select your shared repository as the base class.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-a-repository-mixin">Using a Repository Mixin<a href="#using-a-repository-mixin" class="hash-link" aria-label="Direct link to Using a Repository Mixin" title="Direct link to Using a Repository Mixin">​</a></h2><p>While easy to use, Repository Base Classes have few shortcomings too.</p><ol><li><p>JavaScript does not support multiple inheritance, thus it's not possible to combine behavior from multiple repository base classes in the same model-specific repository class.</p></li><li><p>Inheritance-based reuse is considered to be an anti-pattern in Object Oriented Design; it's recommended to use composition instead ("prefer composition over inheritance").</p></li></ol><p>Let's take a look on how to use Mixins to share bits of repository code via composition.</p><p>Instead of creating a repository base class, we will create a repository mixin using the <a href="https://loopback.io/doc/en/lb4/Mixin.html" target="_blank" rel="noopener noreferrer">mixin class pattern</a>.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">MixinTarget</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/core'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">CrudRepository</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Model</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/repository'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token generic-function function" style="color:#d73a49">AuditingRepositoryMixin</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token generic-function generic class-name">  </span><span class="token generic-function generic class-name constant" style="color:#36acaa">M</span><span class="token generic-function generic class-name"> </span><span class="token generic-function generic class-name keyword" style="color:#00009f">extends</span><span class="token generic-function generic class-name"> Model</span><span class="token generic-function generic class-name punctuation" style="color:#393A34">,</span><span class="token generic-function generic class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token generic-function generic class-name">  </span><span class="token generic-function generic class-name constant" style="color:#36acaa">R</span><span class="token generic-function generic class-name"> </span><span class="token generic-function generic class-name keyword" style="color:#00009f">extends</span><span class="token generic-function generic class-name"> MixinTarget</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name">CrudRepository</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name constant" style="color:#36acaa">M</span><span class="token generic-function generic class-name operator" style="color:#393A34">&gt;&gt;</span><span class="token generic-function generic class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token generic-function generic class-name"></span><span class="token generic-function generic class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">superClass</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">R</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">extends</span><span class="token plain"> superClass </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// put the shared code here</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Because <code>lb4 repository</code> does not support repository mixins yet, you have to edit model repository classes manually to apply your new mixin.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Constructor</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> inject</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/core'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">DefaultCrudRepository</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/repository'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">DbDataSource</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../datasources'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">AuditingRepositoryMixin</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../mixins/auditing.repository-mixin'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Product</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ProductRelations</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../models'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">ProductRepository</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">AuditingRepositoryMixin</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">  Product</span><span class="token class-name punctuation" style="color:#393A34">,</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">  Constructor</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">    DefaultCrudRepository</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">      Product</span><span class="token class-name punctuation" style="color:#393A34">,</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">      </span><span class="token class-name keyword" style="color:#00009f">typeof</span><span class="token class-name"> Product</span><span class="token class-name punctuation" style="color:#393A34">.</span><span class="token class-name">prototype</span><span class="token class-name punctuation" style="color:#393A34">.</span><span class="token class-name">id</span><span class="token class-name punctuation" style="color:#393A34">,</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">      ProductRelations</span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">    </span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">  </span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name"></span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">DefaultCrudRepository</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'datasources.db'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> dataSource</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> DbDataSource</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Product</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dataSource</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We are discussing CLI support for repository mixins in <a href="https://github.com/strongloop/loopback-next/issues/5565" target="_blank" rel="noopener noreferrer">loopback-next#5565</a>, please leave a comment to let us know if you are interested in this feature.</p><p>Mixins are easy to share via LoopBack extensions too:</p><ol><li>Create a new LoopBack 4 extension using <code>lb4 extension</code></li><li>Move <code>src/mixins/auditing.repository-mixin.ts</code> file to the extension</li><li>In the extension, update <code>src/mixins/index.ts</code> and <code>src/index.ts</code> to re-export (new) artifacts.</li><li>Publish the extension to your (private) npm registry or add it as a new package to your monorepo.</li><li>In your application, update <code>import</code> statements to import the shared repository mixin from the extension.</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="composing-mixins-together">Composing mixins together<a href="#composing-mixins-together" class="hash-link" aria-label="Direct link to Composing mixins together" title="Direct link to Composing mixins together">​</a></h2><p>When using a repository base class, it's easy to apply all project-specific behavior via a single base class. We can build a composite mixin to achieve the same easy of use with mixins too.</p><p>Let's say we already have <code>AuditingRepositoryMixin</code> and <code>TimeStampRepositoryMixin</code> implemented, and now we want to create <code>MyProjectRepositoryMixin</code> that will apply those two mixins, so that repository classes in our project don't have to repeat the list of mixins to apply.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// src/mixins/my-project.repository-mixin.ts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token generic-function function" style="color:#d73a49">MyProjectRepositoryMixin</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token generic-function generic class-name">  </span><span class="token generic-function generic class-name constant" style="color:#36acaa">M</span><span class="token generic-function generic class-name"> </span><span class="token generic-function generic class-name keyword" style="color:#00009f">extends</span><span class="token generic-function generic class-name"> Model</span><span class="token generic-function generic class-name punctuation" style="color:#393A34">,</span><span class="token generic-function generic class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token generic-function generic class-name">  </span><span class="token generic-function generic class-name constant" style="color:#36acaa">R</span><span class="token generic-function generic class-name"> </span><span class="token generic-function generic class-name keyword" style="color:#00009f">extends</span><span class="token generic-function generic class-name"> MixinTarget</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name">CrudRepository</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name constant" style="color:#36acaa">M</span><span class="token generic-function generic class-name operator" style="color:#393A34">&gt;&gt;</span><span class="token generic-function generic class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token generic-function generic class-name"></span><span class="token generic-function generic class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">superClass</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">R</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">AuditingRepositoryMixin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">TimeStampRepositoryMixin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">superClass</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="typescript-limitations">TypeScript limitations<a href="#typescript-limitations" class="hash-link" aria-label="Direct link to TypeScript limitations" title="Direct link to TypeScript limitations">​</a></h2><p>Now you may be thinking: can we define a repository base class that would be recognized by <code>lb4 repository</code> and would apply all required mixins?  Unfortunately, the answer is NO.</p><p>Consider the following code:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// src/repositories/base.repository.base.ts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">BaseRepository</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">  </span><span class="token class-name constant" style="color:#36acaa">T</span><span class="token class-name"> </span><span class="token class-name keyword" style="color:#00009f">extends</span><span class="token class-name"> Entity</span><span class="token class-name punctuation" style="color:#393A34">,</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">  </span><span class="token class-name constant" style="color:#36acaa">ID</span><span class="token class-name punctuation" style="color:#393A34">,</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">  Relations </span><span class="token class-name keyword" style="color:#00009f">extends</span><span class="token class-name"> object </span><span class="token class-name operator" style="color:#393A34">=</span><span class="token class-name"> </span><span class="token class-name punctuation" style="color:#393A34">{</span><span class="token class-name punctuation" style="color:#393A34">}</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name"></span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">MyProjectRepositoryMixin</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">  </span><span class="token class-name constant" style="color:#36acaa">T</span><span class="token class-name punctuation" style="color:#393A34">,</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">  Constructor</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">DefaultCrudRepository</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name constant" style="color:#36acaa">T</span><span class="token class-name punctuation" style="color:#393A34">,</span><span class="token class-name"> </span><span class="token class-name constant" style="color:#36acaa">ID</span><span class="token class-name punctuation" style="color:#393A34">,</span><span class="token class-name"> Relations</span><span class="token class-name operator" style="color:#393A34">&gt;&gt;</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name"></span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">DefaultCrudRepository</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// empty class</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>TypeScript reports the following error during compilation:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">error TS2562: Base class expressions cannot reference class type parameters.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can learn more about this problem and the reasoning for the current compiler behavior in GitHub issue <a href="https://github.com/Microsoft/TypeScript/issues/26154" target="_blank" rel="noopener noreferrer">Mixin does not allow Generic</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2><p>In this post, I explained how to extract bits of Repository code into a reusable form and how to share them by creating a new LoopBack extension. We discussed two options: an inheritance-based approach that uses Repository Base Class and a composition-based approach that uses Repository Mixin. Along the way, we discovered a few areas where TypeScript and LoopBack could improve the developer experience.</p><p>I hope you will find these techniques useful.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li>Join the discussion in <a href="https://github.com/strongloop/loopback-next/issues/5565" target="_blank" rel="noopener noreferrer">loopback-next#5565</a> and let us know if you are interested in CLI support for repository mixins.</li><li><a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">Join the community Slack chat</a></li><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li></ul>]]></content>
        <author>
            <name>Miroslav Bajtoš</name>
            <uri>http://github.com/bajtos</uri>
        </author>
        <category label="Feature" term="Feature"/>
        <category label="Repository" term="Repository"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack - Taking Express to the Next Level]]></title>
        <id>https://loopback.io/blog/express-to-loopback</id>
        <link href="https://loopback.io/blog/express-to-loopback"/>
        <updated>2020-05-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Express is the most popular Node.js package for web server development. Its lightweight, extensible, and flexible nature makes it a perfect fit for projects, small and large, from simple websites to complex web frameworks.</p><p>LoopBack is a framework built on top of Express. It comes packed with tools, features, and capabilities that enables rapid API and microservices development and easy maintenance.</p><p>In this post we will explore the points that make LoopBack a compelling choice for Express developers when it comes to API development.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="express-and-loopback-are-not-mutually-exclusive">Express and LoopBack Are Not Mutually Exclusive<a href="#express-and-loopback-are-not-mutually-exclusive" class="hash-link" aria-label="Direct link to Express and LoopBack Are Not Mutually Exclusive" title="Direct link to Express and LoopBack Are Not Mutually Exclusive">​</a></h2><p>First off, let's make it clear that Express and LoopBack are not mutually exclusive. You can very well use an existing Express app or middleware with LoopBack. This capability enables gradual migration from Express to LoopBack, that way you don't have to throw away your existing code and re-write everything from scratch. </p><p><img loading="lazy" src="/blog/assets/images/express-loopback-aaadc4fdf712d085c6cd78d669a15405.png" width="1664" height="1442" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="extending-an-existing-express-application-with-loopback">Extending an Existing Express Application With LoopBack<a href="#extending-an-existing-express-application-with-loopback" class="hash-link" aria-label="Direct link to Extending an Existing Express Application With LoopBack" title="Direct link to Extending an Existing Express Application With LoopBack">​</a></h3><p>To use an existing Express app with LoopBack, you can mount the LoopBack app on your Express app.</p><p>For a tutorial on how to do that, refer to "<a href="https://loopback.io/doc/en/lb4/express-with-lb4-rest-tutorial.html" target="_blank" rel="noopener noreferrer">Creating an Express Application with LoopBack REST API</a>".</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-express-middleware-with-loopback">Using Express Middleware With LoopBack<a href="#using-express-middleware-with-loopback" class="hash-link" aria-label="Direct link to Using Express Middleware With LoopBack" title="Direct link to Using Express Middleware With LoopBack">​</a></h3><p>LoopBack provides three broads ways for loading Express middleware.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="1-mountexpressrouter">1. mountExpressRouter()<a href="#1-mountexpressrouter" class="hash-link" aria-label="Direct link to 1. mountExpressRouter()" title="Direct link to 1. mountExpressRouter()">​</a></h4><p>The <code>mountExpressRouter()</code> method of the <a href="https://loopback.io/doc/en/lb4/apidocs.rest.restapplication.html" target="_blank" rel="noopener noreferrer">RestApplication</a> and <a href="https://loopback.io/doc/en/lb4/apidocs.rest.restserver.html" target="_blank" rel="noopener noreferrer">RestServer</a> class mounts an express router or application at a path, and supports OpenAPI specification for describing the endpoints provided by the router. It is the preferred choice for mounting data endpoints, like an existing REST API app.</p><p>For more details refer to "<a href="https://loopback.io/doc/en/lb4/Routes.html#mounting-an-express-router" target="_blank" rel="noopener noreferrer">Mounting an Express Router</a>".</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="2-invokemiddleware">2. invokeMiddleware()<a href="#2-invokemiddleware" class="hash-link" aria-label="Direct link to 2. invokeMiddleware()" title="Direct link to 2. invokeMiddleware()">​</a></h4><p>Express middleware can also be plugged into the <a href="https://loopback.io/doc/en/lb4/Sequence.html" target="_blank" rel="noopener noreferrer">Sequence</a> class using the <code>invokeMiddleware()</code> action. This approach is recommended when you are not looking beyond a hard-coded list of middleware, when it comes to flexibility and configurability.</p><p>Refer to "<a href="https://loopback.io/doc/en/lb4/Express-middleware.html#use-express-middleware-within-the-sequence-of-actions" target="_blank" rel="noopener noreferrer">Use Express middleware within the sequence of actions</a>" for more details.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="3-middleware-as-interceptors">3. Middleware as Interceptors<a href="#3-middleware-as-interceptors" class="hash-link" aria-label="Direct link to 3. Middleware as Interceptors" title="Direct link to 3. Middleware as Interceptors">​</a></h4><p>Express middleware can act as interceptors to controller methods at global, class, or method levels. It is not as simple as the previous two methods, but it provides the most configurability.</p><p>The following helper methods from the <code>@loopback/express</code> package enable Express middleware to be wrapped into LoopBack interceptors.</p><ul><li><code>toInterceptor</code> - Wraps an Express handler function to a LoopBack interceptor function</li><li><code>createInterceptor</code> - Creates a LoopBack interceptor function from an Express factory function with configuration</li><li><code>defineInterceptorProvider</code> - Creates a LoopBack provider class for interceptors from an Express factory function with configuration. This is only necessary that injection and/or change of configuration is needed. The provider class then needs to be bound to the application context hierarchy as a global or local interceptor.</li></ul><p>Refer to "<a href="https://loopback.io/doc/en/lb4/Middleware.html" target="_blank" rel="noopener noreferrer">Middleware</a>" and "<a href="https://loopback.io/doc/en/lb4/Express-middleware.html#use-express-middleware-as-interceptors-for-controllers" target="_blank" rel="noopener noreferrer">Use Express middleware as interceptors for controllers</a>" for more information.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-does-loopback-offer-on-top-of-express">What Does LoopBack Offer on Top of Express?<a href="#what-does-loopback-offer-on-top-of-express" class="hash-link" aria-label="Direct link to What Does LoopBack Offer on Top of Express?" title="Direct link to What Does LoopBack Offer on Top of Express?">​</a></h2><p>Express is a very extensible but bare-bones web server implementation. What LoopBack offers on top of Express is a set of tools and capabilities that make rapid API and microservices development possible and maintenance easy. REST API and microservices development with Express is possible but after a certain level of complexity, it can become a bug-ridden repetitive exercise for each new project. Using a REST API framework like LoopBack cuts down the development time and reduces maitenance headache.</p><p>Here are some of the points that makes LoopBack an excellent API development framework for Express developers.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-rest-api-specialist">1. REST API Specialist<a href="#1-rest-api-specialist" class="hash-link" aria-label="Direct link to 1. REST API Specialist" title="Direct link to 1. REST API Specialist">​</a></h3><p>LoopBack is specially crafted for REST API development. The framework's architecture, developer experience, and everything around it are designed primarily with REST API on mind.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="i-model-view-controller-mvc-pattern">i. Model-View-Controller (MVC) Pattern<a href="#i-model-view-controller-mvc-pattern" class="hash-link" aria-label="Direct link to i. Model-View-Controller (MVC) Pattern" title="Direct link to i. Model-View-Controller (MVC) Pattern">​</a></h4><p><a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller" target="_blank" rel="noopener noreferrer">MVC</a> is a popular software design pattern that seprates the internal representation of data, implementation of access to this data, and what is presented to the client. This enables clear decoupling of the components that make up the application, which in turn leads to fewer bugs and better management of the development process.</p><p>LoopBack implements the MVC pattern. The models are defined in model files, controllers provide the REST API interface, and views are JSON objects returned by the controller. This not only allows modular development of the project, but also prevents the codebase from getting messy and unmanageable as the project grows.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="ii-repository-pattern">ii. Repository Pattern<a href="#ii-repository-pattern" class="hash-link" aria-label="Direct link to ii. Repository Pattern" title="Direct link to ii. Repository Pattern">​</a></h4><p><a href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/microservice-ddd-cqrs-patterns/infrastructure-persistence-layer-design#the-repository-pattern" target="_blank" rel="noopener noreferrer">Repository pattern</a> is an abstraction for data access logic. It is a great way to decouple data access details from models.</p><p>In LoopBack, model files define only the shape and properties of models, connection and queries are handled by repositories which are bound to the models.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="iii-openapi">iii. OpenAPI<a href="#iii-openapi" class="hash-link" aria-label="Direct link to iii. OpenAPI" title="Direct link to iii. OpenAPI">​</a></h4><p>LoopBack uses <a href="http://spec.openapis.org/oas/v3.0.3" target="_blank" rel="noopener noreferrer">OpenAPI specification</a> for describing the data request and response formats. This highly descriptive standard specification greatly reduces the friction involved in the structural aspect of API development and consumption.</p><p>LoopBack exposes an OpenAPI specification file created out of the controllers in the app, which is essentially the documentation of the whole REST API of the app.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="iv-crud">iv. CRUD<a href="#iv-crud" class="hash-link" aria-label="Direct link to iv. CRUD" title="Direct link to iv. CRUD">​</a></h4><p>With a <a href="https://loopback.io/doc/en/lb4/DataSources.html" target="_blank" rel="noopener noreferrer">datasource</a> defined and configured, once a model and its corresponding repository and controller are created, a <a href="https://en.wikipedia.org/wiki/Create,_read,_update_and_delete" target="_blank" rel="noopener noreferrer">CRUD</a> functionality is automatically available for the model without any additional work.</p><p>The auto-generated functionality and implementation can be modified by editing the controller and/or the respository files of the model.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="v-support-for-numerous-databases">v. Support for Numerous Databases<a href="#v-support-for-numerous-databases" class="hash-link" aria-label="Direct link to v. Support for Numerous Databases" title="Direct link to v. Support for Numerous Databases">​</a></h4><p>Configuring database connectivity and executing queries is one of the most crucial tasks when developing APIs. With the numerous database options available, writing optimal queries, and maybe even switching to a different database altogether can become a very tedious and time-consuming task.</p><p>LoopBack provides an abstraction for database access using <a href="https://loopback.io/doc/en/lb4/DataSources.html" target="_blank" rel="noopener noreferrer">datasources</a>. All you have to do is select the database you want to use for your app and provide the connectivity details. LoopBack then takes care of making the connection and running the queries in the context of a REST API implementation.</p><p>Any time you want to switch to a different database, it is just a matter to speciying a new datasource. You don't have to worry about re-writing the queries, LoopBack takes care of it for you.</p><p>The following datasources are supported by LoopBack: In-memory db, In-memory key-value, IBM Object Storage, IBM Db2 (for Linux, Unix, Windows), IBM Db2 for i, IBM Db2 for z/OS, IBM DashDB, IBM MQ Light, IBM Cloudant DB, Couchdb 2.x, IBM WebSphere eXtreme Scale key-value, Cassandra, gRPC, Redis, MongoDB, MySQL, PostgreSQL, OracleDB, Microsoft SQL, and z/OS Connect Enterprise Edition.</p><p>Non-database datasources supported by LoopBack includes: OpenAPI, REST services, SOAP webservices, Email, and ElasticSearch.</p><p>Community supported datasources includes: Couchbase, Neo4j, Twilio, Kafka, and SAP HANA.</p><p>This wide of array of datasources covers almost all the popular databases used for REST API development, which significantly reduces the development time and effort in the database department.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="vi-integration-capabilities-with-external-apis">vi. Integration Capabilities With External APIs<a href="#vi-integration-capabilities-with-external-apis" class="hash-link" aria-label="Direct link to vi. Integration Capabilities With External APIs" title="Direct link to vi. Integration Capabilities With External APIs">​</a></h4><p>Apart from using the non-database datasources provided by LoopBack, you can create your own <a href="https://loopback.io/doc/en/lb4/Services.html" target="_blank" rel="noopener noreferrer">services</a> for connecting to external REST/SOAP/gRPC APIs.</p><p>These services can then be used in the controllers, effectively creating an OpenAPI-compliant proxy to those remote services. This usage scenario is perfect for proving a custom interface to an existing (legacy) API.</p><p><img loading="lazy" src="/blog/assets/images/req-res-high-level-7f949e5727fd9664493ad1a5c5516464.png" width="1981" height="843" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-dependency-injection">2. Dependency Injection<a href="#2-dependency-injection" class="hash-link" aria-label="Direct link to 2. Dependency Injection" title="Direct link to 2. Dependency Injection">​</a></h3><p>Conventionally, dependencies are passed as function parameters. This method works fine if the dependency is used only in the invoked function, however it can get pretty complex and unwieldy in certain scenarios because the dependency parameter is a factor that prevents the caller and the called function from being <a href="https://en.wikipedia.org/wiki/Loose_coupling" target="_blank" rel="noopener noreferrer">loosely coupled</a>.</p><p>Imagine, a dependency is used within a function within a function within a function within a function. You will need to pass the dependency from the called function to the next function to the next function to the next function. Now imagine, the dependency has been changed to a different object in one or more places. You will now have to change it in the "top" function and all the places where it was being passed around. It is a mess.</p><p>Enter <a href="https://en.wikipedia.org/wiki/Dependency_injection" target="_blank" rel="noopener noreferrer">dependency injection</a> (DI). Dependency injection enables dependent code to inject the dependencies themselves, instead of relying on the caller function to pass the dependency in function arguments. That way, any time something changes, it never includes the caller. The caller and called functions are loosely coupled.</p><p>LoopBack's <a href="https://loopback.io/doc/en/lb4/Context.html" target="_blank" rel="noopener noreferrer">Context</a> object is a DI container. It makes it possible to inject dependencies in classes, properties, and methods without having to pass dependecies in constructor or method parameters.</p><p>The ability to use DI in your codebase can greatly improve the overall quality of code, increase development productivity, improve tests cases, and reduce maintenance costs.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-extensibility">3. Extensibility<a href="#3-extensibility" class="hash-link" aria-label="Direct link to 3. Extensibility" title="Direct link to 3. Extensibility">​</a></h3><p>LoopBack is designed to be highly extensible. It provides extensibility using different artifacts and patterns in different layers of the framework.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="i-sequence">i. Sequence<a href="#i-sequence" class="hash-link" aria-label="Direct link to i. Sequence" title="Direct link to i. Sequence">​</a></h4><p>The LoopBack <a href="https://loopback.io/doc/en/lb4/Sequence.html" target="_blank" rel="noopener noreferrer">Sequence</a> class contains the whole request-response handling infrastructure of the framework, therefore the <code>Sequence</code> is the perfect place for implementing functionality that requires access to the beginning and the end of the request-response cycle - like logging, authentication, etc.</p><p>It is very easy to modify the existing functionality or add new ones by implementing a custom <a href="https://loopback.io/doc/en/lb4/apidocs.rest.sequencehandler.html" target="_blank" rel="noopener noreferrer">SequenceHandler</a> for your app's <code>Sequence</code>. The <code>Sequence</code> file is located at <code>src/sequence.ts</code>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="ii-components">ii. Components<a href="#ii-components" class="hash-link" aria-label="Direct link to ii. Components" title="Direct link to ii. Components">​</a></h4><p><a href="https://loopback.io/doc/en/lb4/Components.html" target="_blank" rel="noopener noreferrer">Components</a> are great for grouping different but related artifacts for implementing a feature or functionality in the app.</p><p>Components can contribute the following artifacts to the app:</p><ul><li><a href="https://loopback.io/doc/en/lb4/Controllers.html" target="_blank" rel="noopener noreferrer">Controllers</a></li><li><a href="https://loopback.io/doc/en/lb4/Services.html" target="_blank" rel="noopener noreferrer">Providers</a></li><li><a href="https://www.typescriptlang.org/docs/handbook/classes.html" target="_blank" rel="noopener noreferrer">Classes</a></li><li><a href="https://loopback.io/doc/en/lb4/Server.html" target="_blank" rel="noopener noreferrer">Servers</a></li><li><a href="https://loopback.io/doc/en/lb4/Life-cycle.html" target="_blank" rel="noopener noreferrer">Lifecycle observers</a></li><li><a href="https://loopback.io/doc/en/lb4/Binding.html" target="_blank" rel="noopener noreferrer">Bindings</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="iii-extensions">iii. Extensions<a href="#iii-extensions" class="hash-link" aria-label="Direct link to iii. Extensions" title="Direct link to iii. Extensions">​</a></h4><p><a href="https://loopback.io/doc/en/lb4/Extension-point-and-extensions.html" target="_blank" rel="noopener noreferrer">Extension points and extensions</a> are the interfaces for developing plugins for LoopBack apps. It is an excellent pattern for adding decoupled extensibility to a software system.</p><p>LoopBack provides the following helper decorators and functions for implementating extension points and extensions on top of its <a href="https://loopback.io/doc/en/lb4/Context.html" target="_blank" rel="noopener noreferrer">Inversion of Control</a> and <a href="https://loopback.io/doc/en/lb4/Dependency-injection.html" target="_blank" rel="noopener noreferrer">Dependency Injection</a> container.</p><ul><li><code>@extensionPoint</code> - decorates a class to be an extension point with an optional custom name</li><li><code>@extensions</code> - injects a getter function to access extensions to the target extension point</li><li><code>@extensions.view</code> - injects a context view to access extensions to the target extension point. The view can be listened for context events.</li><li><code>@extensions.list</code> - injects an array of extensions to the target extension point. The list is fixed when the injection is done and it does not add or remove extensions afterward.</li><li><code>extensionFilter</code> - creates a binding filter function to find extensions for the named extension point</li><li><code>extensionFor</code> - creates a binding template function to set the binding to be an extension for the named extension point(s). It can accept one or more extension point names to contribute to given extension points</li><li><code>addExtension</code> - registers an extension class to the context for the named extension point</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="iv-life-cycle-observers">iv. Life Cycle Observers<a href="#iv-life-cycle-observers" class="hash-link" aria-label="Direct link to iv. Life Cycle Observers" title="Direct link to iv. Life Cycle Observers">​</a></h4><p><a href="https://loopback.io/doc/en/lb4/Extension-life-cycle.html" target="_blank" rel="noopener noreferrer">Life cycle observers</a> are artifacts that can take part in the starting and stopping processes of the application. They can execute code as the app is starting (such as configuring something) or is shutting down (such as closing the connection to a server).</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="v-servers">v. Servers<a href="#v-servers" class="hash-link" aria-label="Direct link to v. Servers" title="Direct link to v. Servers">​</a></h4><p>The LoopBack REST API server is just one of the many possible server capabilities of LoopBack. LoopBack can start multiple <a href="https://loopback.io/doc/en/lb4/Creating-servers.html" target="_blank" rel="noopener noreferrer">servers</a> together of similar or different implementations, making LoopBack an excellent microservices hub. You can use this to create your own implementations of REST, SOAP, gRPC, MQTT and more protocols. For an overview, see <a href="https://loopback.io/doc/en/lb4/Server.html" target="_blank" rel="noopener noreferrer">Server</a>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="vi-interceptors">vi. Interceptors<a href="#vi-interceptors" class="hash-link" aria-label="Direct link to vi. Interceptors" title="Direct link to vi. Interceptors">​</a></h4><p>LoopBack supports <a href="https://loopback.io/doc/en/lb4/Interceptors.html" target="_blank" rel="noopener noreferrer">Interceptors</a>. They are reusable functions to provide <a href="https://en.wikipedia.org/wiki/Aspect-oriented_programming" target="_blank" rel="noopener noreferrer">aspect-oriented</a> logic around method invocations. There are many use cases for interceptors, such as:</p><p>a. Add extra logic before / after method invocation, for example, logging or measuring method invocations.
b. Validate/transform arguments
c. Validate/transform return values
d. Catch/transform errors, for example, normalize error objects
e. Override the method invocation, for example, return from cache</p><p>For more details about extensibility in LoopBack, refer to "<a href="https://loopback.io/doc/en/lb4/Extending-LoopBack-4.html" target="_blank" rel="noopener noreferrer">Extending LoopBack 4</a>".</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-authentication-and-authorization">4. Authentication and Authorization<a href="#4-authentication-and-authorization" class="hash-link" aria-label="Direct link to 4. Authentication and Authorization" title="Direct link to 4. Authentication and Authorization">​</a></h3><p>Authentication and authorization form the basis of securing and controlling access to protected resources, and is a requirement for any app that deals with protected data. Authentication is responsible for verifying the user's identity before allowing access to a protected resource. Authorization is responsible for deciding if a user can perform a certain action on a protected resource or not.</p><p>LoopBack comes with an <a href="https://loopback.io/doc/en/lb4/apidocs.authentication.html" target="_blank" rel="noopener noreferrer">authentication component</a>, which enables developers to plug in different authentication strategies (custom and standard) to the app. It also supports all the <a href="http://www.passportjs.org/" target="_blank" rel="noopener noreferrer">Passport</a> authentication strategies.</p><p>You can read more about authentication in LoopBack in the <a href="https://loopback.io/doc/en/lb4/Loopback-component-authentication.html" target="_blank" rel="noopener noreferrer">authentication doc</a>.</p><p>LoopBack's <a href="https://loopback.io/doc/en/lb4/apidocs.authorization.html" target="_blank" rel="noopener noreferrer">authorization component</a> is a highly configurable authorization system, which allows you to write your own authorization rules or use an existing one.</p><p>All the details about authorization in LoopBack can be found in the <a href="https://loopback.io/doc/en/lb4/Loopback-component-authorization.html" target="_blank" rel="noopener noreferrer">authorization doc</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-great-command-line-tools">5. Great command-line Tools<a href="#5-great-command-line-tools" class="hash-link" aria-label="Direct link to 5. Great command-line Tools" title="Direct link to 5. Great command-line Tools">​</a></h3><p>Datasources, models, controllers, repositories are great for modularizing the app, but manually creating the files and writing repetitive code with minimal differences for each new entity would be a tedious time-consuming activity.</p><p>LoopBack comes with a utility command-line tool, <a href="https://www.npmjs.com/package/@loopback/cli" target="_blank" rel="noopener noreferrer">lb4</a>. It has commands for generating datasources, models, controllers, repositories, and other LoopBack artifacts so that you don't have to create them manually.</p><p>Given a datasource, the <code>discover</code> command can generate models files from the database. This can be a great time saver if you are using an existing database of your LoopBack app, and especially if the database had a lot of tables with many columns (or their equivalent structures). If an OpenAPI specification is provided, the <code>openapi</code> command will not only create the model files, it will also create the controller files. This can save even more time.</p><p>Refer to the <a href="https://loopback.io/doc/en/lb4/Command-line-interface.html" target="_blank" rel="noopener noreferrer">documentation</a> for all the details about the <code>lb4</code> command.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-typescript-support">6. TypeScript Support<a href="#6-typescript-support" class="hash-link" aria-label="Direct link to 6. TypeScript Support" title="Direct link to 6. TypeScript Support">​</a></h3><p>LoopBack is a <a href="https://www.typescriptlang.org/" target="_blank" rel="noopener noreferrer">TypeScript</a> framework. TypeScript is a typed superset of JavaScript.</p><p>Although not directly a LoopBack feature, using a typed language for development prevents many bugs and steers developers towards using optimized coding practices. This can make a significant difference in the development and maintenance efforts when compared to using plain JavaScript.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="7-the-ibm-confidence">7. The IBM Confidence<a href="#7-the-ibm-confidence" class="hash-link" aria-label="Direct link to 7. The IBM Confidence" title="Direct link to 7. The IBM Confidence">​</a></h3><p>LoopBack is an open source project backed by IBM, used by IBM products and customers. Hopefully, this gives you assurance on the quality and the longevity of this framework.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>In 2020, we look forward to helping you and seeing you around! LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Yaapa Hage</name>
            <uri>https://github.com/hacksparrow</uri>
        </author>
        <category label="Express" term="Express"/>
        <category label="JavaScript" term="JavaScript"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 April 2020 Milestone Update]]></title>
        <id>https://loopback.io/blog/april-2020-milestone</id>
        <link href="https://loopback.io/blog/april-2020-milestone"/>
        <updated>2020-05-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>In April, we focused mostly on completing migration activities, like the migration guide and other related
tasks like running existing tests in a LoopBack 3 application after composing it within a LoopBack 4 application. But, that didn't stop us from exploring and adding some cool features.</p><p>We now have a new <a href="https://github.com/strongloop/loopback-next/tree/master/packages/express" target="_blank" rel="noopener noreferrer">Express</a> package, which enables modeling Express middleware functions as an interceptor chain. Also it is possible now to break a complex application into much smaller components and wire them in a main application. You can find more details on thsese below in <a href="#exploring-new-territories"><code>Exploring new territories</code></a>.</p><p>Also our community has published many <a href="https://www.npmjs.com/search?q=keywords:loopback-extension" target="_blank" rel="noopener noreferrer">LoopBack 4 extensions in NPM</a>. Many of these extensions are addressing a variety of usecases like pub-sub messaging, mqtt, graphql, rate-limiting, authentication, logging, AWS cloud integration, etc. The extensibility of LoopBack in real time use cases are even surprising us and the possibilities seems to be endless.</p><ul><li><a href="#migration-guide">Migration Guide</a></li><li><a href="#exploring-new-territories">Exploring new territories</a></li><li><a href="#apiconnect-extension">APIConnect Extension</a></li><li><a href="#miscellaneous">Miscellaneous</a></li><li><a href="#documentation">Documentation</a></li><li><a href="#community-contributions">Community Contributions</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="migration-guide">Migration Guide<a href="#migration-guide" class="hash-link" aria-label="Direct link to Migration Guide" title="Direct link to Migration Guide">​</a></h2><p>We have made very good progress with migration guides and LoopBack 3 users should have a solid ground now to explore and migrate to LoopBack 4. The well used LoopBack 3 components are all covered with migrations examples and tutorials. There are certain components which are having fewer downloads per day, that are not covered yet. But we are pursuing steadily to address all migration questions.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="differences-in-request-response-cycle">Differences in Request-Response Cycle<a href="#differences-in-request-response-cycle" class="hash-link" aria-label="Direct link to Differences in Request-Response Cycle" title="Direct link to Differences in Request-Response Cycle">​</a></h3><p>We have created a document describing the differences between the <a href="https://loopback.io/doc/en/lb4/LB3-vs-LB4-request-response-cycle.html" target="_blank" rel="noopener noreferrer">request-response cycle</a> in LoopBack 3 and LoopBack 4. Those of you coming from LoopBack 3 will have a better understanding about how the request-response cycle works in LoopBack 4 compared to LoopBack 3.</p><p>The <a href="https://loopback.io/doc/doc/en/lb4/Request-response-cycle.html" target="_blank" rel="noopener noreferrer">LoopBack 4 request-response cycle documentation</a> contains the details in more depth for LoopBack 4.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="example-to-use-passport-strategies-for-authentication-in-loopback-4">Example to use Passport Strategies for Authentication in LoopBack 4<a href="#example-to-use-passport-strategies-for-authentication-in-loopback-4" class="hash-link" aria-label="Direct link to Example to use Passport Strategies for Authentication in LoopBack 4" title="Direct link to Example to use Passport Strategies for Authentication in LoopBack 4">​</a></h3><p>A new <a href="https://github.com/strongloop/loopback-next/tree/master/examples/passport-login" target="_blank" rel="noopener noreferrer">Passport Login example</a> is now available. It shows how to use <a href="http://www.passportjs.org/docs/" target="_blank" rel="noopener noreferrer">Passport Strategies</a> in LoopBack 4 as an independent authentication step in the application <code>Sequence</code> as well as standard express middleware. If you are using the loopback-component-passport in LoopBack 3, this example can help you migrate your application to LoopBack 4.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="booting-migration-guide">Booting Migration Guide<a href="#booting-migration-guide" class="hash-link" aria-label="Direct link to Booting Migration Guide" title="Direct link to Booting Migration Guide">​</a></h3><p>Because of the architectural differences, the booting process is very different in LoopBack 3 and LoopBack 4. <a href="https://loopback.io/doc/en/lb4/LB3-vs-LB4-booting.html" target="_blank" rel="noopener noreferrer">This document</a> describes the differences and lists the various artifacts that take part in the booting process in LoopBack 4.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="custom-validation">Custom Validation<a href="#custom-validation" class="hash-link" aria-label="Direct link to Custom Validation" title="Direct link to Custom Validation">​</a></h3><p>The <a href="https://loopback.io/doc/en/lb4/LB3-vs-LB4-request-response-cycle.html#data-coercion-and-validation" target="_blank" rel="noopener noreferrer">data coercion and validation</a> and <a href="https://loopback.io/doc/en/lb4/LB3-vs-LB4-request-response-cycle.html#access-to-data-before-writing-to-the-databases" target="_blank" rel="noopener noreferrer">access to data before writing to the databases</a> sections of the <a href="https://loopback.io/doc/en/lb4/LB3-vs-LB4-request-response-cycle.html" target="_blank" rel="noopener noreferrer">LB3 to LB4 request-response migration guide</a> deals with the topic of access and application of custom validation to data in Loopback 4.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="differences-between-lb3-and-lb-4-cli-commands">Differences between LB3 and LB 4 CLI Commands<a href="#differences-between-lb3-and-lb-4-cli-commands" class="hash-link" aria-label="Direct link to Differences between LB3 and LB 4 CLI Commands" title="Direct link to Differences between LB3 and LB 4 CLI Commands">​</a></h3><p>The command line interfaces of LoopBack 3 and LoopBack 4 have some similarities, but also some differences. We have outlined these similarities and differences in <a href="https://loopback.io/doc/en/lb4/migration-cli.html" target="_blank" rel="noopener noreferrer">Migrating CLI usage patterns</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="exploring-new-territories">Exploring New Territories<a href="#exploring-new-territories" class="hash-link" aria-label="Direct link to Exploring New Territories" title="Direct link to Exploring New Territories">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-new-express-package-and-enabling-express-middleware-as-interceptors">The NEW Express Package and Enabling Express Middleware as Interceptors<a href="#the-new-express-package-and-enabling-express-middleware-as-interceptors" class="hash-link" aria-label="Direct link to The NEW Express Package and Enabling Express Middleware as Interceptors" title="Direct link to The NEW Express Package and Enabling Express Middleware as Interceptors">​</a></h3><p>The new <a href="https://github.com/strongloop/loopback-next/tree/master/packages/express" target="_blank" rel="noopener noreferrer">Express Package</a>, has enabled injecting single and multiple express middleware functions as <code>interceptors</code> into <code>Controller</code> invocations and also as a middleware step in the application <code>Sequence</code> as follows:</p><p>The default sequence now has a Middleware step. It creates an invocation chain to call registered middleware handlers with the extension pattern. The sequence can be customized to have more than one Middleware step. Express middleware can also be wrapped as LB4 interceptors, which can in turn be added to global/class/method level. Move built-in cors and openapi endpoints as express middleware functions.</p><p>You can check the <a href="https://loopback.io/doc/en/lb4/Express-middleware.html" target="_blank" rel="noopener noreferrer">express middleware page in loopback docs</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="spike---migrating-oauth2-component">Spike - Migrating OAuth2 Component<a href="#spike---migrating-oauth2-component" class="hash-link" aria-label="Direct link to Spike - Migrating OAuth2 Component" title="Direct link to Spike - Migrating OAuth2 Component">​</a></h3><p>In story <a href="https://github.com/strongloop/loopback-next/issues/3959" target="_blank" rel="noopener noreferrer">#3959</a> we explored the possibility and evaluated the required effort to migrate module <a href="https://github.com/strongloop/loopback-component-oauth2" target="_blank" rel="noopener noreferrer"><code>loopback-component-oauth2</code></a>. Considering that LoopBack 4 currently focuses on the integration with third party OAuth 2.0 providers, and the module is complicated, we decide to defer the migration guide and demo a simplified server with OAuth 2.0 enabled on it.</p><p>You can find details about the mock server on page <a href="https://loopback.io/doc/en/lb4/migration-auth-oauth2.html" target="_blank" rel="noopener noreferrer">migration-auth-oauth2</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="running-loopback-3-tests-when-mounted-on-a-loopback-4-project">Running LoopBack 3 Tests when Mounted on a LoopBack 4 project<a href="#running-loopback-3-tests-when-mounted-on-a-loopback-4-project" class="hash-link" aria-label="Direct link to Running LoopBack 3 Tests when Mounted on a LoopBack 4 project" title="Direct link to Running LoopBack 3 Tests when Mounted on a LoopBack 4 project">​</a></h3><p>With users being able to <a href="https://loopback.io/doc/en/lb4/migration-mounting-lb3app.html" target="_blank" rel="noopener noreferrer">mount their LoopBack 3 tests on a LoopBack 4 project</a>, we explored how they can also migrate their LB3 tests onto the LB4 project. Documentation is <a href="https://github.com/strongloop/loopback-next/issues/5298" target="_blank" rel="noopener noreferrer">coming</a>, but if you want to see how an example of how to do it now, see the <a href="https://github.com/strongloop/loopback-next/pull/5251" target="_blank" rel="noopener noreferrer">spike</a>. The spike demonstrates running LB3 tests in the <a href="https://github.com/strongloop/loopback-next/tree/master/examples/lb3-application" target="_blank" rel="noopener noreferrer"><code>lb3-application</code> example</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="simplify-your-complex-applications---booting-component-applications">Simplify your Complex Applications - Booting Component Applications<a href="#simplify-your-complex-applications---booting-component-applications" class="hash-link" aria-label="Direct link to Simplify your Complex Applications - Booting Component Applications" title="Direct link to Simplify your Complex Applications - Booting Component Applications">​</a></h3><p>Users can now break down a complex application into much smaller components and wire them all together in a main application, with a new feature to <a href="https://github.com/strongloop/loopback-next/pull/5304" target="_blank" rel="noopener noreferrer">Boot up Component Applications</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="apiconnect-extension">APIConnect Extension<a href="#apiconnect-extension" class="hash-link" aria-label="Direct link to APIConnect Extension" title="Direct link to APIConnect Extension">​</a></h2><p>The <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/apiconnect" target="_blank" rel="noopener noreferrer">LoopBack APIConnect extension</a> is now tested by <a href="https://github.com/strongloop/loopback-next/issues/4498" target="_blank" rel="noopener noreferrer">publishing shopping app APIs, enhanced with the extension, on a IBM DataPower Gateway</a>.</p><p>We took the shopping example for a close-to-real-life scenario. This would help IBM APIConnect customers to develop their applications with LoopBack and manage them with IBM APIConnect.</p><p>Once LoopBack developers have their REST APIs created they could use the <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/apiconnect" target="_blank" rel="noopener noreferrer">LoopBack APIConnect extension</a> to enhance their OpenAPI spec with <code>x-ibm-</code> OpenAPI metadata. For the shopping example, we followed the <a href="https://github.com/strongloop/loopback4-example-shopping/blob/master/kubernetes/docs/deploy-to-ibmcloud.md" target="_blank" rel="noopener noreferrer">steps in the example repository</a> to deploy to IBM Cloud and then imported the OpenAPI specification to APIConnect with <a href="https://developer.ibm.com/apiconnect/2019/10/30/manage-and-enforce-openapi-v3-oai-v3/" target="_blank" rel="noopener noreferrer">steps explained in the IBM developer portal</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="miscellaneous">Miscellaneous<a href="#miscellaneous" class="hash-link" aria-label="Direct link to Miscellaneous" title="Direct link to Miscellaneous">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="extracting-jwt-authentication-to-an-extension-module">Extracting JWT Authentication to an Extension Module<a href="#extracting-jwt-authentication-to-an-extension-module" class="hash-link" aria-label="Direct link to Extracting JWT Authentication to an Extension Module" title="Direct link to Extracting JWT Authentication to an Extension Module">​</a></h3><p>After creating the demo for JWT authentication in <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer"><code>loopback4-shopping-example</code></a>, and applied a similar auth system in <a href="https://github.com/strongloop/loopback-next/tree/master/examples/access-control-migration" target="_blank" rel="noopener noreferrer"><code>access-control-migration</code></a>, we think it's time to extract the JWT authentication system into a separate extension package, so that people can quickly mount a component to try out the feature. </p><p>Last month, we created the extension as <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/authentication-jwt" target="_blank" rel="noopener noreferrer">authentication-jwt</a>, and its usage is well documented in the <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/authentication-jwt" target="_blank" rel="noopener noreferrer">README.md file</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="strong-soap-features-and-support">Strong-Soap Features and Support<a href="#strong-soap-features-and-support" class="hash-link" aria-label="Direct link to Strong-Soap Features and Support" title="Direct link to Strong-Soap Features and Support">​</a></h3><p>Strong-Soap now supports validation of <a href="https://github.com/strongloop/strong-soap/pull/275" target="_blank" rel="noopener noreferrer">anonymous simple types</a> and <a href="https://github.com/strongloop/strong-soap/pull/271" target="_blank" rel="noopener noreferrer">RPC suffixes</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="customizing-explorer-theme">Customizing Explorer Theme<a href="#customizing-explorer-theme" class="hash-link" aria-label="Direct link to Customizing Explorer Theme" title="Direct link to Customizing Explorer Theme">​</a></h3><p>As many community users show the interests in changing the look of explorer, we introduced a configuration property called <code>swaggerThemeFile</code> to specify user provided .css themes. For example:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Inside application constructor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// customize the swagger-ui</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">configure</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">RestExplorerBindings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">COMPONENT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">to</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  swaggerThemeFile</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/theme-newspaper.css'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can check the complete guide in section <a href="https://github.com/strongloop/loopback-next/blob/956a6aa574995c6cdd5066f6af7b92a93382eefc/packages/rest-explorer/README.md#customizing-swagger-ui-theme" target="_blank" rel="noopener noreferrer">customizing Swagger UI theme</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="move-datasource-configurations-from-json-to-ts-file">Move Datasource Configurations from .json to .ts File<a href="#move-datasource-configurations-from-json-to-ts-file" class="hash-link" aria-label="Direct link to Move Datasource Configurations from .json to .ts File" title="Direct link to Move Datasource Configurations from .json to .ts File">​</a></h3><p>To align with existing typescript files and dynamic configuration of datasources, we have <a href="https://github.com/strongloop/loopback-next/pull/5000" target="_blank" rel="noopener noreferrer">switched datasource configurations to .ts files</a> from LoopBack 3 style json files. Please watch the <a href="https://www.youtube.com/watch?v=S3BKXh7wDYE&amp;feature=youtu.be" target="_blank" rel="noopener noreferrer">video tutorial</a> from Miroslav on migrating <code>Migrate LoopBack 4 datasource config to TypeScript</code>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="build-with-ts-project-references">Build with TS Project-References<a href="#build-with-ts-project-references" class="hash-link" aria-label="Direct link to Build with TS Project-References" title="Direct link to Build with TS Project-References">​</a></h3><p>LoopBack monorepo was configured in a hacky way to allow TypeScript to build individual packages. We have made <a href="https://github.com/strongloop/loopback-next/pull/5155" target="_blank" rel="noopener noreferrer">changes to leverage TypeScript's Project-References</a>. Project references are a new feature in TypeScript 3.0 that allow to structure TypeScript projects into smaller pieces.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="other-build-features">Other Build Features<a href="#other-build-features" class="hash-link" aria-label="Direct link to Other Build Features" title="Direct link to Other Build Features">​</a></h3><p>Changes done to make <a href="https://github.com/strongloop/loopback-next/pull/5205" target="_blank" rel="noopener noreferrer">default compilation target as ES2018</a> and enable all ES2020 features for <code>lib</code> configuration.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="complex-openapi-validations">Complex OpenAPI Validations<a href="#complex-openapi-validations" class="hash-link" aria-label="Direct link to Complex OpenAPI Validations" title="Direct link to Complex OpenAPI Validations">​</a></h3><p>A list of AJV features have been added in the past few months including <a href="https://github.com/strongloop/loopback-next/pull/3539" target="_blank" rel="noopener noreferrer">AJV keywords</a>, <a href="https://github.com/strongloop/loopback-next/pull/4979" target="_blank" rel="noopener noreferrer">AJV extensibility</a>, <a href="https://github.com/strongloop/loopback-next/pull/4808" target="_blank" rel="noopener noreferrer">AJV service provider</a> and <a href="https://github.com/strongloop/loopback-next/pull/4762" target="_blank" rel="noopener noreferrer">asynchronous validations</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation">Documentation<a href="#documentation" class="hash-link" aria-label="Direct link to Documentation" title="Direct link to Documentation">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="working-with-data">Working with Data<a href="#working-with-data" class="hash-link" aria-label="Direct link to Working with Data" title="Direct link to Working with Data">​</a></h3><p>In LoopBack 4, models describe the shape of data, repositories provide behavior like CRUD operations, and controllers define routes. It's easy to manipulate and query data with LB4. However, for a long time LoopBack 4 documentation was missing the <em>Woring with Data</em> section and users were referencing the old docs in LoopBack 3. Even though LB3 has almost the same querying rules as LB4, the different styles between LB4 and LB3 sometimes are still causing confusion.</p><p>Gladly, we added that section with different filters under the page <a href="https://loopback.io/doc/en/lb4/Working-with-data.html" target="_blank" rel="noopener noreferrer">Usage Scenarios - Working with Data</a>. For each filter, we introduced the basic usage with Node.js and REST APIs and also show examples of using both APIs. For instance, we have an example of showing how the <code>limit</code> filter works with Node.js API and also the corresponding example of using REST. </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Node.js API:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">await orderRepository.find({limit: 5});</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">REST:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/orders?filter[limit]=5</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="calling-apis-with-openapi-specification">Calling APIs with OpenAPI Specification<a href="#calling-apis-with-openapi-specification" class="hash-link" aria-label="Direct link to Calling APIs with OpenAPI Specification" title="Direct link to Calling APIs with OpenAPI Specification">​</a></h3><p>If you want to connect to a REST service with an OpenAPI description, the <a href="https://github.com/strongloop/loopback-connector-openapi" target="_blank" rel="noopener noreferrer">OpenAPI connector</a> would be what you need. We updated the documentation in the <a href="https://loopback.io/doc/en/lb4/Calling-other-APIs-and-web-services.html" target="_blank" rel="noopener noreferrer">Calling other APIs and web services
</a> to include this usage. Besides, we added more configuration details in the <a href="https://loopback.io/doc/en/lb4/OpenAPI-connector.html" target="_blank" rel="noopener noreferrer">OpenAPI connector docs page</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="community-contributions">Community Contributions<a href="#community-contributions" class="hash-link" aria-label="Direct link to Community Contributions" title="Direct link to Community Contributions">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="added-tsdocs-for-loopback-packages">Added tsdocs for LoopBack Packages<a href="#added-tsdocs-for-loopback-packages" class="hash-link" aria-label="Direct link to Added tsdocs for LoopBack Packages" title="Direct link to Added tsdocs for LoopBack Packages">​</a></h3><p>Autogenerated API docs had descriptions empty for all packages which now fixed by <a href="https://github.com/strongloop/loopback-next/pull/4711" target="_blank" rel="noopener noreferrer">adding ts docs to all packages</a>. Please take a look at the <a href="https://loopback.io/doc/en/lb4/apidocs.index.html" target="_blank" rel="noopener noreferrer">API docs</a> to see the difference.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="consolidate-openapi-schema-using-a-new-spec-enhancer">Consolidate Openapi Schema using a New Spec Enhancer<a href="#consolidate-openapi-schema-using-a-new-spec-enhancer" class="hash-link" aria-label="Direct link to Consolidate Openapi Schema using a New Spec Enhancer" title="Direct link to Consolidate Openapi Schema using a New Spec Enhancer">​</a></h3><p>LoopBack users will be able to automatically extract schemas used in multiple places into <code>#/components/schemas</code> and replace the references with a <code>$ref</code>, with a <a href="https://github.com/strongloop/loopback-next/pull/4365" target="_blank" rel="noopener noreferrer">new OAS enhancer</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="may-milestones">May Milestones<a href="#may-milestones" class="hash-link" aria-label="Direct link to May Milestones" title="Direct link to May Milestones">​</a></h2><p>This month, we would like to work on the remaining items for the migration guide epic, documentation improvement and more. For more detials, take a look at our <a href="https://github.com/strongloop/loopback-next/issues/5301" target="_blank" rel="noopener noreferrer">May milestone list on GitHub</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>In 2020, we look forward to helping you and seeing you around! LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Deepak Rajamohan</name>
            <uri>https://github.com/deepakrkris</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Community Q&A Monthly Digest - April 2020]]></title>
        <id>https://loopback.io/blog/2020-april-slack-qa</id>
        <link href="https://loopback.io/blog/2020-april-slack-qa"/>
        <updated>2020-04-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>In the past, we've explored a few options on providing a forum for our users to help each other: <a href="https://groups.google.com/forum/#!forum/loopbackjs" target="_blank" rel="noopener noreferrer">Google group</a>, <a href="https://gitter.im/strongloop/loopback" target="_blank" rel="noopener noreferrer">Gitter</a> and GitHub. We are pleased to announce that the LoopBack Slack workspace, <a href="https://loopbackio.slack.com/" target="_blank" rel="noopener noreferrer">https://loopbackio.slack.com/</a>, is available for our users to join. Since Slack is quite commonly used, we thought it would be a good time for us to modernize our tooling for the LoopBack community helping out each other out. Also, the LoopBack core team uses Slack on a daily basis; it is helpful because it allows us to get notifications and communicate efficiently.</p><p>There have been lots of great questions and answers. We thought it would be helpful to curate some of the discussions here. Thanks again for submitting the questions and answers! </p><p><strong>Question: I am trying to find a working implementation for TimeStamp Mixin to have time stamp automatic fields in the database. In the older version of LoopBack, I was capable to create a BaseEntity and BaseRepository and to extend them but now it is not working anymore. If I extend in the same way the controllers are not working anymore. The current example in the docs is based on adding the mixin to the Controller which I like much less. Any suggestions? Thanks.</strong></p><p><strong>Answer:</strong> For specifying the creation timestamp, you can use the <code>default</code> property for the <code>@property</code> decorator in your model. Something like:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'date'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function-variable function" style="color:#d73a49">default</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Date</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  createDate</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can also use <a href="https://momentjs.com/" target="_blank" rel="noopener noreferrer">Moment.js</a> to format the timestamp. </p><p>Updating updatedAt field should be possible via 2 ways:</p><ol><li>Via controller
When a controller function is invoked, the current timestamp could be taken and then injected into the original request query before being passed into the repository function.
You can also write your own base class (without the <code>@model</code> decorator) and then extend it where necessary.</li><li>Via datasource
It is possible to add a new function to the datasource which can mutate the query object and then pass it on.</li></ol><hr><p><strong>Question: Kinda new to loopback, I want to learn more about decorators and how to custom loopback logic for more advanced usages, can you walk me through the process of creating custom decorators to create my own "hook" around a controller?</strong></p><p><strong>Answer:</strong> A great starting point would be the <a href="https://loopback.io/doc/en/lb4/Extending-LoopBack-4.html" target="_blank" rel="noopener noreferrer">Extending LoopBack 4</a> docs.</p><p>These concepts are the building blocks of LB4. They serve a specific purpose while following the OOP paradigm.
It may look like a lot, but these are essentially the different extension points in LoopBack 4 (hence why LB4 is extremely extensible).
Let's see if we can break it down:</p><p><strong>Decorators (in general)</strong>
The decorators in LB4 are no different to the standard decorators in TypeScript. They add metadata to classes, methods. properties, or parameters. They don't actually add any functionality, only metadata.
Think of it like the file properties on your file system: It's not visible when interacting with the file normally, but those who want to access those properties will be able to via a standard interface.
There's more benefits to Decorators, but the above explanation is the watered-down gist of it.</p><p><strong>Sequence (in general)</strong>
Sequences are a group of Actions. It simply indicates which actions should be used by the server to process the request.</p><p><strong>Sequence Actions (in general)</strong>
Sequence Actions (or simply "Actions") are stateless, meaning that they only have the basic concept Elements.
Converting into Express.js terminology; Think of an Action as an middleware. And think of an Element as the contents that a middleware receives. They work differently, but the high-level idea is about the same.
They are unaware of other higher-level concepts such as Controllers, DataSource, Models, etc.</p><p><strong>Components (in general)</strong>
When adding functionality to LB4, you'll usually need to add a combination of Providers, Booters, etc. This can tedious to manage. Hence, Components are registered once in the LB4 Application, which will then register the other stuff for you.
<strong>@authenticate</strong>
Adds authentication metadata.</p><p><strong>AuthenticationComponent</strong>
A component to register the necessary artifacts.</p><p><strong>AuthenticationActionProvider</strong>
This is a Sequence Action. Essentially, it adds an "authentication" step to the Sequence.</p><p><strong>AuthenticationStrategyProvider</strong>
This is a standard interface that the @loopback/authentiation package understands. Hence, any authentication strategy that adopts this interface can be used in @loopback/authentication. Think of it like the standard interface for Passport.js uses to interface with many different authentication strategies</p><hr><p><strong>Question: I have experience with other ActiveRecord implementations. If I was able to utilize TypeORM, this would be more straightforward. You mentioned TypeORM is coming soon as an option for LoopBack 4?</strong></p><p><strong>Answer:</strong> You can track progress of a proof of concept here: <a href="https://github.com/strongloop/loopback-next/pull/4794" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/pull/4794</a>
Loopback 4 has been designed to allow flexibility so you can for example use TypeORM if you prefer.</p><p><strong>Question: I am using mysql connector,  I have generated models using LB4 model, But when I migrate the models from loopback to database using <code>npm run migrate</code>. The foreign key constraints were missing in database. I have many.model.ts files. How to have foreign key in database with npm run migrate.</strong></p><p><strong>Answer:</strong> AFAIK, you’ll need to add some settings in the <code>@model</code> decorator on the FK configuration so that npm run migrate can pick up.
I’ve tried that for postgresql using <a href="https://github.com/dhmlau/loopback4-coffeeshop/blob/master/src/models/review.model.ts#L4-L15" target="_blank" rel="noopener noreferrer">this snippet</a>.  Hope it works for you for mysql as well.</p><p>There is an GitHub issue tracking the work to add constraints in db migration: <a href="https://github.com/strongloop/loopback-next/issues/2332" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/issues/2332</a>.</p><hr><p><strong>Question: Can anyone point me in the right direction on how to do loggig in LB4?</strong></p><p><strong>Answer:</strong> You have lots of options.  If you want to do it inside of the context of the loopback application, with IoC binding, you can create a singleton service provider that returns the log utility of your choice.  For example, with winston:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// services/logger.service.ts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> bind</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> BindingScope</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Provider </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/core'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> winston </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'winston'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> Transport </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'winston-transport'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> scope</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> BindingScope</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">SINGLETON</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">LogService</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">implements</span><span class="token plain"> </span><span class="token class-name">Provider</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">winston</span><span class="token class-name punctuation" style="color:#393A34">.</span><span class="token class-name">Logger</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  logger</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> winston</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Logger</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">value</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">logger</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> transports</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Transport</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      transports</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">winston</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">transports</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">File</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          handleExceptions</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          format</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">winston</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">format</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          filename</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/path/t'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">logger </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> winston</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">createLogger</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        transports</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        exitOnError</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">logger</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>application.ts</strong></p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// in constructor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'loggingKey'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toProvider</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Logger</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">inScope</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">BindingScope</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">SINGLETON</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>controller.ts (also applies for service.ts and others)</strong></p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">HelloWorldController</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/hello-world'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getHelloWorld</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'loggingKey'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> logger</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> winston</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Logger</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'logging to a file!'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Hello World'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>With binding and injection, you can do some pretty cool stuff, like this extension that gives you a <code>@log(LOG_LEVEL.INFO)</code> decorator that can be used to time a request:
<a href="https://github.com/strongloop/loopback-next/tree/master/examples/log-extension" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/tree/master/examples/log-extension</a></p><p>There's also the old school nodejs way of just importing a file that exports a log utility, all set up in the global scope. I believe most tutorials for utilities like winston start with that :)</p><hr><p><strong>Question: Are there any solution to see the errors of model in the response of the request?</strong></p><p><strong>Answer:</strong> See <a href="https://loopback.io/doc/en/lb4/Sequence.html#handling-errors" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/Sequence.html#handling-errors</a> for reference.</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="interested-to-join-our-slack-workspace">Interested to Join our Slack Workspace?<a href="#interested-to-join-our-slack-workspace" class="hash-link" aria-label="Direct link to Interested to Join our Slack Workspace?" title="Direct link to Interested to Join our Slack Workspace?">​</a></h2><p>Simply click <a href="https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw" target="_blank" rel="noopener noreferrer">this invitation link</a> to join. You can also find more channel details here: <a href="https://github.com/strongloop/loopback-next/issues/5048" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/issues/5048</a>.</p>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="Community" term="Community"/>
        <category label="Slack" term="Slack"/>
        <category label="Q&A" term="Q&A"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Build REST APIs for CRUD operations from a model without coding]]></title>
        <id>https://loopback.io/blog/model-to-rest-api-feature</id>
        <link href="https://loopback.io/blog/model-to-rest-api-feature"/>
        <updated>2020-04-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>As LoopBack 3 is expected to reach its EOL by the end of this year, we have been working hard to achieve feature parity between LoopBack 3 and LoopBack 4. One feature of LoopBack 3 that we did not have in LoopBack 4 yet was the ability to go directly from only a model definition and model configuration to fully-featured CRUD REST API. Unlike LoopBack 3, LoopBack 4 relied on intermediate repository and controller classes in order to go from a model defintion class to use REST API. One thing that LoopBack 4 strives to do is make common tasks as easy as possible, while allowing advanced composition with loosely-coupled artifacts. So, after completing tasks from the related <a href="https://github.com/strongloop/loopback-next/issues/2036" target="_blank" rel="noopener noreferrer">epic</a>, we are now proud to announce that LoopBack 4 now offers support for going from a model definition to REST API with no custom repository or controller classes. </p><p>In LoopBack 4, the <a href="https://loopback.io/doc/en/lb4/Model.html" target="_blank" rel="noopener noreferrer">model definition</a> provides the schema and the <a href="https://loopback.io/doc/en/lb4/DataSources.html" target="_blank" rel="noopener noreferrer">datasource</a> configures how to access the database. Starting with these two artifacts, the user can directly expose REST API by using the following CLI command:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">lb4 rest-crud</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>For example, if you have a model <code>Product</code> and datasource <code>db</code>, you can use the command as follows:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">lb4 rest-crud --model Product --datasource db</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The command can also take in multiple models at the same time. You can find more information on how to use the command in the <a href="https://loopback.io/doc/en/lb4/Rest-Crud-generator.html" target="_blank" rel="noopener noreferrer">REST CRUD generator documentation</a>.</p><p>What the command does is it creates a configuration file describing properties of the REST API:</p><p><code>/src/model-endpoints/product.rest-config.ts</code></p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ModelCrudRestApiConfig</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/rest-crud'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Product</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../models'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">module</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">exports </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">ModelCrudRestApiConfig</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    model</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Product</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// name of the model</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pattern</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'CrudRest'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// make sure to use this pattern</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dataSource</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'db'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// name of the datasource</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    basePath</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/products'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then it adds <code>CrudRestComponent</code> from <code>@loopback/rest-crud</code> to the application:</p><p><code>src/application.ts</code></p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">CrudRestComponent</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/rest-crud'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">component</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CrudRestComponent</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Documentation for this feature can be found in <a href="https://loopback.io/doc/en/lb4/Creating-crud-rest-apis.html" target="_blank" rel="noopener noreferrer">Creating CRUD REST APIs from a model</a>. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="implementation">Implementation<a href="#implementation" class="hash-link" aria-label="Direct link to Implementation" title="Direct link to Implementation">​</a></h2><p>We implemented <a href="https://github.com/strongloop/loopback-next/tree/master/packages/rest-crud" target="_blank" rel="noopener noreferrer"><code>@loopback/rest-crud</code></a> based on the <a href="https://github.com/strongloop/loopback-next/tree/master/packages/model-api-builder" target="_blank" rel="noopener noreferrer"><code>@loopback/model-api-builder</code></a> package. This model API builder is what builds CRUD REST API from the model definition and datasource.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="example-application">Example Application<a href="#example-application" class="hash-link" aria-label="Direct link to Example Application" title="Direct link to Example Application">​</a></h2><p>To demonstrate this functionality with an example, we added a new example based on the <a href="https://github.com/strongloop/loopback-next/tree/master/examples/todo" target="_blank" rel="noopener noreferrer"><code>Todo</code> example</a>. <a href="https://github.com/strongloop/loopback-next/tree/master/examples/rest-crud" target="_blank" rel="noopener noreferrer"><code>@loopback/example-rest-crud</code></a> mimics the behavior of the <code>Todo</code> example, but does not include any custom repository or controller classes like the <code>Todo</code> example. To download this example, use the following command:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">lb4 example rest-crud</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="future-work">Future Work<a href="#future-work" class="hash-link" aria-label="Direct link to Future Work" title="Direct link to Future Work">​</a></h2><p>While the main epic is now complete, there are additional out of scope tasks that are part of future work. If you would like to contribute, please see the following issues:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues/2483" target="_blank" rel="noopener noreferrer">From relation definition to REST API with auto-generated repository/controller classes</a></li><li><a href="https://github.com/strongloop/loopback-next/issues/2737" target="_blank" rel="noopener noreferrer">KeyValueRestController extension</a></li><li><a href="https://github.com/strongloop/loopback-next/issues/2482" target="_blank" rel="noopener noreferrer">Expose custom remote methods</a></li></ul><p>The LoopBack team appreciates all your contributions!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>In 2020, we look forward to helping you and seeing you around! LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Nora Abdelgadir</name>
            <uri>https://github.com/nabdelgadir</uri>
        </author>
        <category label="feature" term="feature"/>
        <category label="REST" term="REST"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 2020 Q1 Overview]]></title>
        <id>https://loopback.io/blog/loopback-4-2020-q1-overview</id>
        <link href="https://loopback.io/blog/loopback-4-2020-q1-overview"/>
        <updated>2020-04-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>The past few weeks have been challenging for many of us. While this pandemic situation affected our lives in different ways, we hope you all stay safe.</p><p>In Q1, we continued to make good progress in the following areas:</p><ul><li><a href="#migration-guide">Migration guide</a></li><li><a href="#migration-tooling-and-examples">Migration Tooling and Examples</a></li><li><a href="#from-model-definitions-to-rest-apis">From Model Definitions to REST APIs</a></li><li><a href="#newly-added-examples">Newly added examples</a></li><li><a href="#newly-added-extensions">Newly added extensions</a></li><li><a href="#enhancements-in-loopback-core-and-openapi-areas">Enhancements in LoopBack core and OpenAPI areas</a></li><li><a href="#rework-of-shopping-example">Rework of shopping example</a></li><li><a href="#refreshed-look-for-loopback-documentation">Refreshed look for LoopBack documentation</a></li></ul><p>Let's take a closer look.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="migration-guide">Migration Guide<a href="#migration-guide" class="hash-link" aria-label="Direct link to Migration Guide" title="Direct link to Migration Guide">​</a></h2><p>Building the migration guide is one of the key focuses for us this year. We made good progress in completing the migration guide. Please check out our <a href="https://loopback.io/doc/en/lb4/migration-overview.html" target="_blank" rel="noopener noreferrer">migration guide</a>. LoopBack 3 is currently in maintenance LTS. Read <a href="https://strongloop.com/strongblog/lb3-entered-maintenance-mode/" target="_blank" rel="noopener noreferrer">this blog</a> to find out what it means and how it affects you.</p><p>In LB3, it was possible to use mixins to enhance a model with a new property, a custom method, or a custom remote method. In LB4, this can be accomplished by using a mixin class factory function against model, repository, or controller classes.
We added a <a href="https://loopback.io/doc/en/lb4/migration-models-mixins.html" target="_blank" rel="noopener noreferrer">Migrating model mixins</a> page to demonstrate how to accomplish this.</p><p>In LB3, Operation hooks are useful tools that are triggered by all methods that execute a particular high-level CRUD operation. However, LB4 hasn't supported this feature yet. To help LB3 users to continue using the feature, we provide a workaround and explain how they can migrate LB3 operation hooks to LB4 repositories in page <a href="https://loopback.io/doc/en/lb4/migration-models-operation-hooks.html" target="_blank" rel="noopener noreferrer">Migrating operation hooks</a>.</p><p>LB3 has the built-in User/AccessToken model based authentication. In LB4, we provide a more flexible authentication system. We explain how LB3 users can migrate it to LB4 with handy LB4 CLI tools. The content can be found in page <a href="https://loopback.io/doc/en/lb4/migration-authentication.html" target="_blank" rel="noopener noreferrer">Migrating built-in authentication</a>.</p><p>In addition, we added the <a href="https://loopback.io/doc/en/lb4/migration-not-planned.html" target="_blank" rel="noopener noreferrer">LB3 features not in-plan documentation page</a> to clarify which LB3 features are not supported in LB4 or the workarounds for those features if users would like to continue using them in LB4. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="migration-tooling-and-examples">Migration Tooling and Examples<a href="#migration-tooling-and-examples" class="hash-link" aria-label="Direct link to Migration Tooling and Examples" title="Direct link to Migration Tooling and Examples">​</a></h2><p>Besides documentation, we migrated the <a href="https://github.com/strongloop/loopback-next/tree/master/examples/access-control-migration" target="_blank" rel="noopener noreferrer">LoopBack 3 access control example to LoopBack 4</a>. In the <a href="https://github.com/strongloop/loopback-next/tree/master/examples/lb3-application" target="_blank" rel="noopener noreferrer">lb3-application example</a>, we added instructions on how to move the middleware from the LoopBack 3 application to a common location where both the LB3 and LB4 applications can use it.</p><p>For tooling that helps your migration process easier, the <code>lb4 import-lb3-models</code> command now supports migrating models inheriting from all other models, including LoopBack 3 built-in models.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="from-model-definitions-to-rest-apis">From Model Definitions to REST APIs<a href="#from-model-definitions-to-rest-apis" class="hash-link" aria-label="Direct link to From Model Definitions to REST APIs" title="Direct link to From Model Definitions to REST APIs">​</a></h2><p>One of the frequent inputs we got from users is that they would like to see fewer steps from creating the models to having runnable endpoints. We now have the <a href="https://github.com/strongloop/loopback-next/tree/master/packages/rest-crud" target="_blank" rel="noopener noreferrer"><code>rest-crud</code></a> package, the app booter, and the CLI command. You can see how to create a simple LoopBack 4 app with the <a href="https://loopback.io/doc/en/lb4/Rest-Crud-generator.html" target="_blank" rel="noopener noreferrer"><code>lb4 rest-crud</code> CLI command</a>.</p><p>To glue these pieces together and helper users to understand the feature, we added a page <a href="https://loopback.io/doc/en/lb4/Creating-crud-rest-apis.html" target="_blank" rel="noopener noreferrer">Creating CRUD REST APIs</a>. You can also run this <a href="https://github.com/strongloop/loopback-next/tree/master/examples/rest-crud" target="_blank" rel="noopener noreferrer">CRUD REST example</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="integrate-with-ibm-api-connect">Integrate with IBM API Connect<a href="#integrate-with-ibm-api-connect" class="hash-link" aria-label="Direct link to Integrate with IBM API Connect" title="Direct link to Integrate with IBM API Connect">​</a></h2><p>Earlier, we identified the work items required for the integration with <a href="https://www.ibm.com/cloud/api-connect" target="_blank" rel="noopener noreferrer">IBM API Connect</a>. When importing an OpenAPI spec generated by a LoopBack 4 application, there is additional metadata needs to be added. Instead of having our users to modify the OpenAPI spec manually, we introduced an <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/apiconnect" target="_blank" rel="noopener noreferrer">API Connect OpenAPI enhancer</a> to inject the <code>x-ibm-configuration</code> and other required attributes in the OpenAPI spec. </p><p>Additionally, we extracted and translated the messages for our CLI tooling.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="newly-added-examples">Newly Added Examples<a href="#newly-added-examples" class="hash-link" aria-label="Direct link to Newly Added Examples" title="Direct link to Newly Added Examples">​</a></h2><p>We continue to add examples which demonstrate commonly used scenarios. With the growing number of examples, we also categorized the <a href="https://loopback.io/doc/en/lb4/Examples.html" target="_blank" rel="noopener noreferrer">Example list</a>. Here are the newly added examples:</p><ul><li><p><a href="https://github.com/strongloop/loopback-next/blob/master/examples/access-control-migration" target="_blank" rel="noopener noreferrer">access control migration example</a> to show how to migrate a LoopBack 3 application with access control to LoopBack 4.</p></li><li><p><a href="https://github.com/strongloop/loopback-next/tree/master/examples/file-transfer" target="_blank" rel="noopener noreferrer">file transfer example</a> for exposing APIs to upload and download files using Express Multer.</p></li><li><p><a href="https://github.com/strongloop/loopback-next/tree/master/examples/validation-app" target="_blank" rel="noopener noreferrer">validation example</a> for adding different kinds of validations in a LoopBack 4 application.</p></li><li><p><a href="https://github.com/strongloop/loopback-next/tree/master/examples/rest-crud" target="_blank" rel="noopener noreferrer">rest-crud example</a> for using <code>CrudRestComponent</code> to define repository and controller classes for a model without creating those classes</p></li></ul><p>If there's any example you'd like to see, feel free to open an issue in the <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">loopback-next repo</a>. Better yet, submit a PR and contribute! </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="newly-added-extensions">Newly Added Extensions<a href="#newly-added-extensions" class="hash-link" aria-label="Direct link to Newly Added Extensions" title="Direct link to Newly Added Extensions">​</a></h2><p>LoopBack 4 is designed to be extensible. We added three extensions in this quarter for various usages: </p><ul><li><p><a href="https://github.com/strongloop/loopback-next/blob/master/extensions/logging" target="_blank" rel="noopener noreferrer">@loopback/extension-logging</a> provides logging facilities based on Winston and Fluentd.</p></li><li><p><a href="https://github.com/strongloop/loopback-next/tree/master/extensions/apiconnect" target="_blank" rel="noopener noreferrer">@loopback/apiconnect</a> is the IBM API Connect OpenAPI enhancer  extension extends LoopBack with the ability to integrate with <a href="https://www.ibm.com/cloud/api-connect" target="_blank" rel="noopener noreferrer">IBM API Connect</a>. </p></li><li><p><a href="https://github.com/strongloop/loopback-next/tree/master/extensions/cron" target="_blank" rel="noopener noreferrer">@loopback/cron</a> provides integration with <a href="https://github.com/kelektiv/node-cron" target="_blank" rel="noopener noreferrer">Cron</a> so that applications can schedule jobs using <code>cron</code> based schedule.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ibm-db2-for-i-connector">IBM Db2 for i Connector<a href="#ibm-db2-for-i-connector" class="hash-link" aria-label="Direct link to IBM Db2 for i Connector" title="Direct link to IBM Db2 for i Connector">​</a></h2><p>The <a href="https://github.com/strongloop/loopback-connector-ibmi" target="_blank" rel="noopener noreferrer">IBM Db2 for i connector</a> was added to the connector list. You can now conveniently create a IBM Db2 for i datasource using our CLI. If you are starting a new project that connects to IBM Db2 for i, we recommend you to use this connector instead of <code>loopback-connector-db2iseries</code> connector.  You can find more details in the <a href="https://loopback.io/doc/en/lb4/DB2-for-i-connector.html" target="_blank" rel="noopener noreferrer">Db2 for i connector page</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="enhancements-in-loopback-core-and-openapi-areas">Enhancements in LoopBack core and OpenAPI areas<a href="#enhancements-in-loopback-core-and-openapi-areas" class="hash-link" aria-label="Direct link to Enhancements in LoopBack core and OpenAPI areas" title="Direct link to Enhancements in LoopBack core and OpenAPI areas">​</a></h2><p>In this quarter, thanks to our community contributors, we had a number of important enhancements in the OpenAPI area. An <code>OASEnhancerService</code> was introduced which allows other enhancers to register and contribute OpenAPI specs into the application. This also provides the base for the <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/apiconnect" target="_blank" rel="noopener noreferrer">API Connect OpenAPI enhancer</a> mentioned above. On top of that, a few OpenAPI convenience decorators were added, for example, the <code>@deprecated()</code> decorator and the <code>@tags(tagNames: string [])</code> decorator for a class and method.</p><p>For the core of the framework, we have added the support hot-loading of controllers during application startup. Besides, the context and binding inspection APIs were improved with more options and information to print out their injections. More details can be found in the <a href="https://strongloop.com/strongblog/february-2020-milestone/" target="_blank" rel="noopener noreferrer">February milestone blog</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="rework-of-shopping-example">Rework of Shopping Example<a href="#rework-of-shopping-example" class="hash-link" aria-label="Direct link to Rework of Shopping Example" title="Direct link to Rework of Shopping Example">​</a></h2><p>The most noticeable changes for <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer">our shopping example</a> is the newly added frontend. There was some rework on the authentication and authorization side to make the app working from end to end.</p><p><img loading="lazy" src="https://raw.githubusercontent.com/strongloop/loopback4-example-shopping/master/shoppy.png" alt="Shopping example web site" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="refreshed-look-for-loopback-web-site">Refreshed Look for LoopBack Web Site<a href="#refreshed-look-for-loopback-web-site" class="hash-link" aria-label="Direct link to Refreshed Look for LoopBack Web Site" title="Direct link to Refreshed Look for LoopBack Web Site">​</a></h2><p>Last but not least, if you haven't noticed already, <a href="https://loopback.io/doc/en/lb4/" target="_blank" rel="noopener noreferrer">our documentation site</a> has a refreshed look. Don't forget to check it out!</p><p><img loading="lazy" alt="LoopBack documentation site" src="/blog/assets/images/new-docs-site-d900be09d06e488451fdf4935fffcd2c.png" width="2402" height="1300" class="img_ev3q"></p><p>With increasing number of user testimonials, we created a <a href="https://loopback.io/what-our-users-say.html" target="_blank" rel="noopener noreferrer">separate page</a> for it. <a href="https://github.com/strongloop/loopback-next/issues/3047" target="_blank" rel="noopener noreferrer">Let us know</a> if you would like to tell us about your LoopBack usage!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="previous-milestone-blogs">Previous Milestone Blogs<a href="#previous-milestone-blogs" class="hash-link" aria-label="Direct link to Previous Milestone Blogs" title="Direct link to Previous Milestone Blogs">​</a></h2><p>There are many more accomplishments that cannot be captured in this blog, make sure you check out our previously published monthly milestone blog posts in Q1 for more details:</p><ul><li><a href="https://strongloop.com/strongblog/january-2020-milestone/" target="_blank" rel="noopener noreferrer">Janurary 2020</a></li><li><a href="https://strongloop.com/strongblog/february-2020-milestone/" target="_blank" rel="noopener noreferrer">February 2020</a></li><li><a href="https://strongloop.com/strongblog/march-2020-milestone/" target="_blank" rel="noopener noreferrer">March 2020</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>We have published a blog <a href="https://strongloop.com/strongblog/2020-goals/" target="_blank" rel="noopener noreferrer">LoopBack - 2020 Goals and Focus</a> about our plans this year. Here is a summary of the <a href="https://github.com/strongloop/loopback-next/blob/master/docs/ROADMAP.md#q2-2020-roadmap" target="_blank" rel="noopener noreferrer">Q2 2020 roadmap</a>: </p><ul><li>finish migration guide for both general runtime and authentication &amp; authorization</li><li>continue with API Connect and LoopBack integration</li><li>look into feature parity gaps that are highly requested by users</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>In 2020, we look forward to helping you and seeing you around! LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="Quarterly update" term="Quarterly update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 March 2020 Milestone Update]]></title>
        <id>https://loopback.io/blog/march-2020-milestone</id>
        <link href="https://loopback.io/blog/march-2020-milestone"/>
        <updated>2020-04-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>The whole world has been through a lot in the past month. The LoopBack team hopes that everyone stays safe and gets through this together.</p><p>Let's check out the work we did in March:</p><ul><li><a href="#migration-guide">Migration Guide</a></li><li><a href="#from-model-to-rest-api">From Model to REST API</a></li><li><a href="#more-usage-scenarios">More Usage Scenarios</a></li><li><a href="#miscellaneous">Miscellaneous</a></li><li><a href="#documentation-enhancement">Documentation Enhancement</a></li><li><a href="#community-contribution">Community Contribution</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="migration-guide">Migration Guide<a href="#migration-guide" class="hash-link" aria-label="Direct link to Migration Guide" title="Direct link to Migration Guide">​</a></h2><p>As LoopBack 3 will go end of life at the end of 2020, we've been focusing on the migration guide for the past months. Here is the content we added in March to help LB3 users adopt LoopBack 4:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-built-in-authentication">Migrating Built-in Authentication<a href="#migrating-built-in-authentication" class="hash-link" aria-label="Direct link to Migrating Built-in Authentication" title="Direct link to Migrating Built-in Authentication">​</a></h3><p>In LoopBack 3, the authentication system is a token-based one and has built-in models involved in the mechanism. In LB4, we built a more flexible authentication system that is compatible with different authentication strategies. Even though there are lots of differences, the newly created <a href="https://github.com/strongloop/loopback-next/tree/master/examples/access-control-migration" target="_blank" rel="noopener noreferrer">access control migration example</a> explores how to migrate and build an equivalent LoopBack 3 authentication system in LoopBack 4 with detailed steps. The tutorial includes two main parts: </p><ol><li>How to migrate the LoopBack 3 User model's definition and its persistence and login endpoint.</li><li>How to secure endpoints using a token based authentication system and enable the authorize dialog in the API explorer like what we have in LoopBack 3.</li></ol><p>The tutorial also uses the handy LB4 CLI to help LB3 users to get familiar with LB4 terms. Read the <a href="https://loopback.io/doc/en/lb4/migration-authentication.html" target="_blank" rel="noopener noreferrer">migration-authentication</a> tutorial to learn about the details.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="features-not-planned-for-loopback-4">Features Not Planned for LoopBack 4<a href="#features-not-planned-for-loopback-4" class="hash-link" aria-label="Direct link to Features Not Planned for LoopBack 4" title="Direct link to Features Not Planned for LoopBack 4">​</a></h3><p>Besides migrating artifacts from LB3, there are several features/components we no longer support anymore in LB4. They are listed in the page <a href="https://loopback.io/doc/en/lb4/migration-not-planned.html" target="_blank" rel="noopener noreferrer">LoopBack 3 features not planned in LoopBack 4</a>. We also provide workarounds for these features if users would like to continue using them in LB4. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="from-model-to-rest-api">From Model to REST API<a href="#from-model-to-rest-api" class="hash-link" aria-label="Direct link to From Model to REST API" title="Direct link to From Model to REST API">​</a></h2><p>The story <a href="https://github.com/strongloop/loopback-next/issues/2036" target="_blank" rel="noopener noreferrer">From Model to REST API with no custom repository/controller epic</a> is almost done! In the past few months, we created the <a href="https://github.com/strongloop/loopback-next/tree/master/packages/rest-crud" target="_blank" rel="noopener noreferrer"><code>@loopback/rest-crud</code></a> package, as well as the the <code>ModelApiBooter</code> booter. And this month, we built the CLI command <code>lb4 rest-crud</code>. To glue these pieces together, we added an example and documentation to help you pick up this convenience tool. Details are listed below. We will have a blog post in the near future.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="cli-command">CLI Command<a href="#cli-command" class="hash-link" aria-label="Direct link to CLI Command" title="Direct link to CLI Command">​</a></h3><p>In order to make it easier for users to use this feature, we've added a CLI command to simplify the process. If you have model classes and a valid(<em>persisted</em>) datasource, the following command will generate model endpoints for you:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">lb4 rest-crud</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="example-application">Example Application<a href="#example-application" class="hash-link" aria-label="Direct link to Example Application" title="Direct link to Example Application">​</a></h3><p>We've added a new <a href="https://github.com/strongloop/loopback-next/tree/master/examples/rest-crud" target="_blank" rel="noopener noreferrer"><code>rest-crud</code> example</a> which creates the <a href="https://github.com/strongloop/loopback-next/tree/master/examples/todo" target="_blank" rel="noopener noreferrer"><code>Todo</code> example</a> without the need to define a repository or controller for the Todo model. By loading the <code>CrudRestComponent</code>, it demonstrates how to use the default CRUD REST repository and controller with a single model class , datasource, and configuration. The example can be downloaded by running:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">lb4 example rest-crud</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can find more information on how to use the command in the <a href="https://loopback.io/doc/en/lb4/Rest-Crud-generator.html" target="_blank" rel="noopener noreferrer">REST CRUD generator documentation</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="documentation">Documentation<a href="#documentation" class="hash-link" aria-label="Direct link to Documentation" title="Direct link to Documentation">​</a></h3><p>Now that most of the epic is completed, we've added <a href="https://loopback.io/doc/en/lb4/Creating-crud-rest-apis.html" target="_blank" rel="noopener noreferrer">documentation</a> explaining how to use the feature and the configuration options that come with it. Additionally, we also added <a href="https://loopback.io/doc/en/lb4/Extending-Model-API-builder.html" target="_blank" rel="noopener noreferrer">documentation</a> on extending the <a href="https://github.com/strongloop/loopback-next/tree/master/packages/model-api-builder" target="_blank" rel="noopener noreferrer"><code>@loopback/model-api-builder</code></a> package to create your own custom model API builders; similar to <a href="https://github.com/strongloop/loopback-next/tree/master/packages/rest-crud" target="_blank" rel="noopener noreferrer"><code>@loopback/rest-crud</code></a>'s <a href="https://loopback.io/doc/en/lb4/apidocs.rest-crud.crudrestapibuilder.html" target="_blank" rel="noopener noreferrer"><code>CrudRestApiBuilder</code></a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="more-usage-scenarios">More Usage Scenarios<a href="#more-usage-scenarios" class="hash-link" aria-label="Direct link to More Usage Scenarios" title="Direct link to More Usage Scenarios">​</a></h2><p>We've been adding more examples to show what you can build with, and how you can configure a LoopBack 4 app. One of our favorite examples is the <a href="https://github.com/strongloop/loopback4-example-shopping/" target="_blank" rel="noopener noreferrer">Shopping App</a>. It shows how you can integrate LB4 APIs with a simple front-end design to build a site. Besides the <a href="#example-application"><code>rest-crud</code></a> example mentioned above, we added more examples to show various LoopBack 4 features.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="validation-example">Validation Example<a href="#validation-example" class="hash-link" aria-label="Direct link to Validation Example" title="Direct link to Validation Example">​</a></h3><p>LB4 allows you to add validations at three different layers: REST, controller, and ORM. The newly added documentation <a href="#Validation.md">Validation</a> explains these three different types of validations. We added a corresponding example <a href="https://github.com/strongloop/loopback-next/tree/master/examples/validation-app" target="_blank" rel="noopener noreferrer">Validation Example</a> to our <a href="https://loopback.io/doc/en/lb4/Examples.html" target="_blank" rel="noopener noreferrer">Examples list</a> demonstrating how to add and make use of different kinds of validations in a LoopBack 4 application.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="file-upload-and-download-example">File Upload and Download Example<a href="#file-upload-and-download-example" class="hash-link" aria-label="Direct link to File Upload and Download Example" title="Direct link to File Upload and Download Example">​</a></h3><p>Uploading/downloading files is a common requirement for API applications. The documentation for <a href="https://loopback.io/doc/en/lb4/File-upload-download.html" target="_blank" rel="noopener noreferrer">Upload and download files</a> shows the code snippets to create artifacts such as controllers and UI to achieve such a requirement. A fully-functional example is available at <a href="https://github.com/strongloop/loopback-next/tree/master/examples/file-transfer" target="_blank" rel="noopener noreferrer">File Transfer Example</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation-enhancement">Documentation Enhancement<a href="#documentation-enhancement" class="hash-link" aria-label="Direct link to Documentation Enhancement" title="Direct link to Documentation Enhancement">​</a></h2><p>We made some changes in the layout design of the website. Hope you like the new look!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="request-response-cycle">Request Response Cycle<a href="#request-response-cycle" class="hash-link" aria-label="Direct link to Request Response Cycle" title="Direct link to Request Response Cycle">​</a></h3><p>To help users have a better understanding of all the components involved in the request-response handling process, in the  <a href="https://loopback.io/doc/en/lb4/Request-response-cycle.html" target="_blank" rel="noopener noreferrer">Request-Response cycle</a> document, we walk through the path taken by a request to see how it makes its way through the various parts of the framework to return a result. In the near future, we will also add documentation in the migration guide to explain the differences of the request-response cycle between LB3 and LB4. See the GH story <a href="https://github.com/strongloop/loopback-next/issues/4836" target="_blank" rel="noopener noreferrer">Migration Guide: Request-response cycle</a> for more details.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="changelog-docs">CHANGELOG Docs<a href="#changelog-docs" class="hash-link" aria-label="Direct link to CHANGELOG Docs" title="Direct link to CHANGELOG Docs">​</a></h3><p>We made the CHANGELOG easier to find on our site. It is available in the section <a href="https://loopback.io/doc/en/lb4/changelog.index.html" target="_blank" rel="noopener noreferrer">CHANGELOG</a>. We hope it helps developers to check out the changes of different packages for each release.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="miscellaneous">Miscellaneous<a href="#miscellaneous" class="hash-link" aria-label="Direct link to Miscellaneous" title="Direct link to Miscellaneous">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="user-testimonials">User Testimonials<a href="#user-testimonials" class="hash-link" aria-label="Direct link to User Testimonials" title="Direct link to User Testimonials">​</a></h3><p>We're glad to see a growing number of user testimonials. We refactored it in a new page. Check out the <a href="https://loopback.io/what-our-users-say.html" target="_blank" rel="noopener noreferrer">what our users say</a> section. <a href="https://github.com/strongloop/loopback-next/issues/3047" target="_blank" rel="noopener noreferrer">Let us know</a> if you would like to tell us about your LoopBack usage!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ibm-i-connector">IBM i Connector<a href="#ibm-i-connector" class="hash-link" aria-label="Direct link to IBM i Connector" title="Direct link to IBM i Connector">​</a></h3><p>The <a href="https://github.com/strongloop/loopback-connector-ibmi" target="_blank" rel="noopener noreferrer">IBM Db2 for i connector</a> was added to the connector list. You can now conveniently create an IBM Db2 for i datasource using our CLI. See the <a href="https://loopback.io/doc/en/lb4/DB2-for-i-connector.html" target="_blank" rel="noopener noreferrer">Db2 for i connector page</a> for more details.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="newly-added-extensions">Newly Added Extensions<a href="#newly-added-extensions" class="hash-link" aria-label="Direct link to Newly Added Extensions" title="Direct link to Newly Added Extensions">​</a></h3><p>Here are the extensions we added to the framework:</p><p>The IBM API Connect OpenAPI enhancer <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/apiconnect" target="_blank" rel="noopener noreferrer">@loopback/apiconnect</a> extension was added to extend LoopBack with the ability to integrate with <a href="https://www.ibm.com/cloud/api-connect" target="_blank" rel="noopener noreferrer">IBM API Connect</a>.</p><p>An experimental extension <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/cron" target="_blank" rel="noopener noreferrer"><code>@loopback/cron</code></a> was added. With it, LB4 apps can be integrated with <a href="https://github.com/kelektiv/node-cron" target="_blank" rel="noopener noreferrer">Cron</a> to schedule jobs using <code>cron</code> based schedules.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="extracting-jwt-component">Extracting JWT Component<a href="#extracting-jwt-component" class="hash-link" aria-label="Direct link to Extracting JWT Component" title="Direct link to Extracting JWT Component">​</a></h3><p>After creating the demo for JWT authentication in <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer">loopback4-example-shopping</a> and applying a similar system in <a href="https://github.com/strongloop/loopback-next/tree/master/examples/access-control-migration" target="_blank" rel="noopener noreferrer">loopback-example-access-control</a>, we think it's time to extract the JWT authentication system into a separate component. This will benefit users who want to quickly mount a prototype token based authentication module to their application. As the first step, we extracted the JWT strategies, the token, and user services into a local module under <a href="https://github.com/strongloop/loopback-next/tree/master/examples/access-control-migration/src/components/jwt-authentication" target="_blank" rel="noopener noreferrer">components/jwt-authentication</a>. Next we will move it to a standalone extension package. Feel free to join the discussion in GH story <a href="https://github.com/strongloop/loopback-next/issues/4903" target="_blank" rel="noopener noreferrer">Extract the jwt authentication to an extension module</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="supporting-type-any">Supporting Type Any<a href="#supporting-type-any" class="hash-link" aria-label="Direct link to Supporting Type Any" title="Direct link to Supporting Type Any">​</a></h3><p>Model property of type <code>any</code> is now supported. The corresponding OpenAPI and JSON schema is <code>{}</code> or <code>true</code> (according to <a href="https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.4.3.2" target="_blank" rel="noopener noreferrer">the draft JSON schema standard</a>). If your model property allows arbitrary values, now you can define it as:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyModel</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Entity</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...other code</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// specify the type name here as 'any'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'any'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// use `any` as its TypeScript type</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// eslint-disable-next-line @typescript-eslint/no-explicit-any</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  anyProperty</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">any</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="bug-fixes">Bug fixes<a href="#bug-fixes" class="hash-link" aria-label="Direct link to Bug fixes" title="Direct link to Bug fixes">​</a></h3><ul><li><p>We fixed a bug in module <code>@loopback-ibmdb</code> where a put request <code>PUT /Model/{instanceId}</code> now operates correctly. The fix trickles down into any LoopBack connector with a dependency on <code>@loopback-ibmdb</code> like <code>@loopback-connector-db2</code> and <code>@loopback-connector-dashdb</code>, for example.</p></li><li><p>We fixed a bug in connector <code>@loopback-connector-mssql</code> which was causing permission problems during installation on Windows. Some extra folders ended up in the package tgz file, and this was causing the problem. The fix went out for several LoopBack connectors: MSSQL, DB2, dashDB, Cloudant, MongoDb, MySQL, Oracle, PostgreSQL, and Redis KeyValue. </p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="community-contribution">Community Contribution<a href="#community-contribution" class="hash-link" aria-label="Direct link to Community Contribution" title="Direct link to Community Contribution">​</a></h2><p>Our community maintainers and users have been very helpful with building a better LoopBack 4, we really appreciate all the help! Here are the highlights this month:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="enable-authentication-strategies-to-contribute-oasenhancer">Enable Authentication Strategies to Contribute OASEnhancer<a href="#enable-authentication-strategies-to-contribute-oasenhancer" class="hash-link" aria-label="Direct link to Enable Authentication Strategies to Contribute OASEnhancer" title="Direct link to Enable Authentication Strategies to Contribute OASEnhancer">​</a></h3><p>The community maintainer <a href="https://github.com/dougal83" target="_blank" rel="noopener noreferrer"><code>dougal83</code></a> improved the authentication strategies <code>AuthenticationStrategy</code> so that it can be bound with the OAS enhancer extension point via a binding key instead of a constant.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="japanese-translation-for-lb4">Japanese Translation for LB4<a href="#japanese-translation-for-lb4" class="hash-link" aria-label="Direct link to Japanese Translation for LB4" title="Direct link to Japanese Translation for LB4">​</a></h3><p>The community user <a href="https://github.com/saotak" target="_blank" rel="noopener noreferrer"><code>saotak</code></a> added several LB4 pages in Japanese. See <a href="https://loopback.io/doc/ja/lb4/index.html" target="_blank" rel="noopener noreferrer">the site</a>. We need your help to have more translations for the LB4 documentations! The instructions can be found in the page <a href="https://loopback.io/doc/en/contrib/translation.html" target="_blank" rel="noopener noreferrer">Translation</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>In 2020, we look forward to helping you and seeing you around! LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Agnes Lin</name>
            <uri>https://github.com/agnes512</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 February 2020 Milestone Update]]></title>
        <id>https://loopback.io/blog/february-2020-milestone</id>
        <link href="https://loopback.io/blog/february-2020-milestone"/>
        <updated>2020-03-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>The February in a leap year is quite special and we hope everyone has some memorable stories from that extra day! In the past month, LoopBack team continued to focus on the migration guide epic. In the meantime, we were able to contribute significant PRs across all the functional areas. We are really glad to see the increasing engagement from community members, we appreciate all your code reviews and contributions. Last but not least, we published new major releases for <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer"><code>@loopback/*</code></a> modules as as we dropped Node.js 8 support and introduced a few other breaking changes.</p><p>Keep reading to learn about what happened in February!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="migration-guide">Migration Guide<a href="#migration-guide" class="hash-link" aria-label="Direct link to Migration Guide" title="Direct link to Migration Guide">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-operation-hooks">Migrating Operation Hooks<a href="#migrating-operation-hooks" class="hash-link" aria-label="Direct link to Migrating Operation Hooks" title="Direct link to Migrating Operation Hooks">​</a></h3><p>While we work on a <a href="https://github.com/strongloop/loopback-next/issues/1919" target="_blank" rel="noopener noreferrer">spike for supporting operation hooks for models/repositories</a>, we are providing a temporary API for enabling operation hooks in LoopBack 4. It requires overriding the <code>DefaultCrudRepository</code>'s <code>definePersistedModel</code> method in the model's repository.</p><p>Here is an example of adding a <code>before save</code> operation hook to the <code>Product</code> model.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">ProductRepository</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">DefaultCrudRepository</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">  Product</span><span class="token class-name punctuation" style="color:#393A34">,</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">  </span><span class="token class-name keyword" style="color:#00009f">typeof</span><span class="token class-name"> Product</span><span class="token class-name punctuation" style="color:#393A34">.</span><span class="token class-name">prototype</span><span class="token class-name punctuation" style="color:#393A34">.</span><span class="token class-name">id</span><span class="token class-name punctuation" style="color:#393A34">,</span><span class="token class-name"></span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name">  ProductRelations</span><br></span><span class="token-line" style="color:#393A34"><span class="token class-name"></span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dataSource</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> juggler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DataSource</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Product</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dataSource</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">definePersistedModel</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">entityClass</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">typeof</span><span class="token plain"> Product</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> modelClass </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">definePersistedModel</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">entityClass</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    modelClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">observe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'before save'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> ctx </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">going to save </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">ctx</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">Model</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">modelName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> modelClass</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>For more details visit <a href="https://loopback.io/doc/en/lb4/migration-models-operation-hooks.html" target="_blank" rel="noopener noreferrer">Migrating CRUD operation hooks</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-loopback-3-models-with-a-custom-base-class">Migrating LoopBack 3 Models with a Custom Base Class<a href="#migrating-loopback-3-models-with-a-custom-base-class" class="hash-link" aria-label="Direct link to Migrating LoopBack 3 Models with a Custom Base Class" title="Direct link to Migrating LoopBack 3 Models with a Custom Base Class">​</a></h3><p>The initial implementation of <code>lb4 import-lb3-models</code> was able to import only models inheriting from models that have a built-in counter-part in LoopBack 4: <code>Model</code>, <code>PersistedModel</code>, <code>KeyValueModel</code>. Now it also supports migrating models inheriting from all other models, including LoopBack 3 built-in models like <code>User</code>, or an application-specific model. The chain of base (parent) models will also be created in the LoopBack 4 application. For example, model <code>Customer</code> extends model <code>UserBase</code> which extends model <code>User</code>, and if you run <code>lb4 import-lb3-models</code>, you will see the following prompts:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ lb4 import-lb3-models ~/src/loopback/next/packages/cli/test/fixtures/import-lb3-models/app-using-model-inheritance.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WARNING: This command is experimental and not feature-complete yet.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Learn more at https://loopback.io/doc/en/lb4/Importing-LB3-models.html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Select models to import: Customer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Model Customer will be created in src/models/customer.model.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Adding UserBase (base of Customer) to the list of imported models.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Model UserBase will be created in src/models/user-base.model.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Adding User (base of UserBase) to the list of imported models.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Model User will be created in src/models/user.model.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Import of model relations is not supported yet. Skipping the following relations: accessTokens</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Ignoring the following unsupported settings: acls</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   create src/models/customer.model.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   create src/models/user-base.model.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   create src/models/user.model.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   update src/models/index.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   update src/models/index.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   update src/models/index.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-access-control-example">Migrating Access Control Example<a href="#migrating-access-control-example" class="hash-link" aria-label="Direct link to Migrating Access Control Example" title="Direct link to Migrating Access Control Example">​</a></h3><p>As the first story to explorer the authorization migration path, we started with migrating a <a href="https://github.com/strongloop/loopback-example-access-control" target="_blank" rel="noopener noreferrer">LoopBack 3 example application</a> which implemented a RBAC (role based access control) system for demoing the LoopBack 3 authentication and authorization mechanism.</p><p>The migrated LoopBack 4 example is created in <a href="https://github.com/strongloop/loopback-next/tree/master/examples/access-control-migration" target="_blank" rel="noopener noreferrer">examples/access-control-migration</a>. It uses <a href="https://github.com/casbin/casbin" target="_blank" rel="noopener noreferrer">casbin</a> as the third party library to implement the role mapping. The original models and endpoints are migrated to the LoopBack 4 models, repositories, and controllers. The JWT authentication system is applied again and the core logic of original role resolvers and model ACLs map to the LoopBack 4 authorization system's authorizers and metadata.</p><p>We created a very <a href="https://loopback.io/doc/en/lb4/migration-auth-access-control-example.html" target="_blank" rel="noopener noreferrer">detailed tutorial</a> for the migration steps that you can follow to see how to secure the same endpoints in LoopBack 4.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-model-mixins">Migrating Model Mixins<a href="#migrating-model-mixins" class="hash-link" aria-label="Direct link to Migrating Model Mixins" title="Direct link to Migrating Model Mixins">​</a></h3><p>We've added a section <a href="https://loopback.io/doc/en/lb4/migration-models-mixins.html" target="_blank" rel="noopener noreferrer">Migrating model mixins</a> to the migration guide to detail how LoopBack 3 property and custom method/remote method mixins can be migrated to LoopBack 4 model/repository/controller mixin class factory functions.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="migration-of-all-model-properties">Migration of all model properties<a href="#migration-of-all-model-properties" class="hash-link" aria-label="Direct link to Migration of all model properties" title="Direct link to Migration of all model properties">​</a></h3><p>We have confirmed that migration also passes down the connector metadata in the model properties with <a href="https://github.com/strongloop/loopback-next/issues/3810" target="_blank" rel="noopener noreferrer">additional tests</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="experimental-feature-on-integration-with-winston-and-fluentd-logging">Experimental Feature on Integration with Winston and Fluentd Logging<a href="#experimental-feature-on-integration-with-winston-and-fluentd-logging" class="hash-link" aria-label="Direct link to Experimental Feature on Integration with Winston and Fluentd Logging" title="Direct link to Experimental Feature on Integration with Winston and Fluentd Logging">​</a></h2><p><a href="https://github.com/strongloop/loopback-next/blob/master/extensions/logging/README.md" target="_blank" rel="noopener noreferrer"><code>@loopback/extension-logging</code></a> contains a component that provides logging facilities based on <a href="https://github.com/winstonjs/winston" target="_blank" rel="noopener noreferrer">Winston</a> and <a href="https://github.com/fluent/fluent-logger-node" target="_blank" rel="noopener noreferrer">Fluentd</a>. Here is an example of injecting and invoking a Winston logger:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">inject</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/context'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Logger</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> logInvocation</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/extension-logging'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> param</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/rest'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyController</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Inject a winston logger</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LoggingBindings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">WINSTON_LOGGER</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> logger</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Logger</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// http access is logged by a global interceptor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/greet/{name}'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// log the `greet` method invocations</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">logInvocation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">greet</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'name'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Hello, </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">name</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/hello/{name}'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">hello</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'name'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Use the winston logger explicitly</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'info'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">greeting </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">name</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Hello, </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">name</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Its architecture diagram and basic usage are well documented in the package's <a href="https://github.com/strongloop/loopback-next/blob/master/extensions/logging/README.md" target="_blank" rel="noopener noreferrer">README.md</a> file.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="context-and-binding">Context and Binding<a href="#context-and-binding" class="hash-link" aria-label="Direct link to Context and Binding" title="Direct link to Context and Binding">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="adding-inspection-flags">Adding Inspection Flags<a href="#adding-inspection-flags" class="hash-link" aria-label="Direct link to Adding Inspection Flags" title="Direct link to Adding Inspection Flags">​</a></h3><p>Context and binding inspection APIs were improved with more options and information to print out their injections. </p><p>At binding level, there is one flag:</p><ul><li><code>includeInjections</code>: control if injections should be inspected.</li></ul><p>An example usage is:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> myBinding </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Binding</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">tag</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'model'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'my-model'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toClass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MyController</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// It converts a binding with value constructor to plain JSON object</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> json </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> myBinding</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">inspect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">includeInjections</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>At context level, there are two flags:</p><ul><li><code>includeInjections</code>: control if binding injections should be inspected.</li><li><code>includeParent</code>: control if parent context should be inspected.</li></ul><p>And their corresponding example usages:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">childCtx</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">inspect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">includeInjections</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">childCtx</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">inspect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">includeParent</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>More test cases can be found in PR <a href="https://github.com/strongloop/loopback-next/pull/4558" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/pull/4558</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="inspect-example">Inspect Example<a href="#inspect-example" class="hash-link" aria-label="Direct link to Inspect Example" title="Direct link to Inspect Example">​</a></h3><p><a href="https://strongloop.com/authors/Raymond_Feng/" target="_blank" rel="noopener noreferrer">@raymondfeng</a> has created <a href="https://github.com/raymondfeng/loopback4-example-inspect" target="_blank" rel="noopener noreferrer">loopback4-example-inspect</a> to demonstrate the inspection of a LoopBack 4 application's context hierarchy. It provides visualization on the different contexts (request, server, application), their bindings, and dependency injections in class constructors. Information is exposed via 3 endpoints:</p><ul><li>inspect: Fetches a JSON document for the context hierarchy.</li><li>graph: Renders the LoopBack application as a SVG diagram.</li><li>graph-d3: Displays the graph using <a href="https://github.com/magjac/d3-graphviz" target="_blank" rel="noopener noreferrer">d3-graphviz</a>.</li></ul><p>This example is turning into an extension <code>@loopback/context-explorer</code> in PR <a href="https://github.com/strongloop/loopback-next/pull/4666" target="_blank" rel="noopener noreferrer">#4666</a>. The core code is packed as a component.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dynamic-binding-and-rebinding-of-controllers">Dynamic Binding and Rebinding of Controllers<a href="#dynamic-binding-and-rebinding-of-controllers" class="hash-link" aria-label="Direct link to Dynamic Binding and Rebinding of Controllers" title="Direct link to Dynamic Binding and Rebinding of Controllers">​</a></h3><p>The hot-reloading of controllers after starting application is supported now. You can dynamically add/remove controllers after the application runs, and their endpoints will be mounted/removed accordingly. The OpenAPI specification that describes the exposed endpoints will also be updated. For example:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> app </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Application</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> app</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">controller</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MyController</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// MyController are available via REST API now</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// You can also see the updated OpenAPI Specification from endpoint /openapi.json</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="allowing-different-naming-convention-in-lb4-discover-cli">Allowing Different Naming Convention in <code>lb4 discover</code> CLI<a href="#allowing-different-naming-convention-in-lb4-discover-cli" class="hash-link" aria-label="Direct link to allowing-different-naming-convention-in-lb4-discover-cli" title="Direct link to allowing-different-naming-convention-in-lb4-discover-cli">​</a></h2><p>The CLI now allows selection of two naming convention for <code>lb4 discover</code> command: camel case or all lower case. You can find the explanation of each prompt in the <a href="https://loopback.io/doc/en/lb4/Discovering-models.html" target="_blank" rel="noopener noreferrer">Discovering models from relational databases</a> page. <code>discoverAndBuildModels</code> allows you to have different conventions to meet your requirements. Details can be found in page <a href="https://loopback.io/doc/en/lb3/Discovering-models-from-relational-databases.html#discover-and-define-models-at-runtime" target="_blank" rel="noopener noreferrer">Discover and define models at runtime</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="crud-rest-api-builder">CRUD REST API Builder<a href="#crud-rest-api-builder" class="hash-link" aria-label="Direct link to CRUD REST API Builder" title="Direct link to CRUD REST API Builder">​</a></h2><p>We added a new API builder that helps build a CRUD repository and controller class in <a href="https://github.com/strongloop/loopback-next/pull/4589" target="_blank" rel="noopener noreferrer">PR #4589</a>. <code>CrudRestApiBuilder</code> can be used with an <code>Entity</code> class to create a default repository and controller classes for the model class.
For example, if you have a <code>Product</code> model and a database <code>db</code>. In your <code>src/application.ts</code> file:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// add the following import</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">CrudRestComponent</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/rest-crud'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">TryApplication</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">BootMixin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">ServiceMixin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">RepositoryMixin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">RestApplication</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">options</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ApplicationConfig </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// other code</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// add the following line</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">component</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CrudRestComponent</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Create a new file for the configuration, e.g. <code>src/model-endpoints/product.rest-config.ts</code> that defines the <code>model</code>, <code>pattern</code>, <code>dataSource</code>, and <code>basePath</code> properties:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ModelCrudRestApiConfig</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/rest-crud'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Product</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../models'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">module</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">exports </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">ModelCrudRestApiConfig</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  model</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Product</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  pattern</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'CrudRest'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// make sure to use this pattern</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dataSource</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'db'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  basePath</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/products'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now your Product model will have a default repository and default controller class defined without the need for a repository or controller class file.
For more information on the API builder, see <a href="https://github.com/strongloop/loopback-next/blob/master/packages/rest-crud/README.md" target="_blank" rel="noopener noreferrer"><code>@loopback/rest-crud</code>'s README</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="rest-decorators">REST Decorators<a href="#rest-decorators" class="hash-link" aria-label="Direct link to REST Decorators" title="Direct link to REST Decorators">​</a></h2><p>We simplified the <code>filter</code> and <code>where</code> usage for constraint, schema, and OpenAPI mapping with two shortcut decorators: <code>@param.filter</code> and <code>@param.where</code>. The example below shows how they replaced the tedious signatures:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">TodoController</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Todo</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// replaces `@param.query.object('filter', getFilterSchemaFor(Todo))`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    filter</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Filter</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Todo</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Todo</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">todoRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">filter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">number</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// replaces `@param.query.object('filter', getFilterSchemaFor(Todo))`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Todo</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">exclude</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'where'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> filter</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> FilterExcludingWhere</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Todo</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Todo</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">todoRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">where</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Todo</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> where</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Where</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Todo</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Count</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// replaces @param.query.object('where', getWhereSchemaFor(Todo)) where?: Where&lt;Todo&gt;,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">todoRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">where</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="api-explorer">API Explorer<a href="#api-explorer" class="hash-link" aria-label="Direct link to API Explorer" title="Direct link to API Explorer">​</a></h2><p>We have now changed the OpenAPI specification generated by the decorator <code>@param.query.json</code> to support url-encoding. Please take a look at (<a href="https://github.com/strongloop/loopback-next/issues/2208" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/issues/2208</a>). This means users can now test their APIs from API explorer with complex json query parameters (eg: <code>filter={include: {relation: "todoList"}}</code>). Previously users were able to test from API explorer with only simple key-values in exploded format (eg: <code>?filter[limit]=1</code> ), because the generated OpenAPI for json query parameters was always of <code>exploded deep-object</code> style. This could be a breaking change for some API clients. Please take a look at the breaking change log in commits from PR <a href="https://github.com/strongloop/loopback-next/pull/4347" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/pull/4347</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="tooling-and-build">Tooling and Build<a href="#tooling-and-build" class="hash-link" aria-label="Direct link to Tooling and Build" title="Direct link to Tooling and Build">​</a></h2><ul><li><p><code>npm test</code> is passing on Windows: The problem was caused by <code>process.stdin.isTTY</code> behaves differently on the Windows platform, and was discovered by community member <a href="https://github.com/derdeka" target="_blank" rel="noopener noreferrer">@derdeka</a>. Great thanks to him and <a href="https://github.com/dougal83" target="_blank" rel="noopener noreferrer">@dougal83</a> who had been working with <a href="https://strongloop.com/authors/Miroslav_Bajto%C5%A1/" target="_blank" rel="noopener noreferrer">@bajtos</a> to investigate and eventually fix the issue! A series of PRs are involved: <a href="https://github.com/strongloop/loopback-next/pull/4643" target="_blank" rel="noopener noreferrer">#4643</a>, <a href="https://github.com/strongloop/loopback-next/pull/4605" target="_blank" rel="noopener noreferrer">#4605</a>, <a href="https://github.com/strongloop/loopback-next/pull/4652" target="_blank" rel="noopener noreferrer">#4652</a>, <a href="https://github.com/strongloop/loopback-next/pull/4657" target="_blank" rel="noopener noreferrer">#4657</a></p></li><li><p>PR <a href="https://github.com/strongloop/loopback-next/pull/4707" target="_blank" rel="noopener noreferrer">#4707</a> removed dist files from top-level tsconfig to speed up the eslint checks. The time for <code>npm run eslint</code> was reduced from about 4m10s down to 2m50s. More importantly, it enabled proper caching behavior, so that subsequent runs of <code>npm run eslint</code> are super quick, even after <code>npm run build</code> modified dist files.</p></li><li><p>Dropped Node.js 8 support in PR <a href="https://github.com/strongloop/loopback-next/pull/4619" target="_blank" rel="noopener noreferrer">#4619</a>. Node.js v8.x is now end of life, so that we upgraded the supported version across all the LoopBack 4 packages to be 10 and above. This breaking change also resulted in a semver-major release for the monorepo. Many small breaking changes are coming as part of it.</p></li><li><p><a href="https://www.npmjs.com/package/request" target="_blank" rel="noopener noreferrer"><code>request</code></a> module is now officially deprecated, so we replaced it with a new HTTP client <a href="https://github.com/axios/axios" target="_blank" rel="noopener noreferrer"><code>axios</code></a>. The entire story is tracked in <a href="https://github.com/strongloop/loopback-next/issues/2672" target="_blank" rel="noopener noreferrer">#2672</a>. We have updated the <a href="https://github.com/strongloop/loopback-next/pull/4637" target="_blank" rel="noopener noreferrer">http-caching-proxy</a> and <a href="https://github.com/strongloop/loopback-next/pull/4628" target="_blank" rel="noopener noreferrer">benchmark</a> packages to use axios.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="miscellaneous">Miscellaneous<a href="#miscellaneous" class="hash-link" aria-label="Direct link to Miscellaneous" title="Direct link to Miscellaneous">​</a></h2><ul><li><p>We upgraded the dependency of TypeScript from 3.7 to 3.8 in PR <a href="https://github.com/strongloop/loopback-next/pull/4769" target="_blank" rel="noopener noreferrer">#4769</a>. You can find the new features of TypeScript 3.8 in <a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-8.html" target="_blank" rel="noopener noreferrer">here</a></p></li><li><p>Querying with filter <code>where</code>, <code>fields</code> and <code>order</code> is now supported in the API Explorer, the usage is well documented in the section <a href="https://loopback.io/doc/en/lb4/Decorators_openapi.html#parameter-decorator-to-support-json-objects" target="_blank" rel="noopener noreferrer">parameter decorator to support json objects</a></p></li><li><p>We enabled running shared tests from both loopback-datasource-juggler@3 and loopback-datasource-juggler@4 in one more connector: <code>loopback-connector-db2</code></p></li><li><p>We fixed a bug in postgresql connector which occurred when few of the foreign keys in a parent table have null values (<a href="https://github.com/strongloop/loopback-next/issues/4332" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/issues/4332</a>)</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentations-and-blog-posts">Documentations and Blog Posts<a href="#documentations-and-blog-posts" class="hash-link" aria-label="Direct link to Documentations and Blog Posts" title="Direct link to Documentations and Blog Posts">​</a></h2><p>After refactoring the shopping example, we updated the <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer">README.md</a> file to document the new changes of application usage and the authorization system.</p><p>We published two blog posts this month about the management and plan for our project:</p><ul><li><p>LoopBack 3 has entered Maintenance LTS: <a href="https://strongloop.com/strongblog/lb3-entered-maintenance-mode/" target="_blank" rel="noopener noreferrer">https://strongloop.com/strongblog/lb3-entered-maintenance-mode/</a></p></li><li><p>The 2020 Goals and Focus for LoopBack: <a href="https://strongloop.com/strongblog/2020-goals/" target="_blank" rel="noopener noreferrer">https://strongloop.com/strongblog/2020-goals/</a></p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="community-contribution">Community Contribution<a href="#community-contribution" class="hash-link" aria-label="Direct link to Community Contribution" title="Direct link to Community Contribution">​</a></h2><p>With more LoopBack users joined us as community maintainers, we're seeing more interactions and discussions! Also, we're glad to see that the increasing numbers of pull request from the community. We really appreciate all of these help! Here are the highlight of community PR of February:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="adding-flag-disabledefaultsort-to-improve-database-query-performance">Adding Flag <code>disableDefaultSort</code> to Improve Database Query Performance<a href="#adding-flag-disabledefaultsort-to-improve-database-query-performance" class="hash-link" aria-label="Direct link to adding-flag-disabledefaultsort-to-improve-database-query-performance" title="Direct link to adding-flag-disabledefaultsort-to-improve-database-query-performance">​</a></h3><p>User <a href="https://github.com/Erikdegroot89" target="_blank" rel="noopener noreferrer"><code>Erikdegroot89</code></a> pointed out that the way LB4 sets default sorting for SQL query might drag down the querying time when the database has a massive amount of data. Using the new added flag <code>disableDefaultSort</code>, users can turn the default sorting off. See details in <a href="https://github.com/strongloop/loopback-connector-postgresql/pull/417" target="_blank" rel="noopener noreferrer">PR #417</a>. This PR also inspires us to leverage the option to all connectors. The issue is tracked in <a href="https://github.com/strongloop/loopback-connector/issues/169" target="_blank" rel="noopener noreferrer">GH issue</a>. Feel free to contribute or join the discussion.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="deprecation-decorator">Deprecation Decorator<a href="#deprecation-decorator" class="hash-link" aria-label="Direct link to Deprecation Decorator" title="Direct link to Deprecation Decorator">​</a></h3><p><code>@oas.deprecated</code> was created by user <a href="https://github.com/mschnee" target="_blank" rel="noopener noreferrer">mschnee</a> to enrich our OpenAPI decorators. It can be applied to class and a class method. It will set
the <code>deprecated</code> boolean property of the Operation Object. When applied to a
class, it will mark all operation methods of that class as deprecated, unless a
method overloads with <code>@oas.deprecated(false)</code>. You can check out <a href="https://loopback.io/doc/en/lb4/Decorators_openapi.html#oasdeprecated" target="_blank" rel="noopener noreferrer">its documentation</a> to learn more details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>In 2020, we look forward to helping you and seeing you around! LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Janny Hou</name>
            <uri>https://github.com/jannyhou</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack - 2020 Goals and Focus]]></title>
        <id>https://loopback.io/blog/2020-goals</id>
        <link href="https://loopback.io/blog/2020-goals"/>
        <updated>2020-02-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>2019 was surely an exciting and rewarding year for LoopBack. We <a href="https://strongloop.com/strongblog/loopback-2019-api-award-api-middleware/" target="_blank" rel="noopener noreferrer">received the "Best in API Middleware" award</a> from API World, our LB4 downloads on npmjs.com increased more than double compared to the year before. Moreover, we are thrilled to learn that many of you had deployed LoopBack 4 applications in production! In case you missed our <a href="https://strongloop.com/strongblog/loopback-2019-review/" target="_blank" rel="noopener noreferrer">2019 review</a>, make sure you check it out. As 2020 begins, we would like to share with you our high-level goals for this year. Things might change or shift throughout the year, but here is our plan.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="goal1---enable-as-many-loopback-3-users-to-migrate-to-loopback-4-as-possible">Goal#1 - Enable as many LoopBack 3 users to migrate to LoopBack 4 as possible<a href="#goal1---enable-as-many-loopback-3-users-to-migrate-to-loopback-4-as-possible" class="hash-link" aria-label="Direct link to Goal#1 - Enable as many LoopBack 3 users to migrate to LoopBack 4 as possible" title="Direct link to Goal#1 - Enable as many LoopBack 3 users to migrate to LoopBack 4 as possible">​</a></h3><p>With LoopBack 3 going end-of-life at the end of 2020, we are continuing to focus on the following areas: </p><ul><li><p><a href="https://loopback.io/doc/en/lb4/migration-overview.html" target="_blank" rel="noopener noreferrer">Migration Guide</a></p><p>  We had made good progress in the general runtime migration guide. As we complete the spike for the migration guide on authentication and authorization, we aim at finishing the migration guide in both areas. Our approach is to create the skeleton of the migration guide and fill in the details as we go. If you'd like to see certain migration topics but they are not in the guide, please let us know!</p></li><li><p>Migration tooling</p><p>  To allow you to migrate your LB3 app incrementally, we have <a href="https://github.com/strongloop/loopback-next/tree/master/examples/lb3-application" target="_blank" rel="noopener noreferrer">an example</a> for you to demonstrate how to mount your existing LoopBack 3 (LB3) application on a new LoopBack 4 (LB4) project and how to move the middleware from the LB3 application to a common location so that both the LB3 and LB4 applications can use them. Besides, there is also a <a href="https://loopback.io/doc/en/lb4/Importing-LB3-models.html" target="_blank" rel="noopener noreferrer">CLI to import models from LoopBack 3 project</a>. </p><p>  We would like to continue to add and enhance the migration tooling to make your migration experience easier and faster. </p></li><li><p>Feature parity</p><p>This year, we would like to close some of the feature parity gaps that a lot of you are asking for. We also realized that there are existing libraries to support certain functionalities in some cases, we'd like to document our recommendation as well.</p></li><li><p>Integration into IBM API Connect </p><p>With LoopBack 3 being packaged in <a href="https://www.ibm.com/cloud/api-connect" target="_blank" rel="noopener noreferrer">IBM API Connect</a>, it is also a good time for us to have LoopBack 4 integrated into the product. A <a href="https://github.com/strongloop/loopback-next/issues/4115" target="_blank" rel="noopener noreferrer">spike</a> has been done on the integration work and we'll continue to work on this.</p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="goal2---keep-adopting-latest-technologies-to-stay-relevant">Goal#2 - Keep adopting latest technologies to stay relevant<a href="#goal2---keep-adopting-latest-technologies-to-stay-relevant" class="hash-link" aria-label="Direct link to Goal#2 - Keep adopting latest technologies to stay relevant" title="Direct link to Goal#2 - Keep adopting latest technologies to stay relevant">​</a></h3><p>While enhancing our core code base, we'd like to continue to explore the possibility of using and/or integrating the latest technologies with LoopBack 4, such as:</p><ul><li>messaging and pub/sub event style, e.g. Kafka, MQTT</li><li>cloud native integration</li><li>native support on GraphQL</li><li>modernize the connector infrastructure and code base</li></ul><p>We initiated some investigation in some of the areas last year and would like to continue to adopting the latest technologies in order for LoopBack to stay relevant. </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="goal3-nurture-our-community-and-encourage-more-contributions">Goal#3: Nurture our community and encourage more contributions<a href="#goal3-nurture-our-community-and-encourage-more-contributions" class="hash-link" aria-label="Direct link to Goal#3: Nurture our community and encourage more contributions" title="Direct link to Goal#3: Nurture our community and encourage more contributions">​</a></h3><p>We cannot do this alone! Community contributions are vital to us. As our user base gets larger, it is essential to grow the contributor community. It not only accelerates our development, but also helps the community gain deeper LoopBack knowledge.</p><p>We would like to encourage community contributions by making a list of GH issues available to the community that we want to finish in the short term by using the <code>help wanted</code> and <code>2020Qx</code> labels. If you're looking for something to contribute in LoopBack, please check our <a href="https://github.com/strongloop/loopback-next/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22+%222020Q1%22" target="_blank" rel="noopener noreferrer">issue list for 2020Q1</a>. </p><p>If you're new to contributing to LoopBack or in open source project in general, don't worry, we have <a href="https://loopback.io/doc/en/lb4/code-contrib-lb4.html" target="_blank" rel="noopener noreferrer">detailed instructions</a> to guide you through. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>In 2020, we look forward to helping you and seeing you around! LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <author>
            <name>Raymond Feng</name>
            <uri>https://github.com/raymondfeng</uri>
        </author>
        <author>
            <name>Miroslav Bajtoš</name>
            <uri>http://github.com/bajtos</uri>
        </author>
        <category label="Community" term="Community"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 3 has entered Maintenance LTS]]></title>
        <id>https://loopback.io/blog/lb3-entered-maintenance-mode</id>
        <link href="https://loopback.io/blog/lb3-entered-maintenance-mode"/>
        <updated>2020-02-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Almost a year ago, we announced <a href="https://strongloop.com/strongblog/lb3-extended-lts/" target="_blank" rel="noopener noreferrer">Extended Long Term Support for LoopBack 3</a>, extending Active LTS to the end of November 2019. As the saying goes, all good things must come to an end, and so LoopBack version 3 has entered Maintenance LTS in December 2019.</p><p>What does this change means for LoopBack 3 users? Quoting from our <a href="https://loopback.io/doc/en/contrib/Long-term-support.html" target="_blank" rel="noopener noreferrer">Long Term Support policy</a>:</p><blockquote><p>Once a release moves into Maintenance LTS mode, only critical bugs, critical security fixes, and documentation updates will be permitted.</p><p>Specifically, adding support for new major Node.js versions is not permitted.</p></blockquote><p>Let's quickly clarify that Node.js 12 is the latest major Node.js version supported by LoopBack 3.</p><p>Now back to the first rule, which limits the allowed updates to critical problems only. This rule has two goals:</p><ul><li>Maximize the stability of LTS versions by reducing possibilities of changes that may introduce undesired bugs or unintended breaking changes.</li><li>Minimize our effort spent on maintaining old versions, so that we can invest more into the current version (LoopBack 4 and beyond).</li></ul><p>There is a catch though: because LoopBack 4 is fundamentally incompatible with LoopBack 3, there are bugs that exists in LoopBack 3 only. The usual approach, where bugs are fixed in the Current version and back-ported to LTS versions, cannot be applied. As a result, we are tracking several community-contributed pull requests fixing issues specific to LoopBack 3.</p><p>We feel it would be counter-productive to reject those in-progress pull requests now, after several rounds of reviews and adjustments, just because LoopBack 3 transitioned from Active to Maintenance LTS. We don't want to throw away effort invested by developers contributing those fixes and thus we decided an exceptional situation deserves an exception to be made.</p><p><strong>Until June 2020, we will keep reviewing pull requests fixing non-critical bugs in LoopBack 3 and if we evaluate the risk of breaking something else as low, then we will accept the fix.</strong></p><p>At the end of June, we will evaluate the impact of this new rule and decide if we want to extend its duration further.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="affected-packages">Affected packages<a href="#affected-packages" class="hash-link" aria-label="Direct link to Affected packages" title="Direct link to Affected packages">​</a></h2><p>The following packages are considered as part of LoopBack 3 and are moving to
Maintenance LTS:</p><ul><li><a href="https://www.npmjs.com/package/generator-loopback" target="_blank" rel="noopener noreferrer">generator-loopback</a></li><li><a href="https://www.npmjs.com/package/grunt-loopback-sdk-angular" target="_blank" rel="noopener noreferrer">grunt-loopback-sdk-angular</a></li><li><a href="https://www.npmjs.com/package/gulp-loopback-sdk-angular" target="_blank" rel="noopener noreferrer">gulp-loopback-sdk-angular</a></li><li><a href="https://www.npmjs.com/package/loopback" target="_blank" rel="noopener noreferrer">loopback</a></li><li><a href="https://www.npmjs.com/package/loopback-boot" target="_blank" rel="noopener noreferrer">loopback-boot</a></li><li><a href="https://www.npmjs.com/package/loopback-cli" target="_blank" rel="noopener noreferrer">loopback-cli</a></li><li><a href="https://www.npmjs.com/package/loopback-component-explorer" target="_blank" rel="noopener noreferrer">loopback-component-explorer</a></li><li><a href="https://www.npmjs.com/package/loopback-component-passport" target="_blank" rel="noopener noreferrer">loopback-component-passport</a></li><li><a href="https://www.npmjs.com/package/loopback-component-push" target="_blank" rel="noopener noreferrer">loopback-component-push</a></li><li><a href="https://www.npmjs.com/package/loopback-component-storage" target="_blank" rel="noopener noreferrer">loopback-component-storage</a></li><li><a href="https://www.npmjs.com/package/loopback-context" target="_blank" rel="noopener noreferrer">loopback-context</a></li><li><a href="https://www.npmjs.com/package/loopback-datasource-juggler" target="_blank" rel="noopener noreferrer">loopback-datasource-juggler</a> (version 3.x)</li><li><a href="https://www.npmjs.com/package/loopback-filters" target="_blank" rel="noopener noreferrer">loopback-filters</a></li><li><a href="https://www.npmjs.com/package/loopback-phase" target="_blank" rel="noopener noreferrer">loopback-phase</a></li><li><a href="https://www.npmjs.com/package/loopback-sandbox" target="_blank" rel="noopener noreferrer">loopback-sandbox</a></li><li><a href="https://www.npmjs.com/package/loopback-sdk-angular" target="_blank" rel="noopener noreferrer">loopback-sdk-angular</a></li><li><a href="https://www.npmjs.com/package/loopback-sdk-angular-cli" target="_blank" rel="noopener noreferrer">loopback-sdk-angular-cli</a></li><li><a href="https://www.npmjs.com/package/loopback-soap" target="_blank" rel="noopener noreferrer">loopback-soap</a></li><li><a href="https://www.npmjs.com/package/loopback-swagger" target="_blank" rel="noopener noreferrer">loopback-swagger</a></li><li><a href="https://www.npmjs.com/package/loopback-workspace" target="_blank" rel="noopener noreferrer">loopback-workspace</a></li><li><a href="https://www.npmjs.com/package/strong-remoting" target="_blank" rel="noopener noreferrer">strong-remoting</a></li></ul><p>Please note that connectors are compatible with both LoopBack version 3 and version 4, therefore they are staying actively developed.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>We urge all LoopBack 3 users to migrate their applications to LoopBack 4 as soon as possible. We are providing <a href="https://loopback.io/doc/en/lb4/migration-overview.html" target="_blank" rel="noopener noreferrer">Migration guide</a> and automated tooling to help with the transition.</p><p>If you are building a new project, then we strongly recommend to use LoopBack 4 from the beginning.</p><p>LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Miroslav Bajtoš</name>
            <uri>http://github.com/bajtos</uri>
        </author>
        <category label="LoopBack 3" term="LoopBack 3"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 January 2020 Milestone Update]]></title>
        <id>https://loopback.io/blog/january-2020-milestone</id>
        <link href="https://loopback.io/blog/january-2020-milestone"/>
        <updated>2020-02-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>It's a <a href="https://en.wikipedia.org/wiki/Leap_year" target="_blank" rel="noopener noreferrer">Leap Year</a> this year, and we continue to make leaps in LoopBack 4.</p><p>With New Year's resolutions in mind, we quickly got started on several items.</p><p>Check out the sections below for the progress we made in each area:</p><ul><li><a href="#loopback-4-shopping-example-front-end">LoopBack 4 Shopping Example Front-end</a></li><li><a href="#migration-guide">Migration Guide</a></li><li><a href="#improved-developer-experience">Improved Developer Experience</a></li><li><a href="#improved-performance-of-context">Improved Performance Of Context</a></li><li><a href="#apic-and-loopback-integration">APIC and LoopBack Integration</a></li><li><a href="#community-contributions">Community Contributions</a></li><li><a href="#miscellaneous">Miscellaneous</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="loopback-4-shopping-example-front-end">LoopBack 4 Shopping Example Front-end<a href="#loopback-4-shopping-example-front-end" class="hash-link" aria-label="Direct link to LoopBack 4 Shopping Example Front-end" title="Direct link to LoopBack 4 Shopping Example Front-end">​</a></h2><p>The LoopBack 4 example app now has a website - Shoppy.</p><p><img loading="lazy" src="/blog/assets/images/shoppy-6f79d50bb89c9dcc9cea50405f0169cf.png" width="2560" height="1304" class="img_ev3q"></p><p>Check out <a href="https://github.com/strongloop/loopback4-example-shopping/" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback4-example-shopping/</a> and start the app; Shoppy is available at <a href="http://localhost:3000/shoppy.html" target="_blank" rel="noopener noreferrer">http://localhost:3000/shoppy.html</a>.</p><p>This website serves as an example for integrating LoopBack 4 APIs to a front-end and as a basis for you to experiment with various LoopBack 4 features.</p><p>The authorization portion has also been revamped to make it easier to follow.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="migration-guide">Migration Guide<a href="#migration-guide" class="hash-link" aria-label="Direct link to Migration Guide" title="Direct link to Migration Guide">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-boot-scripts">Migrating Boot Scripts<a href="#migrating-boot-scripts" class="hash-link" aria-label="Direct link to Migrating Boot Scripts" title="Direct link to Migrating Boot Scripts">​</a></h3><p>In LoopBack 3, predefined boot scripts are organized in the <code>/server/boot</code> directory, and are executed right before the server starts to perform some custom application initialization. The same functionality can also be achieved in LoopBack 4 application by adding observers.
Having the observers created, you can access the application and artifacts like models, datasources by dependency injection or retrieving from the context. Moreover, specifying the order of observers is also supported. For the 2 pre-defined LoopBack 3 boot scripts (<code>/server/boot/root.js</code> and <code>/server/boot/authentication.js</code>), please do not create corresponding observers for them. In LoopBack 4, the router is automatically registered in the rest server and the authentication system is enabled by applying the authentication component. See <a href="https://loopback.io/doc/en/lb4/migration-boot-scripts.html" target="_blank" rel="noopener noreferrer">Migrating boot scripts</a> for more details.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-remoting-hooks">Migrating Remoting Hooks<a href="#migrating-remoting-hooks" class="hash-link" aria-label="Direct link to Migrating Remoting Hooks" title="Direct link to Migrating Remoting Hooks">​</a></h3><p>In LoopBack 3, a remote hook enables you to execute a function before or after a remote method is called by a client. There are three kinds of hooks: global, model, and method. LoopBack 4 provides the interceptors feature to enable application developers to implement similar functionality.
See <a href="https://loopback.io/doc/en/lb4/migration-models-remoting-hooks.html" target="_blank" rel="noopener noreferrer">Migrating remoting hooks</a> for more details.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-custom-model-methods">Migrating Custom Model Methods<a href="#migrating-custom-model-methods" class="hash-link" aria-label="Direct link to Migrating Custom Model Methods" title="Direct link to Migrating Custom Model Methods">​</a></h3><p> In LoopBack 3, developers could customize model methods in various ways:</p><ul><li><p>configure which endpoints are public</p></li><li><p>customize the model method, but not the endpoint</p></li><li><p>add a new model method and a new endpoint</p><p>The first could be done by modifying some settings in <code>server/model-config.json</code> or calling the <code>disableRemoteMethodByName( methodName )</code> on the model. The second was accomplished by overriding a default model method inside the model script file. The third was accomplished by adding a new model method and a new remote method definition inside the model script file.</p><p>In LoopBack 4,</p></li><li><p>data-access APIs (model methods) are implemented by repositories that are decoupled from models.</p></li><li><p>REST APIs (remote methods) are implemented by controllers that are decoupled from models.</p></li></ul><p>Migrating the LoopBack 3 model method customizations to LoopBack 4 is very straightforward.
See <a href="https://loopback.io/doc/en/lb4/migration-models-methods.html" target="_blank" rel="noopener noreferrer">Migrating custom model methods</a> for more details.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="spike-for-authentication--authorization-migration-guide">Spike for Authentication &amp; Authorization Migration Guide<a href="#spike-for-authentication--authorization-migration-guide" class="hash-link" aria-label="Direct link to Spike for Authentication &amp; Authorization Migration Guide" title="Direct link to Spike for Authentication &amp; Authorization Migration Guide">​</a></h3><p>A spike was completed which outlined the remaining tasks required for authentication and authorization migration details between LB3 and LB4.
Please see <a href="https://github.com/strongloop/loopback-next/pull/4440" target="_blank" rel="noopener noreferrer">PR #4440</a> for details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="improved-developer-experience">Improved Developer Experience<a href="#improved-developer-experience" class="hash-link" aria-label="Direct link to Improved Developer Experience" title="Direct link to Improved Developer Experience">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="cli-improvements">CLI Improvements<a href="#cli-improvements" class="hash-link" aria-label="Direct link to CLI Improvements" title="Direct link to CLI Improvements">​</a></h3><p>The Command Line Interface (CLI) is one of the most convenient tools of LoopBack. With a few commands and basic information, it allows you to create a LoopBack application in a short time. We made some improvements in the following CLI commands to make them more intuitive and flexible (especially the <code>relation</code> one):</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="lb4-relation"><code>lb4 relation</code><a href="#lb4-relation" class="hash-link" aria-label="Direct link to lb4-relation" title="Direct link to lb4-relation">​</a></h4><p>Alright, we admit that our <code>lb4 relation</code> command wasn't entirely user-friendly -- it generated partial code even when you forced it to stop; it didn't handle customized names even when it looked like it would; it didn't support the <code>HasOne</code> relation. We improved on some of these issues. As you can see in the newly updated <a href="https://loopback.io/doc/en/lb4/Relation-generator.html" target="_blank" rel="noopener noreferrer">Relation Generator</a> page, it now takes customized foreign keys and relation names with more descriptive prompt messages. Need an example? We updated the <a href="https://loopback.io/doc/en/lb4/todo-list-tutorial-relations.html" target="_blank" rel="noopener noreferrer">TodoList Example</a> with the latest CLI capabilities.</p><p>Even though the CLI is a handy tool and has a lot of functionality, it still has limitations. For instance, users can customize foreign key names, relation names, source key names, and even the database column names in relations. The newly released CLI changes currently supports some of these, but not all of them. For the latest details on defining relations, you can always check the <a href="https://loopback.io/doc/en/lb4/Relations.html" target="_blank" rel="noopener noreferrer">Relations</a> page.</p><p>As for defining a <code>HasOne</code> relation through the CLI, one of our community users <a href="https://github.com/lokesh1197" target="_blank" rel="noopener noreferrer"><code>@Lokesh1197</code></a> has provided this new capability via <a href="https://github.com/strongloop/loopback-next/pull/4171" target="_blank" rel="noopener noreferrer">PR #4171</a>. See <a href="https://loopback.io/doc/en/lb4/hasOne-relation.html" target="_blank" rel="noopener noreferrer">hasOne Relation</a> and <a href="https://loopback.io/doc/en/lb4/Relation-generator.html" target="_blank" rel="noopener noreferrer">Relation generator</a> for updated documentation.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="lb4-openapi"><code>lb4 openapi</code><a href="#lb4-openapi" class="hash-link" aria-label="Direct link to lb4-openapi" title="Direct link to lb4-openapi">​</a></h4><p>LoopBack 4 uses <code>index.ts</code> files to export different kinds of artifacts. The <code>lb4 openapi</code> command wasn't generating/updating this file. We noticed this recently and fixed it immediately. Phew! Don't forgot to install the latest <code>@loopback/cli</code> to get the patch!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="warning-for-strict-model-usage">Warning for strict model usage<a href="#warning-for-strict-model-usage" class="hash-link" aria-label="Direct link to Warning for strict model usage" title="Direct link to Warning for strict model usage">​</a></h3><p>If you are/used to be an LB3 user, you're probably familiar with the <code>strict</code> mode. It allows you to create models that permit both well-defined and also arbitrary extra properties. LB4 has this nice feature as well. However, it is applicable to <strong>NoSQL</strong> databases only. If you applied this setting to SQL databases, it would get silently discarded and this made it difficult for developers to troubleshoot unexpected behavior.</p><p>Now, users will receive a warning when they try to set a model to <code>{strict: false}</code> mode while they are using a SQL datasource in an LB4 application. We updated the <a href="https://loopback.io/doc/en/lb4/Model.html#supported-entries-of-settings" target="_blank" rel="noopener noreferrer">Supported Entries of Settings</a> table of the <code>Model</code> page to clarify this potential issue.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="improved-performance-of-context">Improved Performance Of Context<a href="#improved-performance-of-context" class="hash-link" aria-label="Direct link to Improved Performance Of Context" title="Direct link to Improved Performance Of Context">​</a></h2><p>We addressed some context-related performance degredation bugs that recently came in. It turns out that matching all bindings by a filter function can be expensive. <a href="https://github.com/strongloop/loopback-next/pull/4377" target="_blank" rel="noopener noreferrer">PR #4377</a> addresses these bugs and improves performance for one of the primary usages of the context - find bindings by tags.</p><p>Performance was improved by:</p><ul><li>making a binding to be an EventEmitter (emitting events when binding scope/tags/value are changed)</li><li>setting up event listeners in the context to react to binding events to maintain an index of bindings by tag</li><li>optimizing Context.findByTag to leverage binding index if possible</li><li>changing interceptor to find matching global interceptors by tag</li><li>simple benchmark testing shows over 15% gain for hello-world</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="apic-and-loopback-integration">APIC and LoopBack Integration<a href="#apic-and-loopback-integration" class="hash-link" aria-label="Direct link to APIC and LoopBack Integration" title="Direct link to APIC and LoopBack Integration">​</a></h2><p>We started to investigate the steps required, if needed, on importing OpenAPI specs generated from a LoopBack 4 application into IBM API Connect v2018. There are additional extended configurations and APIC product files that are needed in order to import the API successfully. As the next step, we will be testing all endpoints of our example shopping application with API Connect, and documenting the steps. For details on the spike, see <a href="https://github.com/strongloop/loopback-next/issues/4115" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/issues/4115</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="community-contributions">Community Contributions<a href="#community-contributions" class="hash-link" aria-label="Direct link to Community Contributions" title="Direct link to Community Contributions">​</a></h2><ul><li><a href="https://github.com/lokesh1197" target="_blank" rel="noopener noreferrer"><code>@Lokesh1197</code></a> updated our relation CLI with the ability to define a <code>HasOne</code> relation via <a href="https://github.com/strongloop/loopback-next/pull/4171" target="_blank" rel="noopener noreferrer">PR #4171</a>. See <a href="https://loopback.io/doc/en/lb4/hasOne-relation.html" target="_blank" rel="noopener noreferrer">hasOne Relation</a> and <a href="https://loopback.io/doc/en/lb4/Relation-generator.html" target="_blank" rel="noopener noreferrer">Relation generator</a> for updated documentation.</li><li><a href="https://github.com/achrinza" target="_blank" rel="noopener noreferrer"><code>@achrinza</code></a> has made several small improvements/clarifications in our documentation.</li><li><a href="https://github.com/dougal83" target="_blank" rel="noopener noreferrer"><code>@dougal83</code></a> added the title property to filter schemas (filter, where, scope) in preparation for openapi schema consolidation. See <a href="https://github.com/strongloop/loopback-next/pull/4355" target="_blank" rel="noopener noreferrer">PR#4355</a> for more details.</li></ul><p>A big 'Thank you!' to all our contributors! :)</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="miscellaneous">Miscellaneous<a href="#miscellaneous" class="hash-link" aria-label="Direct link to Miscellaneous" title="Direct link to Miscellaneous">​</a></h2><ul><li>We improved the Transaction interface in loopback-connector by adding an <code>isActive()</code> method. This allows you to determine if the connection object on the transaction is present or not. Suppose you have a transaction instance called <code>tx</code>, you can call <code>tx.isActive()</code> to check the activeness of its connection without throwing an error (if an error happens). See <a href="https://github.com/strongloop/loopback-next/pull/4474" target="_blank" rel="noopener noreferrer">PR #4474</a> and <a href="https://github.com/strongloop/loopback-next/pull/4537" target="_blank" rel="noopener noreferrer">PR #4537</a>, and <a href="https://loopback.io/doc/en/lb4/Using-database-transactions.html" target="_blank" rel="noopener noreferrer">Using database transactions</a> for details.</li><li>Updated Todo and TodoList Tutorials. The Todo and TodoList tutorials and examples are a great place to start learning about LoopBack 4. As our CLI prompts and generated artifacts have changed and improved over time, we recently started noticing that our documentation and code snippets were slightly out-of-date, and there was a bug as well. We decided it was time to update these fun tutorials and examples. <a href="https://github.com/strongloop/loopback-next/pull/4412" target="_blank" rel="noopener noreferrer">PR #4412</a> addressed these issues. Please see <a href="https://loopback.io/doc/en/lb4/todo-tutorial.html" target="_blank" rel="noopener noreferrer">Todo tutorial</a>,<a href="https://loopback.io/doc/en/lb4/todo-list-tutorial.html" target="_blank" rel="noopener noreferrer">TodoList tutorial</a>, <a href="https://github.com/strongloop/loopback-next/tree/master/examples/todo" target="_blank" rel="noopener noreferrer">Todo Example</a>, and <a href="https://github.com/strongloop/loopback-next/tree/master/examples/todo-list" target="_blank" rel="noopener noreferrer">TodoList Example</a> for the latest and greatest.</li><li>Fixed problem where CLI commands generate artifacts with lint problems. See <a href="https://github.com/strongloop/loopback-next/pull/4431" target="_blank" rel="noopener noreferrer">PR #4431</a> for details.</li><li>Improved <code>@loopback/authorization</code>'s README.md document to include detailed steps of implementing a basic RBAC system. See <a href="https://github.com/strongloop/loopback-next/pull/4405" target="_blank" rel="noopener noreferrer">PR #4205</a> for details.</li><li>Updated <code>strong-docs</code>'s dependencies to use the latest TypeScript 3.7. See <a href="https://github.com/strongloop/strong-docs/pull/128" target="_blank" rel="noopener noreferrer">PR #128</a> for details.</li><li>Added alias support for header language 'zh-cn' and 'zh-tw' in <code>strong-globalize</code>. See <a href="https://github.com/strongloop/strong-globalize/pull/151" target="_blank" rel="noopener noreferrer">PR #151</a> and <a href="https://github.com/strongloop/strong-globalize/pull/153" target="_blank" rel="noopener noreferrer">PR #153</a> for details.</li><li>Fixed problem with complex objects for query params in api explorer. See <a href="https://github.com/strongloop/loopback-next/pull/4347" target="_blank" rel="noopener noreferrer">PR#4347</a> for details.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>If you're interested in what we're working on next, you can check out the <a href="https://github.com/strongloop/loopback-next/issues/4543" target="_blank" rel="noopener noreferrer">February Milestone</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>In 2020, we look forward to helping you and seeing you around! LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Dominique Emond</name>
            <uri>https://github.com/emonddr</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 2019 Q4 Overview]]></title>
        <id>https://loopback.io/blog/loopback4-2019-q4-overview</id>
        <link href="https://loopback.io/blog/loopback4-2019-q4-overview"/>
        <updated>2020-01-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Happy New Year! The number of LoopBack 4 downloads in 2019 increased more than double than that in 2018. Thank you for your continuous support in using and contributing to LoopBack. We cannot do this alone and we really appreciate all the contributions from the community. In December, we were happy to have 3 community members join us as maintainers: <a href="https://github.com/derdeka" target="_blank" rel="noopener noreferrer">@derdeka</a>, <a href="https://github.com/dougal83" target="_blank" rel="noopener noreferrer">dougal83</a> and <a href="https://github.com/achrinza" target="_blank" rel="noopener noreferrer">achrinza</a>!</p><p>As year 2020 commences, let us summarize our development activities in the last quarter of 2019.</p><ul><li><a href="#migration-guide">Migration Guide</a>: created the outline for general runtime migration and added details on migrating Express middleware and model relations.</li><li><a href="#going-cloud-native">Going cloud native</a>: added extensions for observability and deployment documentation</li><li><a href="#authentication-and-authorization">Authentication and authorization</a>: enhanced the documentation and enabled token based authentication in API Explorer</li><li><a href="#inclusion-of-related-models">Inclusion of Related Models</a>: completed MVP and ability to allow custom scope.</li><li><a href="#partition-key-with-cloudant-and-couchdb">Partition Key with Cloudant and CouchDB</a>: added support for partitioned database</li><li><a href="#creating-rest-api-from-model-classes">Creating REST API from Model Classes</a>: added the ability to generate controller from Model and Repository classes</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="migration-guide">Migration Guide<a href="#migration-guide" class="hash-link" aria-label="Direct link to Migration Guide" title="Direct link to Migration Guide">​</a></h2><p>Enriching the <a href="https://github.com/strongloop/loopback-next/issues/453" target="_blank" rel="noopener noreferrer">Migration Guide from LB3</a> story is our focus of this quarter and will continue to be the focus. Adding on top of the comparison between the concepts in LoopBack 3 and that in LoopBack 4, we created the skeleton on the areas that need more explanation in the migration. You can find it on our site: <a href="https://loopback.io/doc/en/lb4/migration-overview.html" target="_blank" rel="noopener noreferrer">Migration Guide</a></p><p>In Q4, we added pages for migrating: <a href="https://loopback.io/doc/en/lb4/migration-models-core.html" target="_blank" rel="noopener noreferrer">Model</a>, <a href="https://loopback.io/doc/en/lb4/migration-datasources.html" target="_blank" rel="noopener noreferrer">Datasource</a>, <a href="https://loopback.io/doc/en/lb4/migration-models-relations.html" target="_blank" rel="noopener noreferrer">Model Relation</a>, <a href="https://loopback.io/doc/en/lb4/migration-express-middleware.html" target="_blank" rel="noopener noreferrer">Express Middleware</a>, etc. If there are other topics you'd like to see in the migration guide, please let us know on <a href="https://github.com/strongloop/loopback-next/issues/453" target="_blank" rel="noopener noreferrer">GitHub</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="going-cloud-native">Going Cloud Native<a href="#going-cloud-native" class="hash-link" aria-label="Direct link to Going Cloud Native" title="Direct link to Going Cloud Native">​</a></h2><p>In the past few months, we made significant amount of enhancement in the cloud native area. Not only we added the extensions for logging, health check, tracing and metrics, we also created the deployment to Kubernetes tutorial in our shopping example application. For details, take a look at the <a href="https://strongloop.com/strongblog/going-cloud-native-with-loopback-4/" target="_blank" rel="noopener noreferrer">blog post</a> from <a href="https://strongloop.com/authors/Raymond_Feng/" target="_blank" rel="noopener noreferrer">Raymond</a>.</p><p>Besides, the Node.js LoopBack stack provides a powerful solution to build microservices in TypeScript with LoopBack. Appsody is an open source project that makes creating cloud native applications simple. It has many cool features which are pre-configured with cloud native capabilities for Kubernetes and Knative deployments. In our detailed <a href="https://loopback.io/doc/en/lb4/Appsody-LoopBack.html" target="_blank" rel="noopener noreferrer">Appsody with LoopBack Tutorial</a> on developing and deploying LoopBack applications, we would like to show you the possibility and potential of how these kinds of tools can work well with LoopBack of building microservices.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="authentication-and-authorization">Authentication and Authorization<a href="#authentication-and-authorization" class="hash-link" aria-label="Direct link to Authentication and Authorization" title="Direct link to Authentication and Authorization">​</a></h2><p>We added the support for authentication and authorization in LoopBack 4. Check out the <a href="https://loopback.io/doc/en/lb4/Loopback-component-authentication.html" target="_blank" rel="noopener noreferrer">Authentication page</a> and the <a href="https://loopback.io/doc/en/lb4/Loopback-component-authorization.html" target="_blank" rel="noopener noreferrer">Authorization page</a> for the latest features. Want to try out a real-world example? We updated the <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer">shopping example application</a> to use the authentication and authorization systems to help you get familiar with it.</p><p>Also, we made some progress on the story <em>allow users to have token-based authentication in API Explorer</em> in Q4. Starting with <a href="https://github.com/strongloop/loopback-next/issues/2027" target="_blank" rel="noopener noreferrer">a spike</a> as the blueprint, we now added an extension point for the OpenAPI enhancers as the first brick in the wall. Check out the <a href="https://loopback.io/doc/en/lb4/Extending-OpenAPI-specification.html" target="_blank" rel="noopener noreferrer">"Extending OpenAPI Specification"</a> page for details. As always, we'd love to get any help from you. Here are some follow-up stories if you're interested in contributing:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues/4380" target="_blank" rel="noopener noreferrer">Add OpenAPI enhancer service in @loopback/rest</a></li><li><a href="https://github.com/strongloop/loopback-next/issues/4385" target="_blank" rel="noopener noreferrer">Ordering the enhancers by group name for OpenAPI spec enhancer service </a></li><li><a href="https://github.com/strongloop/loopback-next/issues/4386" target="_blank" rel="noopener noreferrer">Add bearer auth scheme as the default security scheme</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="inclusion-of-related-models">Inclusion of Related Models<a href="#inclusion-of-related-models" class="hash-link" aria-label="Direct link to Inclusion of Related Models" title="Direct link to Inclusion of Related Models">​</a></h2><p>We finished the Inclusion of Related Models <a href="https://github.com/strongloop/loopback-next/issues/1352" target="_blank" rel="noopener noreferrer">MVP</a> in Q4! This addition not only simplifies querying data and reduces database calls in LoopBack 4, but it closes one feature gap between LoopBack 3 and LoopBack 4 as well.</p><p>In the past few months, we released a bunch of features such as <a href="https://loopback.io/doc/en/lb4/HasMany-relation.html#query-multiple-relations" target="_blank" rel="noopener noreferrer">custom scope for inclusion</a>, and we <a href="https://github.com/strongloop/loopback-next/issues/3451" target="_blank" rel="noopener noreferrer">added inclusion resolvers to lb4 relation CLI</a>, etc. We enhanced the <a href="https://loopback.io/doc/en/lb4/HasMany-relation.html#querying-related-models" target="_blank" rel="noopener noreferrer">documentation</a> with examples and usages along with <a href="https://strongloop.com/strongblog/inclusion-of-related-models/" target="_blank" rel="noopener noreferrer">a blog post</a> to show how you can query data over different relations easily. Still, there are some limitations and unfinished tasks. Check <a href="https://github.com/strongloop/loopback-next/issues/3585" target="_blank" rel="noopener noreferrer">Post MVP</a> if you'd like to contribute.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="partition-key-with-cloudant-and-couchdb">Partition Key with Cloudant and CouchDB<a href="#partition-key-with-cloudant-and-couchdb" class="hash-link" aria-label="Direct link to Partition Key with Cloudant and CouchDB" title="Direct link to Partition Key with Cloudant and CouchDB">​</a></h2><p>Speaking of better performance and manageability of databases, the database that supports partitioning is one of the ideal choices. Are you considering to use databases that have the feature such as Cloudant and CouchDB with LoopBack? We now support such features in the corresponding connectors. It not only makes the query less computationally, but also reduces cost for LoopBack users using the Cloudant service on IBM Cloud. We have prepared a tutorial and documentation to help you get started! See the details and examples on the usage in <a href="https://github.com/strongloop/loopback-connector-cloudant/blob/master/doc/partitioned-db.md" target="_blank" rel="noopener noreferrer">Partition Databases</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="creating-rest-api-from-model">Creating REST API from Model<a href="#creating-rest-api-from-model" class="hash-link" aria-label="Direct link to Creating REST API from Model" title="Direct link to Creating REST API from Model">​</a></h2><p>As LoopBack 4 provides more scalability and extensibility, we ask users to create artifacts such as Model, Datasource, Repository, and Controller to start building their applications. Compared to LoopBack 3, it adds complexity and extra steps to create APIs. This story aims to improve the developer experience for those who may not need that extra flexibility.</p><p>You might wonder how simple it would be. In the <a href="https://github.com/strongloop/loopback-next/pull/4235" target="_blank" rel="noopener noreferrer">spike</a>, if you already have the database (we use MySQL in the spike) and tables set up, you can create basic CRUD APIs just through the API Explorer. For example, all you need to do is to make a POST request with a valid MySQL connection string and a list of existing tables,</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"connectionString"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"mysql://root@localhost/test"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"tableNames"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"Coffeeshop"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>then the new endpoints will be created for you.</p><p>Implementations are on the way! Feel free to try out the spike and join the discussion on GitHub :D</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>If you have been following us, you probably realize that we now start our planning of the milestones and roadmaps with a pull request. We think it is useful to our users to get to know our plans and possibly provide inputs in our planning stage. See our <a href="https://github.com/strongloop/loopback-next/blob/master/docs/ROADMAP.md#2020-goals-and-focus" target="_blank" rel="noopener noreferrer">2020 Goals and Focus</a> and <a href="https://github.com/strongloop/loopback-next/blob/master/docs/ROADMAP.md#q1-2020-roadmap" target="_blank" rel="noopener noreferrer">Q1 roadmap</a>. There is also the <a href="https://github.com/strongloop/loopback-next/issues/4376" target="_blank" rel="noopener noreferrer">Janurary milestone</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="previous-milestone-blogs">Previous Milestone Blogs<a href="#previous-milestone-blogs" class="hash-link" aria-label="Direct link to Previous Milestone Blogs" title="Direct link to Previous Milestone Blogs">​</a></h2><p>Check out our previously published monthly milestone blog posts in Q4 for more details:</p><ul><li><a href="https://strongloop.com/strongblog/october-2019-milestone/" target="_blank" rel="noopener noreferrer">October milestone blog</a></li><li><a href="https://strongloop.com/strongblog/november-2019-milestone/" target="_blank" rel="noopener noreferrer">November milestone blog</a></li><li><a href="https://strongloop.com/strongblog/december-2019-milestone/" target="_blank" rel="noopener noreferrer">December milestone blog</a></li></ul><p>If you want to see a 2019 summary, don't forget to check out <a href="https://strongloop.com/strongblog/loopback-2019-review/" target="_blank" rel="noopener noreferrer">this blog</a>!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-for-action">Call for Action<a href="#call-for-action" class="hash-link" aria-label="Direct link to Call for Action" title="Direct link to Call for Action">​</a></h2><p>LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li></ul>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <author>
            <name>Agnes Lin</name>
            <uri>https://github.com/agnes512</uri>
        </author>
        <category label="Quarterly update" term="Quarterly update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 December 2019 Milestone Update]]></title>
        <id>https://loopback.io/blog/december-2019-milestone</id>
        <link href="https://loopback.io/blog/december-2019-milestone"/>
        <updated>2020-01-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>It's 2️⃣0️⃣2️⃣0️⃣!</p><p>Happy New Year! Is the snow dancing outside of your window or is the sunshine bringing warmth and glow to the grass around you? No matter where you are, the LoopBack team is thankful for you being with us through 2019! It means a lot to us that you choose LoopBack for your applications and projects.</p><p>We're also excited to have <a href="https://github.com/derdeka" target="_blank" rel="noopener noreferrer">Denny</a>, <a href="https://github.com/dougal83" target="_blank" rel="noopener noreferrer">Douglas</a>, and <a href="https://github.com/achrinza" target="_blank" rel="noopener noreferrer">Rifa</a> as LoopBack maintainers! They've been actively helpful in our community. We appreciate all the contributions and great work. Welcome to the team!</p><p>Even though this past December was a short month due to the holidays, the list of the accomplished tasks is not short! Check out the sections below for the progress we made in each area:</p><ul><li><a href="#from-model-definition-to-rest-api">From Model Definition to REST API</a>: build a LB4 app with just models!</li><li><a href="#inclusion-of-related-models">Inclusion of Related Models</a>: enable custom scope for inclusion.</li><li><a href="#authentication">Authentication</a>: new added user profile factory and StrategyAdapter.</li><li><a href="#allowing-interceptor-to-be-invoked-based-on-the-source">@loopback/context Improvement</a>: invoke interceptors based on their callers.</li><li><a href="#improving-application-life-cycle-states">Application Life Cycle</a>: application states and the shutdown hooks.</li><li><a href="#openapi-enhancer-service">OpenAPI Enhancer Service</a>: contribute OpenAPI spec pieces from extensions.</li><li><a href="#improving-juggler-and-connectors">Improving Juggler and Connectors</a>: new property settings.</li><li><a href="#new-eslint-rules">New ESLint Rules</a>: applied new <code>@typescript-eslint</code> rules.</li><li><a href="#documentation-improvements">Documentation Improvements</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="from-model-definition-to-rest-api">From Model Definition to REST API<a href="#from-model-definition-to-rest-api" class="hash-link" aria-label="Direct link to From Model Definition to REST API" title="Direct link to From Model Definition to REST API">​</a></h2><p>Initially, LoopBack 4 required all artifacts (Model, Repository, and Controller classes) to be defined in TypeScript source files. Recently, we started to work on a declarative approach, where the Repository and Controller classes can be created dynamically at runtime (see <a href="https://github.com/strongloop/loopback-next/tree/master/packages/rest-crud" target="_blank" rel="noopener noreferrer"><code>@loopback/rest-crud</code></a> package).</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="discovering-models-and-building-rest-apis-at-runtime">Discovering Models and Building REST APIs at Runtime<a href="#discovering-models-and-building-rest-apis-at-runtime" class="hash-link" aria-label="Direct link to Discovering Models and Building REST APIs at Runtime" title="Direct link to Discovering Models and Building REST APIs at Runtime">​</a></h3><p>This month, we pushed this concept one step further and implemented a proof of concept showing how to dynamically build CRUD REST API for any SQL database table:</p><ol><li>Discover model definition from a database, build <code>ModelDefinition</code> object from the discovered schema</li><li>Define a model class from a <code>ModelDefinition</code> object</li><li>Define a CRUD repository class for the given model</li><li>Define a CRUD REST API controller class for the given model &amp; repository</li></ol><p>The demo application can be found in the pull request <a href="https://github.com/strongloop/loopback-next/pull/4235" target="_blank" rel="noopener noreferrer">loopback-next #4235</a>.</p><p>To make this scenario possible, we needed to make few improvements:</p><ul><li><a href="https://github.com/strongloop/loopback-datasource-juggler/pull/1807" target="_blank" rel="noopener noreferrer">loopback-datasource-juggler #1807</a> fixes TypeScript typings in <code>loopback-datasource-juggler</code> to make DataSource APIs like <code>discoverSchema</code> easier to consume using <code>await</code> keyword.</li><li><a href="https://github.com/strongloop/loopback-next/pull/4266" target="_blank" rel="noopener noreferrer">loopback-next #4266</a> adds a new API <code>defineModelClass</code> that builds a Model class constructor using the given base model (e.g. <code>Entity</code>) and the given <code>ModelDefinition</code>.</li></ul><p>As part of the experiment, we have again encountered the limitation of our REST layer when controllers registered after startup are not picked up. This feature is discussed in <a href="https://github.com/strongloop/loopback-next/issues/433" target="_blank" rel="noopener noreferrer">loopback-next #433</a>. Feel free to chime in and perhaps contribute a pull request if this use case is important for your projects.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="model-api-builder-package">Model API Builder Package<a href="#model-api-builder-package" class="hash-link" aria-label="Direct link to Model API Builder Package" title="Direct link to Model API Builder Package">​</a></h3><p>We introduced a new package <code>@loopback/model-api-builder</code> for building APIs from models. This package allows users to build repositories and controllers based on their models through their defined extensions. We also added <code>ModelApiBooter</code> that leverages Model API builders contributed via <code>ExtensionPoint</code>/<code>Extension</code> to implement the actual API building. See <a href="https://github.com/strongloop/loopback-next/tree/master/packages/model-api-builder" target="_blank" rel="noopener noreferrer">README</a> file for details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="inclusion-of-related-models">Inclusion of Related Models<a href="#inclusion-of-related-models" class="hash-link" aria-label="Direct link to Inclusion of Related Models" title="Direct link to Inclusion of Related Models">​</a></h2><p>We managed to finish the Inclusion of Related Models <a href="https://github.com/strongloop/loopback-next/issues/1352" target="_blank" rel="noopener noreferrer">MVP</a> in 2019! Check out the <a href="https://github.com/strongloop/loopback-next/issues/3585" target="_blank" rel="noopener noreferrer">Post MVP</a> if you'd like to contribute.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="enabling-inclusion-with-custom-scope">Enabling inclusion with custom scope<a href="#enabling-inclusion-with-custom-scope" class="hash-link" aria-label="Direct link to Enabling inclusion with custom scope" title="Direct link to Enabling inclusion with custom scope">​</a></h3><p>Traversing data through different relations is a common use case in real world. Take a nested relation as an example, a <code>Customer</code> might be interested in the <code>Shipment</code> status of their <code>Order</code>:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Customer</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'where\'s my order at'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  orders</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'order 1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      shipment</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        shipment_id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">123</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'order 2'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      shipment</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        shipment_id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">999</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In <a href="https://github.com/strongloop/loopback-next/pull/4263" target="_blank" rel="noopener noreferrer">PR #4263</a>, we enabled such traversal by allowing users to customize the <code>scope</code> field for their query filter. The above example can be achieved by the following query:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">customerRepo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  include</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      relation</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'orders'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      scope</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        include</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">relation</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'shipment'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>More use cases and examples are added to the page <a href="https://loopback.io/doc/en/lb4/HasMany-relation.html#query-multiple-relations" target="_blank" rel="noopener noreferrer">Query Multiple Relations</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="handling-navigational-properties-with-crud-operations">Handling navigational properties with CRUD operations<a href="#handling-navigational-properties-with-crud-operations" class="hash-link" aria-label="Direct link to Handling navigational properties with CRUD operations" title="Direct link to Handling navigational properties with CRUD operations">​</a></h3><p>It's convenient to traverse related models with relations. However, when it comes to operations such as creation and updating, navigational properties might cause some unexpected problems. In <a href="https://github.com/strongloop/loopback-next/pull/4148" target="_blank" rel="noopener noreferrer">PR #4148</a>, we decided to reject CRUD operations that contain any navigational properties. For example, the request to create a <code>Customer</code> with its <code>Address</code> will be rejected:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">customerRepo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'customer'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  address</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      street</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'nav property'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      city</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'should not be included'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="authentication">Authentication<a href="#authentication" class="hash-link" aria-label="Direct link to Authentication" title="Direct link to Authentication">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="user-profile-factory-interface">User Profile Factory Interface<a href="#user-profile-factory-interface" class="hash-link" aria-label="Direct link to User Profile Factory Interface" title="Direct link to User Profile Factory Interface">​</a></h3><p>We've added a <em>convenience</em> function interface named <a href="https://github.com/strongloop/loopback-next/blob/0630194539ba7971ca6c6579ebb9d986e6340a41/packages/authentication/src/types.ts#L34-L36" target="_blank" rel="noopener noreferrer"><code>UserProfileFactory&lt;U&gt;</code></a> to <code>@loopback/authentication</code>. Implement this interface with your own custom user profile factory function to convert your specific user model into a <a href="https://github.com/strongloop/loopback-next/blob/9e40e43bd1c9fe71155087341b0fc590ee9d67e3/packages/security/src/types.ts#L37-L42" target="_blank" rel="noopener noreferrer">UserProfile</a> model (used by both <code>@loopback/authentication</code> and <code>@loopback/authorization</code>).</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="strategyadapter-improvements">StrategyAdapter Improvements<a href="#strategyadapter-improvements" class="hash-link" aria-label="Direct link to StrategyAdapter Improvements" title="Direct link to StrategyAdapter Improvements">​</a></h3><p>The <code>StrategyAdapter</code> in <code>@loopback/authentication-passport</code> now takes in an additional argument <code>userProfileFactory</code> in its constructor. This argument is initialized with a default implementation of the <code>UserProfileFactory&lt;U&gt;</code> interface, mentioned above, and simply returns your specific user model as a user profile model. It is recommended that you implement your own user profile factory function to map a specific/minimal set of properties from your custom user model to the user profile model. Please see the <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/authentication-passport" target="_blank" rel="noopener noreferrer">updated documentation</a> for more details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="allowing-interceptor-to-be-invoked-based-on-the-source">Allowing Interceptor to Be Invoked Based on the Source<a href="#allowing-interceptor-to-be-invoked-based-on-the-source" class="hash-link" aria-label="Direct link to Allowing Interceptor to Be Invoked Based on the Source" title="Direct link to Allowing Interceptor to Be Invoked Based on the Source">​</a></h2><p>Some interceptors want to check the caller to decide if its logic should be applied. For example, an http access logger only cares about invocations from the rest layer to the first controller. In <a href="https://github.com/strongloop/loopback-next/pull/4168" target="_blank" rel="noopener noreferrer">PR #4168</a>, we added an option <code>source</code>, which can check the caller that invokes a method with interceptors. Check out the <a href="https://loopback.io/doc/en/lb4/Interceptors.html#source-for-an-invocation" target="_blank" rel="noopener noreferrer">Interceptors page</a> for relative documentation and examples.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="improving-application-life-cycle-states">Improving Application Life Cycle States<a href="#improving-application-life-cycle-states" class="hash-link" aria-label="Direct link to Improving Application Life Cycle States" title="Direct link to Improving Application Life Cycle States">​</a></h2><p>It’s often desirable for various types of artifacts to participate in the life cycles and perform related operations. In <a href="https://github.com/strongloop/loopback-next/pull/4145" target="_blank" rel="noopener noreferrer">PR #4145</a>, we improved the the check for application states and also add the shutdown hooks which allows graceful shutdown when the application is running inside a managed container such as Kubernetes Pods. Please check the related documentation and examples on the site <a href="https://loopback.io/doc/en/lb4/Life-cycle.html#application-states" target="_blank" rel="noopener noreferrer">Life cycle events and observers</a> to help you understand more about the LoopBack 4 application life cycle.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="openapi-enhancer-service">OpenAPI Enhancer Service<a href="#openapi-enhancer-service" class="hash-link" aria-label="Direct link to OpenAPI Enhancer Service" title="Direct link to OpenAPI Enhancer Service">​</a></h2><p>We've added a new extension point <code>OASEnhancerService</code> to allow the OpenAPI specification (short for OAS) contributions to a rest application. The feature originated from the need to add security schemes and policies to a LoopBack application's OAS. Now you can modify your application's OAS by creating and registering OAS enhancers.</p><p>A typical OAS enhancer implements interface <code>OASEnhancer</code> which has a string type <code>name</code> field and a function <code>modifySpec()</code>. For example, to modify the <code>info</code> field of an OAS, you can create an <code>InfoSpecEnhancer</code> as follows:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">bind</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/core'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  mergeOpenAPISpec</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  asSpecEnhancer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  OASEnhancer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  OpenApiSpec</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/openapi-v3'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">asSpecEnhancer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">InfoSpecEnhancer</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">implements</span><span class="token plain"> </span><span class="token class-name">OASEnhancer</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// give your enhancer a proper name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'info'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// the function to modify your OpenAPI specification and return a new one</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">modifySpec</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">spec</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> OpenApiSpec</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> OpenApiSpec </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> InfoPatchSpec </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      info</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">title</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'LoopBack Test Application'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> version</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1.0.1'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> mergedSpec </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">mergeOpenAPISpec</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">spec</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> InfoPatchSpec</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> mergedSpec</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then bind it to your application by <code>this.add(createBindingFromClass(InfoSpecEnhancer))</code>.</p><p>The OAS enhancer service organizes all the registered enhancers, and is able to apply one or all of them. You can check <a href="https://loopback.io/doc/en/lb4/Extending-OpenAPI-specification.html" target="_blank" rel="noopener noreferrer">"Extending OpenAPI specification"</a> documentation to learn more about creating and registering OAS enhancers, adding OAS enhancer service and applying its enhancers.</p><p>We will allow users to have token-based authentication in API Explorer in the near future. Please check our future milestone blogs.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="improving-juggler-and-connectors">Improving Juggler and Connectors<a href="#improving-juggler-and-connectors" class="hash-link" aria-label="Direct link to Improving Juggler and Connectors" title="Direct link to Improving Juggler and Connectors">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="improving-performance---persistdefaultvalues-model-property-setting">Improving Performance - persistDefaultValues Model Property Setting<a href="#improving-performance---persistdefaultvalues-model-property-setting" class="hash-link" aria-label="Direct link to Improving Performance - persistDefaultValues Model Property Setting" title="Direct link to Improving Performance - persistDefaultValues Model Property Setting">​</a></h3><p>We have added a new model-property property <code>persistDefaultValues</code>, which prevents a property value that matches the default from being written to the database when it set to <code>false</code>.</p><p>This is particularly useful when you have a model with a lot of properties or sub-properties whose values may be the default value, and these models run into thousands or maybe millions. Setting <code>persistDefaultValues</code> to <code>false</code> can drastically reduce the write time and size of the database. This setting is applicable to LB4 and LB3. Check the document on our site: <a href="https://loopback.io/doc/en/lb3/Model-definition-JSON-file.html#general-property-properties" target="_blank" rel="noopener noreferrer">Property</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="allowing-string-type-attribute-to-be-auto-generated-in-postgresql">Allowing String Type Attribute to Be Auto-generated in PostgreSQL<a href="#allowing-string-type-attribute-to-be-auto-generated-in-postgresql" class="hash-link" aria-label="Direct link to Allowing String Type Attribute to Be Auto-generated in PostgreSQL" title="Direct link to Allowing String Type Attribute to Be Auto-generated in PostgreSQL">​</a></h3><p><a href="https://loopback.io/doc/en/lb4/Database-migrations.html" target="_blank" rel="noopener noreferrer">Auto-migration</a> is a convenient tool to help you create relational database schemas based on definitions of your models. Typically, auto-migration would use the database's <em>default type</em> as the primary key type. For example, the default type of MySQL is integer, and the default type of MongoDB is string. We've added a field <code>useDefaultIdType</code> before that allows you to use other types than the default type when doing auto-migration. For example, for MySQL, the following setting allows you to have a string type primary key in tables:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'string'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  useDefaultIdType</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// generated: true -&gt; can not be set</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>However, sometimes users want to have auto-generate primary key with non-default type. For instance, a common use case is having <code>uuid</code> as the primary key in MySQL or PostgreSQL. We enable the auto-generated <code>uuid</code> with auto-migration for PostgreSQL. In short, the following setting enables auto-generated <code>uuid</code>:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'string'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  generated</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  useDefaultIdType</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// this is needed if this property is id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  postgresql</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dataType</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'uuid'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>By default, when the user wants to auto-generate string type properties in PostgreSQL, we use <code>uuid</code> and the function <code>uuid_generate_v4()</code>. It is possible to use other extensions and functions. Please check on the site for more details: <a href="https://loopback.io/doc/en/lb3/PostgreSQL-connector.html#discovery-and-auto-migration" target="_blank" rel="noopener noreferrer">PostgreSQL connector</a>.</p><p>This feature will be added to MySQL in the near future.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-eslint-rules">New ESLint Rules<a href="#new-eslint-rules" class="hash-link" aria-label="Direct link to New ESLint Rules" title="Direct link to New ESLint Rules">​</a></h2><p>We have enabled several new <code>@typescript-eslint</code> rules to detect more kinds of potential programming errors. These new rules will trigger a semver-major release of the package <code>@loopback/eslint-config</code>. Be prepared to handle new violations after upgrading.</p><p>List of new checks:</p><ul><li><a href="https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/return-await.md" target="_blank" rel="noopener noreferrer"><code>return-await</code></a></li><li><a href="https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-extra-non-null-assertion.md" target="_blank" rel="noopener noreferrer"><code>no-extra-non-null-assertion</code></a></li><li><a href="https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/prefer-nullish-coalescing.md" target="_blank" rel="noopener noreferrer"><code>prefer-nullish-coalescing</code></a></li><li><a href="https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/prefer-optional-chain.md" target="_blank" rel="noopener noreferrer"><code>prefer-optional-chain</code></a></li></ul><p>As part of this effort, we migrated our code base to use <a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#nullish-coalescing" target="_blank" rel="noopener noreferrer">nullish coalescing</a> and <a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#optional-chaining" target="_blank" rel="noopener noreferrer">optional chaining</a> operators.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation-improvements">Documentation Improvements<a href="#documentation-improvements" class="hash-link" aria-label="Direct link to Documentation Improvements" title="Direct link to Documentation Improvements">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="appsody--loopback-4-tutorial">Appsody / LoopBack 4 Tutorial<a href="#appsody--loopback-4-tutorial" class="hash-link" aria-label="Direct link to Appsody / LoopBack 4 Tutorial" title="Direct link to Appsody / LoopBack 4 Tutorial">​</a></h3><p><a href="https://appsody.dev/" target="_blank" rel="noopener noreferrer">Appsody</a> is an open source project that makes creating cloud native applications simple. It provides application stacks for open source runtimes and frameworks, which are pre-configured with cloud native capabilities for Kubernetes and Knative deployments.</p><p>In August, LoopBack was added as one of the application stacks in Appsody to provide a powerful solution to build open APIs and Microservices in TypeScript. The name of the stack is <a href="https://github.com/appsody/stacks/tree/master/incubator/nodejs-loopback" target="_blank" rel="noopener noreferrer">nodejs-loopback</a>.</p><p>Please refer to our tutorial <a href="https://loopback.io/doc/en/lb4/Appsody-LoopBack.html" target="_blank" rel="noopener noreferrer">Developing and Deploying LoopBack Applications with Appsody</a> for detailed instructions on how to use the Appsody CLI to:</p><ul><li>scaffold, run, stop, debug, and test a LoopBack 4 application locally</li><li>build and deploy the application to Kubernetes on the IBM Cloud</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-middleware-from-lb3-to-lb4">Migrating Middleware from LB3 to LB4<a href="#migrating-middleware-from-lb3-to-lb4" class="hash-link" aria-label="Direct link to Migrating Middleware from LB3 to LB4" title="Direct link to Migrating Middleware from LB3 to LB4">​</a></h3><p>We enhanced the documentation and updated the tutorial of migrating LB3 application on a new LB4 app. By mounting the LB3 middleware with a base Express application, the middleware can be shared by both LB3 and LB4 apps. For example, you can use REST APIs in your LB3 app with a new LB4 application, which will be helpful if you are a LB3 user and ready to move to LoopBack 4. Check out <a href="https://loopback.io/doc/en/lb4/migration-express-middleware.html" target="_blank" rel="noopener noreferrer">Migrating Express middleware</a> for the steps and examples.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-datasources-from-lb3-to-lb4">Migrating DataSources from LB3 to LB4<a href="#migrating-datasources-from-lb3-to-lb4" class="hash-link" aria-label="Direct link to Migrating DataSources from LB3 to LB4" title="Direct link to Migrating DataSources from LB3 to LB4">​</a></h3><p>To improve the documentation for migration from LB3 to LB4, we also added steps for migrating LB3 datasources into a LB4 project. LB3 datasources are compatible with LB4, so the datasource configuration remains the same between both. See <a href="https://loopback.io/doc/en/lb4/migration-datasources.html" target="_blank" rel="noopener noreferrer">Migrating Datasources</a> for steps on how to migrate your datasources.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="customizing-source-key-for-relations">Customizing Source Key for Relations<a href="#customizing-source-key-for-relations" class="hash-link" aria-label="Direct link to Customizing Source Key for Relations" title="Direct link to Customizing Source Key for Relations">​</a></h3><p>Typically, the primary key is used as the source key in relations (i.e joining two tables). In LB4, we use <code>keyFrom</code> and <code>keyTo</code> to define the source key and foreign key respectively. If you would like to use a non-id property as your source key, setting <code>keyFrom</code> would allow you to do so. Check the <a href="https://loopback.io/doc/en/lb4/HasMany-relation.html#relation-metadata" target="_blank" rel="noopener noreferrer">Relation Metadata</a> section for details.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="other">Other<a href="#other" class="hash-link" aria-label="Direct link to Other" title="Direct link to Other">​</a></h3><ul><li><p>We've added some links and refactored the <a href="https://loopback.io/doc/en/lb4/Using-components.html" target="_blank" rel="noopener noreferrer">Using Components</a> page to make the site better navigation.</p></li><li><p>We've updated the <a href="https://loopback.io/doc/en/lb4/Loopback-component-authorization.html" target="_blank" rel="noopener noreferrer">Authorization Component</a> page detailedly to match the latest code base.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="user-feedback-sessions">User Feedback Sessions<a href="#user-feedback-sessions" class="hash-link" aria-label="Direct link to User Feedback Sessions" title="Direct link to User Feedback Sessions">​</a></h2><p>Interested in joining a user feedback session? We love to hear your input and how you are using LoopBack. If you'd like to take part or have suggestions, please join our discussion in the <a href="https://github.com/strongloop/loopback-next/issues/4264" target="_blank" rel="noopener noreferrer">GitHub issue</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>If you're interested in what we're working on next, you can check out the <a href="https://github.com/strongloop/loopback-next/pull/4376" target="_blank" rel="noopener noreferrer">January Milestone</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>In 2020, we look forward to helping you and seeing you around! LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Agnes Lin</name>
            <uri>https://github.com/agnes512</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 2019 Year in Review]]></title>
        <id>https://loopback.io/blog/loopback-2019-review</id>
        <link href="https://loopback.io/blog/loopback-2019-review"/>
        <updated>2019-12-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>As 2019 draws to a close, we're continuing our annual tradition of celebrating the hard work that the <a href="http://loopback.io/" target="_blank" rel="noopener noreferrer">LoopBack</a> team achieved in the past year. As you might expect, developing LoopBack 4 was the main focus, with  events, updates and "how to" content adding flavour to the mix. That focus has resulted in a lot of improvements and features for the framework, as well as quality interaction with the LoopBack community. </p><p>Grab your seasonal beverage of choice, whether hot or cold, and read on for a trip down 2019 memory lane!  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="github-activity-and-downloads">GitHub Activity and Downloads<a href="#github-activity-and-downloads" class="hash-link" aria-label="Direct link to GitHub Activity and Downloads" title="Direct link to GitHub Activity and Downloads">​</a></h3><p>2019 began with LoopBack just past the 12,000 star count on GitHub, and wrapped the year up at more than <a href="https://github.com/strongloop/loopback" target="_blank" rel="noopener noreferrer">13k</a>. LoopBack 4 began the year at more than 1260 and practically doubled it by year's end at more than <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">2400</a>. Meanwhile, <a href="https://npm-stat.com/charts.html?package=@loopback/core" target="_blank" rel="noopener noreferrer">npmjs.com</a> shows 432,800+ downloads of LB4 since January 1 - quite a jump from the prior year's 141,948. We're excited to see all of this activity as LoopBack downloads continue to grow. </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="loopback-winner-of-2019-api-award-for-api-middleware">LoopBack, Winner of 2019 API Award for API Middleware<a href="#loopback-winner-of-2019-api-award-for-api-middleware" class="hash-link" aria-label="Direct link to LoopBack, Winner of 2019 API Award for API Middleware" title="Direct link to LoopBack, Winner of 2019 API Award for API Middleware">​</a></h3><p>Congratulations again to LoopBack for earning the 2019 API Award for the “<a href="https://strongloop.com/strongblog/loopback-2019-api-award-api-middleware/" target="_blank" rel="noopener noreferrer">Best in API Middleware</a>” category. These awards were presented at the 2019 API Awards Ceremony during API World 2019, celebrating the technical innovation, adoption, and reception in the API &amp; Microservices industries and use by a global developer community. Raymond Feng, co-creator and architect for LoopBack, presented the team to receive the award.</p><p>Well done, LoopBack team!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="loopback-4-features-and-previews">LoopBack 4 Features and Previews<a href="#loopback-4-features-and-previews" class="hash-link" aria-label="Direct link to LoopBack 4 Features and Previews" title="Direct link to LoopBack 4 Features and Previews">​</a></h3><p>With the team focusing so much on enhancing and imporving LoopBack 4, there were a lot of updates. In terms of the features, here are the highlights:</p><ul><li><p>Authentication &amp; Authorization</p><ul><li>Basic support for authentication and authorization. The team released a new major version of @loopback/authentication, and a new @loopback/security layer.</li><li><a href="https://loopback.io/doc/en/lb4/Loopback-component-authentication.html" target="_blank" rel="noopener noreferrer">Authentication docs</a>.</li><li><a href="https://loopback.io/doc/en/lb4/Loopback-component-authorization.html" target="_blank" rel="noopener noreferrer">Authorization docs</a>.</li></ul></li><li><p>Model relations      </p><ul><li>The team added <a href="https://loopback.io/doc/en/lb4/hasOne-relation.html" target="_blank" rel="noopener noreferrer">hasOne relation https</a>.</li><li>The team completed the MVP for the "<a href="https://strongloop.com/strongblog/inclusion-of-related-models/" target="_blank" rel="noopener noreferrer">inclusion of related models</a>" story. </li></ul></li><li><p>Architectural improvements</p><ul><li><a href="https://loopback.io/doc/en/lb4/Interceptors.html" target="_blank" rel="noopener noreferrer">Interceptors</a>.</li><li><a href="https://loopback.io/doc/en/lb4/Life-cycle.html" target="_blank" rel="noopener noreferrer">lifecycle events</a>.</li><li>Enhancement in extension/extension points.</li></ul></li><li><p><a href="https://strongloop.com/strongblog/going-cloud-native-with-loopback-4/" target="_blank" rel="noopener noreferrer">Going Cloud Native</a></p><ul><li>Added to Appsody/Kabanero application stack.</li><li>Deployment guide to Kubernetes clusters.</li><li>Adding observability in microservices, e.g. added health/metrics/tracing features.</li></ul></li><li><p>Migration / Migration guide</p><ul><li><a href="https://loopback.io/doc/en/lb4/migration-overview.html" target="_blank" rel="noopener noreferrer">Migration guide</a>.</li><li><a href="https://strongloop.com/strongblog/import-loopback-3-models-to-loopback-4/" target="_blank" rel="noopener noreferrer">Added tooling to import LB3 models</a>.</li></ul></li><li><p>Strengthen the core modules as a platform for building large-scale Node.js projects</p><ul><li>Get the details in the <a href="https://loopback.io/doc/en/lb4/core-tutorial.html" target="_blank" rel="noopener noreferrer">tutorial series</a>.</li></ul></li><li><p>Enhancements in connectors</p><ul><li>Support partitioned database in <a href="https://github.com/strongloop/loopback-connector-cloudant/blob/master/doc/partitioned-db.md" target="_blank" rel="noopener noreferrer">cloudant connector</a>.</li><li>Support decimal128 type in mongodb connector.</li></ul></li><li><p>Update Example Shopping app to showcase the features we’ve added</p></li><li><p>Experimenting with Plain javascript programming in LoopBack 4: <a href="https://strongloop.com/strongblog/loopback4-javascript-experience/" target="_blank" rel="noopener noreferrer">https://strongloop.com/strongblog/loopback4-javascript-experience/</a></p></li><li><p>Improvement in documentation</p></li><li><p>Enabled Node.js 12 support, Added latest TypeScript 3.7 support, switch to ESLint, etc.</p></li></ul><p>Want a bit more detail on some updates? Check out "<a href="https://strongloop.com/strongblog/loopback4-javascript-experience/" target="_blank" rel="noopener noreferrer">Experimenting with Plain JavaScript Programming in LoopBack 4</a>" by Hage Yaapa (which looks at functionality following a spike to enable LoopBack 4 development using JavaScript), "<a href="https://strongloop.com/strongblog/loopback-4-authentication-updates/" target="_blank" rel="noopener noreferrer">What's New in LoopBack 4 Authentication 2.0</a> by Dominique Emond, and "<a href="https://strongloop.com/strongblog/inclusion-of-related-models/" target="_blank" rel="noopener noreferrer">LoopBack 4 Offers Inclusion of Related Models</a>" by Agnes Lin. </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-loopback-4-web-site-updates">The LoopBack 4 Web Site Updates<a href="#the-loopback-4-web-site-updates" class="hash-link" aria-label="Direct link to The LoopBack 4 Web Site Updates" title="Direct link to The LoopBack 4 Web Site Updates">​</a></h3><p>The <a href="https://loopback.io/" target="_blank" rel="noopener noreferrer">LoopBack</a> web site was changed from the LoopBack 3 look feel to the LB4 theme that was launched previously.</p><p>The team also refreshed the "Who's using LoopBack" section and added more testimonial from the users. If your company wants to be highlighted as the LoopBack user on our web site, please see <a href="https://github.com/strongloop/loopback-next/issues/3047" target="_blank" rel="noopener noreferrer">strongloop/loopback-next#3047</a> for details.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="increased-transparency-with-milestone-updates">Increased Transparency with Milestone Updates<a href="#increased-transparency-with-milestone-updates" class="hash-link" aria-label="Direct link to Increased Transparency with Milestone Updates" title="Direct link to Increased Transparency with Milestone Updates">​</a></h3><p>We would like to provide more visibility to you (our users) on what we have accomplished and our plans, so we started to create blog posts to keep everyone up-to-date. We always welcome feedback!</p><ul><li><p>Milestone github issues to show our plan for the month (github ticket with <a href="https://github.com/strongloop/loopback-next/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+is%3Aopen+label%3A%22Monthly+Milestone%22+" target="_blank" rel="noopener noreferrer">"Monthly Milestone" label</a>.
</p></li><li><p>Monthly milestone and quarter summaries on what we have accomplished (you can see a summary of what we posted in 2019 further into this post).</p></li><li><p>To go even further, we start our planning on milestone and a quarterly <a href="https://github.com/strongloop/loopback-next/blob/master/docs/ROADMAP.md" target="_blank" rel="noopener noreferrer">roadmap</a> in pull requests. Look for pull requests with "Monthly Milestone" and "Roadmap" labels.</p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="events-and-community-outreach">Events and Community Outreach<a href="#events-and-community-outreach" class="hash-link" aria-label="Direct link to Events and Community Outreach" title="Direct link to Events and Community Outreach">​</a></h3><p>The LoopBack team managed to join some events throughout the year!</p><p>DEVELOPERWEEK 2019 ran from February 20-24, and LoopBack architect <a href="https://developerweek2019.sched.com/speaker/raymond_feng.1yyfcnn4" target="_blank" rel="noopener noreferrer">Raymond Feng</a> covered "Speed and Scale: Building APIs with Node.js, TypeScript and LoopBack."</p><p>The Toronto Cloud Integration Meetup group held a <a href="https://strongloop.com/strongblog/watch-meetup-quickly-build-apis-with-loopback/" target="_blank" rel="noopener noreferrer">Meetup in Toronto</a> in February with the topic "Quickly Build APIs with Existing Services and Data Using LoopBack!” Janny Hou explained what LoopBack is, what you can do with it, and the rationale behind the rewrite of the framework. Biniam Admikew demonstrated how how easy it is to expose REST API from your database with just a few steps. Jamil Spain provided an additional demo while also taking care of capturing the meetup on video. Check out the details and video <a href="https://strongloop.com/strongblog/watch-meetup-quickly-build-apis-with-loopback/" target="_blank" rel="noopener noreferrer">here</a>.</p><ul><li><p>LoopBack QuickLab - <a href="https://www.ibm.com/events/think/code/" target="_blank" rel="noopener noreferrer">Code@THINK</a>, NodeConf.eu and Node+JSInteractive.</p></li><li><p><a href="https://strongloop.com/strongblog/hackerjs-meetup-may-8/" target="_blank" rel="noopener noreferrer">HackerJS Meetup</a> in California. Raymond Feng shared his cotent from DEVELOPER WEEK 2019 with this meetup group.</p></li><li><p>TechConnect (internal IBM event at the Canada Lab in Markham) - May 2019</p></li></ul><p>Raymond also presented at a meetup in Santa Clara in May. "Building APIs at Warp Speed with LoopBack "</p><p>As mentioned earlier, Raymond Feng attended the 2019 API Awards Ceremony during API World 2019, in October to accept the 2019 API Award for the “Best in API Middleware” category.  </p><p>In November, the LoopBack team attended CASCONxEVOKE. As one of Canada’s largest combined academic, research and developer conferences, it offered over 150 speakers to over 1,500 attendees. Diana Lau provided an overview of the LoopBack booth and a workshop. Learn more <a href="https://strongloop.com/strongblog/cascon-evoke-2019/" target="_blank" rel="noopener noreferrer">here</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="loopback-3-lts-support">LoopBack 3 LTS Support<a href="#loopback-3-lts-support" class="hash-link" aria-label="Direct link to LoopBack 3 LTS Support" title="Direct link to LoopBack 3 LTS Support">​</a></h3><p>In March, the LoopBack team announced LoopBack 3 was receiving an extended long term support to provide more time for users to move to the new version which is a different programming model and language. The revised LTS start is December 2019 and the revised end of life is December 2020.</p><p>Check out the timeline and some frequently asked questions <a href="https://strongloop.com/strongblog/lb3-extended-lts/" target="_blank" rel="noopener noreferrer">here</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="more-loopback-how-to-content">More LoopBack How-To Content<a href="#more-loopback-how-to-content" class="hash-link" aria-label="Direct link to More LoopBack How-To Content" title="Direct link to More LoopBack How-To Content">​</a></h3><p>While much of their focus was on improving LoopBack 4, the team also shared insight into using the framework as well. Here's a look back!</p><p>Diana Lau shared a two part series about learning LoopBack 4 Interceptors. In the first part she looked at <a href="https://strongloop.com/strongblog/loopback4-interceptors-part1/" target="_blank" rel="noopener noreferrer">Global Interceptors</a>, what they are and how to use them. In Part 2 she looked at <a href="https://strongloop.com/strongblog/loopback4-interceptors-part2/" target="_blank" rel="noopener noreferrer">Method Level and Class Level Interceptors</a>,
building an application that validates the incoming request using class level and method level interceptors. </p><p>Miroslav Bajtoš announced and demonstrated preview version of a tool automating migration of models from LoopBack 3 to LoopBack 4. Check it out <a href="https://strongloop.com/strongblog/import-loopback-3-models-to-loopback-4/" target="_blank" rel="noopener noreferrer">here</a>. In a similar vein, Nora Abdelgadir shared a way to mount your LoopBack 3 applications in a LoopBack 4 project in <a href="https://strongloop.com/strongblog/migrate-from-loopback-3-to-loopback-4/" target="_blank" rel="noopener noreferrer">"Migrating from LoopBack 3 to LoopBack 4"</a>.</p><p>Wenbo Sun provided a 7-part series called "Building an Online Game With LoopBack 4". The aim of the series is to help you learn LoopBack 4 and how to use it to easily build your own API and web project. Wenbo did so by highlighting a new project he was working on: an online web text-based adventure game. Check the series out <a href="https://strongloop.com/strongblog/building-online-game-with-loopback-4-pt1/" target="_blank" rel="noopener noreferrer">here</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="anything-else">Anything Else?<a href="#anything-else" class="hash-link" aria-label="Direct link to Anything Else?" title="Direct link to Anything Else?">​</a></h3><p>For more details about work on LoopBack, the best resource is the monthly milestone updates. The LoopBack team outlined their progress with these updates, often explaining hurdles or rationale for changes and tweaks. Check them out below:</p><ul><li><a href="https://strongloop.com/strongblog/january-2019-milestone/" target="_blank" rel="noopener noreferrer">January 2019 Milestone Update</a></li><li><a href="https://strongloop.com/strongblog/february-2019-milestone/" target="_blank" rel="noopener noreferrer">February 2019 Milestone Update</a></li><li><a href="https://strongloop.com/strongblog/march-2019-milestone/" target="_blank" rel="noopener noreferrer">March 2019 Milestone Update</a></li><li><a href="https://strongloop.com/strongblog/april-2019-milestone/" target="_blank" rel="noopener noreferrer">April 2019 Milestone Update</a></li><li><a href="https://strongloop.com/strongblog/may-2019-milestone/" target="_blank" rel="noopener noreferrer">May 2019 Milestone Update</a></li><li><a href="https://strongloop.com/strongblog/june-2019-milestone/" target="_blank" rel="noopener noreferrer">June 2019 Milestone Update</a></li><li><a href="https://strongloop.com/strongblog/july-2019-milestone/" target="_blank" rel="noopener noreferrer">July 2019 Milestone Update</a></li><li><a href="https://strongloop.com/strongblog/august-2019-milestone/" target="_blank" rel="noopener noreferrer">August 2019 Milestone Update</a></li><li><a href="https://strongloop.com/strongblog/september-2019-milestone/" target="_blank" rel="noopener noreferrer">September 2019 Milestone Update</a></li><li><a href="https://strongloop.com/strongblog/october-2019-milestone/" target="_blank" rel="noopener noreferrer">October 2019 Milestone Update</a></li><li><a href="https://strongloop.com/strongblog/november-2019-milestone/" target="_blank" rel="noopener noreferrer">November 2019 Milestone Update</a></li><li>December 2019 Milestone Update - coming soon!</li></ul><p>You can also follow LoopBack's progress throughout the year in the <a href="https://strongloop.com/strongblog/loopback-4-2019-q1-overview/" target="_blank" rel="noopener noreferrer">LoopBack 4 2019 Q1 Overview</a>, <a href="https://strongloop.com/strongblog/loopback-4-2019-q2-overview/" target="_blank" rel="noopener noreferrer">LoopBack 4 2019 Q2 Overview</a>, and <a href="https://strongloop.com/strongblog/loopback-4-2019-q3-overview/" target="_blank" rel="noopener noreferrer">LoopBack 4 2019 Q3 Overview</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h3><p><a href="https://github.com/strongloop/loopback-next/issues/1849" target="_blank" rel="noopener noreferrer">Migration guide work</a> began this year and it will continue to be the focus. The goal is to add some tooling around migration to make the migration process from LB3 to LB4 easier. If you have an existing LoopBack 3 application, take a look at the migration guide and gives us feedback!</p><p>The LB team will also work on feature parity that is needed for LB3 to LB4 migration, and the developer experience to make users' lives easier. They would like to take some time in each milestone to address some of the pain points that users mentioned. The team is also looking at innovation around cloud native deployment, database integration, as well as messaging/event driven style APIs. </p><p>Finally, look for improved documentation that address user questions, and more up-to-date docs that better reflect the quickly-changing code base.</p><p>Keep an eye out to see the developments in the new year!</p>]]></content>
        <author>
            <name>Dave Whiteley</name>
            <uri>https://github.com/DaveYVR</uri>
        </author>
        <category label="community" term="community"/>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 November 2019 Milestone Update]]></title>
        <id>https://loopback.io/blog/november-2019-milestone</id>
        <link href="https://loopback.io/blog/november-2019-milestone"/>
        <updated>2019-12-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>The LoopBack team greeted November with the CASCONxEVOKE conference in Toronto. CASCONxEVOKE is one of Canada's largest combined academic, research and developer conferences. As its speakers and attendees, we had a booth with posters to advocate LoopBack, and also delivered a workshop about developing extensible LoopBack applications. You can check this <a href="https://strongloop.com/strongblog/cascon-evoke-2019/" target="_blank" rel="noopener noreferrer">blog</a> for more details. </p><p>For Q4 achievements, we finished 3 epics this month: <a href="https://github.com/strongloop/loopback-next/issues/1352" target="_blank" rel="noopener noreferrer">Inclusion of related models</a>, <a href="https://github.com/strongloop/loopback-next/issues/1054" target="_blank" rel="noopener noreferrer">Deployment guide in a cloud native environment</a> and <a href="https://github.com/strongloop/loopback-connector-cloudant/issues/219" target="_blank" rel="noopener noreferrer">Support partitioned database in Cloudant connector</a>, and significantly progressed in the Migration, Authentication &amp; Authorization epics.</p><p>Keep reading to learn about the recently added features!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="inclusion-of-related-models">Inclusion of Related Models<a href="#inclusion-of-related-models" class="hash-link" aria-label="Direct link to Inclusion of Related Models" title="Direct link to Inclusion of Related Models">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="running-repository-tests-for-cloudant">Running Repository Tests for Cloudant<a href="#running-repository-tests-for-cloudant" class="hash-link" aria-label="Direct link to Running Repository Tests for Cloudant" title="Direct link to Running Repository Tests for Cloudant">​</a></h3><p>To ensure our relations test suites work against real databases, we've been adding different kinds of databases to our test environment. This month we added a new repository<code>@loopback/test-repository-cloudant</code> to run shared CRUD and relation tests on Cloudant. You can also set up docker instance easily with our setup script to test out your application. See <a href="https://github.com/strongloop/loopback-next/pull/3968" target="_blank" rel="noopener noreferrer">PR#3968</a> for more details and try it out if you're interested.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="verifying-relation-type-in-metadata">Verifying Relation Type in Metadata<a href="#verifying-relation-type-in-metadata" class="hash-link" aria-label="Direct link to Verifying Relation Type in Metadata" title="Direct link to Verifying Relation Type in Metadata">​</a></h3><p>Besides supporting inclusion in queries, we now also set constraints to CRUD operations with navigational properties to avoid unexpected errors. For example, if you try to create an instance of TodoList with all Todos it has through the hasMany relation such as:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">todoListRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'my list 1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    todos</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'todo 1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> todoListId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'todo 1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> todoListId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// incorrect foreign key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Such requests might be problematic because they might contain incorrect primary key or foreign key. Therefore, with such concerns, request contains navigational properties will be rejected. <a href="https://github.com/strongloop/loopback-next/pull/4148" target="_blank" rel="noopener noreferrer">PR#4148</a> implements the verification for CRUD methods. </p><p>Additionally, in order to ensure that the correct metadata type is being using when it is resolved, we've added tests in <a href="https://github.com/strongloop/loopback-next/pull/4046/" target="_blank" rel="noopener noreferrer">PR#4046</a> and simplified our test setup.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="migration-from-loopback-3">Migration from LoopBack 3<a href="#migration-from-loopback-3" class="hash-link" aria-label="Direct link to Migration from LoopBack 3" title="Direct link to Migration from LoopBack 3">​</a></h2><p>We keep incrementally building the migration guide for LoopBack 3 users upgrading to LoopBack 4. In November, we added content for <a href="https://loopback.io/doc/en/lb4/migration-models-relations.html" target="_blank" rel="noopener noreferrer">migrating model relations</a>. We explained how to convert a relation defined in LoopBack 3 model JSON files into corresponding LoopBack 4 artifacts.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="authentication-and-authorization">Authentication and Authorization<a href="#authentication-and-authorization" class="hash-link" aria-label="Direct link to Authentication and Authorization" title="Direct link to Authentication and Authorization">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="adding-authorization-example-and-tutorial">Adding Authorization Example and Tutorial<a href="#adding-authorization-example-and-tutorial" class="hash-link" aria-label="Direct link to Adding Authorization Example and Tutorial" title="Direct link to Adding Authorization Example and Tutorial">​</a></h3><p>In <code>loopback4-example-shopping</code>, the <code>/users/{userId}/orders</code> endpoints are now secured by an authorization system. When a request comes in, the authentication module resolves the user profile and passes it to the authorization module. Then an interceptor retrieves the metadata from the decorated endpoint, and invokes registered authorizers to determine whether the user can perform the operation. We also have a documentation <a href="https://github.com/strongloop/loopback-next/pull/4185" target="_blank" rel="noopener noreferrer">PR</a> in progress that explains the usage of authorization module.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="refactoring-customer-credentials">Refactoring Customer Credentials<a href="#refactoring-customer-credentials" class="hash-link" aria-label="Direct link to Refactoring Customer Credentials" title="Direct link to Refactoring Customer Credentials">​</a></h3><p>In LoopBack 3.x, we store users' passwords together with user data in the same model (table), which opens a lot of security vulnerabilities to deal with. For example, when returning user data in HTTP response, the password property must be filtered out and when searching for users, the password must be excluded from the query.</p><p>Our example <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer">Shopping App</a> used to store user credentials together with other profile information too. In November, we refactored the domain model of our example app and extracted the password property into a new model <code>UserCredentials</code>. Beside the immediate benefits in increased security, this new domain model makes it easier to implement additional features in the future. For example: 2-factor authentication, and the password validation rule forbiding repeated use of the same password.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="context-improvement">Context Improvement<a href="#context-improvement" class="hash-link" aria-label="Direct link to Context Improvement" title="Direct link to Context Improvement">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="inspect">Inspect<a href="#inspect" class="hash-link" aria-label="Direct link to Inspect" title="Direct link to Inspect">​</a></h3><p>In <a href="https://github.com/strongloop/loopback-next/pull/4193" target="_blank" rel="noopener noreferrer">PR#4193</a> we've improved the context/binding with an <code>inspect()</code> method for metadata dumping. <code>ctx.inspect()</code> can now be used to print out the context hierarchy in JSON. This is useful for troubleshooting and rendering in UI. An example snippet of calling the new function:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> ctx </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Context</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">inspect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="choosing-the-right-scope">Choosing the Right Scope<a href="#choosing-the-right-scope" class="hash-link" aria-label="Direct link to Choosing the Right Scope" title="Direct link to Choosing the Right Scope">​</a></h3><p>When creating a binding, you can configure the <code>scope</code> as <code>SINGLETON</code> or <code>TRANSIENT</code>. To know more about how to make the right choice based on requests, see the new documentation in <a href="https://loopback.io/doc/en/lb4/Binding.html#choose-the-right-scope" target="_blank" rel="noopener noreferrer">Choosing the right scope</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="service-decorator">@service Decorator<a href="#service-decorator" class="hash-link" aria-label="Direct link to @service Decorator" title="Direct link to @service Decorator">​</a></h3><p>A new shortcut decorator <code>@service</code> was introduced to inject an instance of a given service from a binding that matches the service interface. You can inject a service as follows:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyController</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">service</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MyService</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> myService</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> MyService</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>More details of its usage and explanation could be found in <a href="https://loopback.io/doc/en/lb4/Decorators_service.html" target="_blank" rel="noopener noreferrer">Service Decorator</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="receive-information-of-current-binding">Receive Information of Current Binding<a href="#receive-information-of-current-binding" class="hash-link" aria-label="Direct link to Receive Information of Current Binding" title="Direct link to Receive Information of Current Binding">​</a></h3><p><a href="https://github.com/strongloop/loopback-next/pull/4121" target="_blank" rel="noopener noreferrer">PR#4121</a> allows a class or provider to receive its own binding information as follow:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">HelloController</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// If the `bindingKey` is not specified, </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// the current binding from the resolution session is injected.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">binding</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> myBinding</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Binding</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token builtin">string</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/hello'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">greet</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Hello from </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation keyword" style="color:#00009f">this</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">myBinding</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">key</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="application-life-cycle">Application Life Cycle<a href="#application-life-cycle" class="hash-link" aria-label="Direct link to Application Life Cycle" title="Direct link to Application Life Cycle">​</a></h2><p>In <a href="https://github.com/strongloop/loopback-next/pull/4145" target="_blank" rel="noopener noreferrer">PR#4145</a> we improved states and introduced graceful shutdown for LoopBack applications.</p><p>Now an application's states are classified as <em>stable</em> or <em>in process</em>. Operations can only be called at a stable state. Calling a different operation in an in-process state will throw an error. See <a href="https://loopback.io/doc/en/lb4/Life-cycle.html#application-states" target="_blank" rel="noopener noreferrer">Application states</a> for details.</p><p>The shutdown of application is now controllable by specifying an array of signals in the configuration. For example:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> app </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Application</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  shutdown</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    signals</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'SIGINT'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Schedule some work such as a timer or database connection</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> app</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>When the application is running inside a terminal, it can respond to <code>Ctrl+C</code>, which sends <code>SIGINT</code> to the process. The application calls <code>stop</code> first before it exits with the captured signal. This gives you a better control when the LoopBack 4 application is running inside a managed container, such as a Kubernetes Pod. See <a href="https://loopback.io/doc/en/lb4/Life-cycle.html#graceful-shutdown" target="_blank" rel="noopener noreferrer">graceful-shutdown</a> for more details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="partitioned-database-in-cloudant">Partitioned Database in Cloudant<a href="#partitioned-database-in-cloudant" class="hash-link" aria-label="Direct link to Partitioned Database in Cloudant" title="Direct link to Partitioned Database in Cloudant">​</a></h2><p>We've finished the <a href="https://github.com/strongloop/loopback-connector-cloudant/issues/219" target="_blank" rel="noopener noreferrer">Partitioned Database Epic</a> in <code>loopback-connector-cloudant</code> by supporting partitioned index, find, and property definition.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="creating-partitioned-index">Creating Partitioned Index<a href="#creating-partitioned-index" class="hash-link" aria-label="Direct link to Creating Partitioned Index" title="Direct link to Creating Partitioned Index">​</a></h3><p>To create partitioned indexes as the secondary optimization for Cloudant query, you can add index entry in your model configuration with <code>{partitioned: true}</code> like:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token maybe-class-name">Product</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> db</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">define</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'Product'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token known-class-name class-name">String</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">forceId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">indexes</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// create a partitioned index for frequently queried</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// fields like `name`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">'product_name_index'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">partitioned</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">keys</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Learn more about its signature and usage in <a href="https://github.com/strongloop/loopback-connector-cloudant/blob/master/doc/partitioned-db.md#adding-partitioned-index" target="_blank" rel="noopener noreferrer">Adding Partitioned Index</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="partitioned-find">Partitioned Find<a href="#partitioned-find" class="hash-link" aria-label="Direct link to Partitioned Find" title="Direct link to Partitioned Find">​</a></h3><p>When the partition key is discovered in the query's options or filter, <code>Model.find()</code> will invoke the underlying partitioned find to optimize the query. Here are two examples:</p><p>Specifying the partition key in the <code>options</code>: <code>Product.find({where: {name: 'food'}}, {partitionKey: 'toronto'});</code></p><p>Or defining a model property as the partition key field. So that the find method could infer the partition key from the query filter:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Define `city` as the partition key field in model `Product`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token maybe-class-name">Product</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> db</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">define</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'Product'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token known-class-name class-name">String</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token known-class-name class-name">String</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// partition key field</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">city</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token known-class-name class-name">String</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">isPartitionKey</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// `Product.find()` will infer the partition key `toronto`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// from the filter</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token maybe-class-name">Product</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">where</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">city</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'toronto'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'food'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can learn more about the partitioned query in <a href="https://github.com/strongloop/loopback-connector-cloudant/blob/master/doc/partitioned-db.md#defining-partitioned-property-and-performing-partitioned-find" target="_blank" rel="noopener noreferrer">Performing Partitioned Find</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="build-improvements">Build Improvements<a href="#build-improvements" class="hash-link" aria-label="Direct link to Build Improvements" title="Direct link to Build Improvements">​</a></h2><p>We upgraded the version of TypeScript to 3.7.2. An application created by the new CLI module <code>^@loopback/cli@1.26.0</code> is able to use the latest TypeScript features such as <a href="https://github.com/strongloop/loopback-next/pull/4212" target="_blank" rel="noopener noreferrer">optional chaining</a> and <a href="https://github.com/strongloop/loopback-next/pull/4213" target="_blank" rel="noopener noreferrer">nullish coalescing</a>. A list of new features can be found in <a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html" target="_blank" rel="noopener noreferrer">TypeScript's release blog</a>.</p><p>Now, in the new generated application, the json configuration files are renamed from <code>*.datasource.json</code> to <code>*.datasource.config.json</code> to avoid generating declarations. Explanations see <a href="https://github.com/microsoft/TypeScript/issues/34761" target="_blank" rel="noopener noreferrer">TypeScript issue#34761</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="bug-fixes">Bug Fixes<a href="#bug-fixes" class="hash-link" aria-label="Direct link to Bug Fixes" title="Direct link to Bug Fixes">​</a></h2><ul><li><p><code>lb4 discover</code> should generate the correct type for property definition. Fixed by <a href="https://github.com/strongloop/loopback-next/pull/4143" target="_blank" rel="noopener noreferrer">PR#4143</a>.</p></li><li><p><code>@param.path.&lt;primitive_type&gt;</code> generated with <code>lb4 relation</code> considers Wrapper datatypes. Also fixed by <a href="https://github.com/strongloop/loopback-next/pull/4143" target="_blank" rel="noopener noreferrer">PR#4143</a>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation-improvements">Documentation Improvements<a href="#documentation-improvements" class="hash-link" aria-label="Direct link to Documentation Improvements" title="Direct link to Documentation Improvements">​</a></h2><ul><li><p>We've added a series of tutorials to illustrate how LoopBack can be used as an enabler to build large-scale Node.js applications. If you want to have a deeper understanding of LoopBack and/or to build an application with great flexibility and extensibility, don't miss <a href="https://loopback.io/doc/en/lb4/core-tutorial.html" target="_blank" rel="noopener noreferrer">this tutorial series</a>!</p></li><li><p>In <code>loopback-component-explorer</code>, we added a note in the <a href="https://github.com/strongloop/loopback-component-explorer#a-note-on-swagger-ui-vulnerabilities" target="_blank" rel="noopener noreferrer">README file</a> to explain why the module is not affected by the security vulnerabilities in <code>swagger-ui</code>.</p></li><li><p>We've added "Boot" and "Advanced Topics" to the core tutorial in <a href="https://loopback.io/doc/en/lb4/core-tutorial-part10.html" target="_blank" rel="noopener noreferrer">Advanced Recipes</a> and <a href="https://loopback.io/doc/en/lb4/core-tutorial-part9.html" target="_blank" rel="noopener noreferrer">Discover and load artifacts by convention</a>.</p></li><li><p>We've updated the steps of <a href="https://loopback.io/doc/en/lb4/todo-list-tutorial-relations.html" target="_blank" rel="noopener noreferrer">creating model relations</a> to use <code>lb4 relation</code> command in the TodoList tutorial.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="miscellaneous">Miscellaneous<a href="#miscellaneous" class="hash-link" aria-label="Direct link to Miscellaneous" title="Direct link to Miscellaneous">​</a></h2><ul><li><p>We added the <a href="https://loopback.io/doc/en/lb3/OpenAPI-connector.html" target="_blank" rel="noopener noreferrer">OpenAPI</a> and <a href="https://loopback.io/doc/en/lb3/gRPC-connector.html" target="_blank" rel="noopener noreferrer">gRPC</a> connectors to be a part of our available connectors in <a href="https://github.com/strongloop/loopback-workspace/pull/558" target="_blank" rel="noopener noreferrer">PR#558</a> and <a href="https://github.com/strongloop/loopback.io/pull/906" target="_blank" rel="noopener noreferrer">PR#906</a>. Now, when a user calls <code>lb4 datasource</code>, they will have OpenAPI and gRPC as options for the connector.</p></li><li><p>The <code>lb4 update</code> command runs against a LoopBack 4 project and checks dependencies against the installed <code>@loopback/cli</code>. Optionally, it updates the dependencies in <code>package.json</code>. Details can be found on page <a href="https://loopback.io/doc/en/lb4/Update-generator.html" target="_blank" rel="noopener noreferrer">Update generator</a>.</p></li><li><p>In <a href="https://github.com/strongloop/loopback-next/issues/3770" target="_blank" rel="noopener noreferrer">spike story#3770</a> we came up with a plan to support querying with nested filter in the API Explorer by re-designing the <code>@param.query.object()</code> decorator. The follow-up implementation story is tracked in <a href="https://github.com/strongloop/loopback-next/issues/2208" target="_blank" rel="noopener noreferrer">#2208</a>.</p></li><li><p>We fixed a bug in <code>loopback-datasource-juggler</code> where <code>applyDefaultOnWrites</code> was not being applied in nested objects and arrays. You can find the details in <a href="https://github.com/strongloop/loopback-datasource-juggler/pull/1797" target="_blank" rel="noopener noreferrer">PR#1797</a>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="community-contributions">Community Contributions<a href="#community-contributions" class="hash-link" aria-label="Direct link to Community Contributions" title="Direct link to Community Contributions">​</a></h2><p>Here are some of the highlighted contributions from the community: </p><ul><li><p>For the model definition created by running <code>lb4 openapi</code>, we fixed the JavaScript type mapping of <code>date</code> from <code>Date</code> to <code>string</code>. Details see <a href="https://github.com/strongloop/loopback-next/pull/4142" target="_blank" rel="noopener noreferrer">PR#142</a>.</p></li><li><p>A flag <code>useDefaultIdType</code> was introduced in <code>loopback-datasource-juggler</code> to preserve the user provided id(primary key) property against the one generated by connectors. Details see <a href="https://github.com/strongloop/loopback-datasource-juggler/pull/1783" target="_blank" rel="noopener noreferrer">PR#1783</a>.</p></li><li><p>We now reject the the promise properly for <code>create</code> and <code>replaceById</code> when model initialization has errors. Details see <a href="https://github.com/strongloop/loopback-datasource-juggler/pull/1790" target="_blank" rel="noopener noreferrer">PR#1790</a>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>If you're interested in what we're working on next, you can check out the <a href="https://github.com/strongloop/loopback-next/issues/4236" target="_blank" rel="noopener noreferrer">December Milestone</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Janny Hou</name>
            <uri>https://github.com/jannyhou</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Going Cloud Native with LoopBack 4]]></title>
        <id>https://loopback.io/blog/going-cloud-native-with-loopback-4</id>
        <link href="https://loopback.io/blog/going-cloud-native-with-loopback-4"/>
        <updated>2019-12-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>When we build APIs and microservices nowadays, we choose a cloud as the target for deployment. Cloud has long gone beyond being just hosting providers. Infrastructures such as Docker and Kubernetes have completely changed the paradigm of how applications work and operate. To unleash the full power of cloud, there are a few important perspectives that require efforts to make your application cloud native. At LoopBack, we kicked off the journey to provide integration and guidance aligned with <a href="https://www.cncf.io/" target="_blank" rel="noopener noreferrer">CNCF</a> to make your API and microservice applications cloud native throughout the life cycle. This blog summarizes what we have explored and achieved so far to illustrate how you can go cloud native with LoopBack 4.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="key-perspectives-of-going-cloud-native">Key Perspectives of Going Cloud Native<a href="#key-perspectives-of-going-cloud-native" class="hash-link" aria-label="Direct link to Key Perspectives of Going Cloud Native" title="Direct link to Key Perspectives of Going Cloud Native">​</a></h2><p>We have looked into the following areas to understand how to make a LoopBack application cloud native and assess what it takes to improve LoopBack framework to be a good citizen of the cloud ecosystem.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="package-and-compose-applications-for-cloud-native-deployment---dockerkuberneteshelm">Package and compose applications for cloud native deployment - Docker/Kubernetes/Helm<a href="#package-and-compose-applications-for-cloud-native-deployment---dockerkuberneteshelm" class="hash-link" aria-label="Direct link to Package and compose applications for cloud native deployment - Docker/Kubernetes/Helm" title="Direct link to Package and compose applications for cloud native deployment - Docker/Kubernetes/Helm">​</a></h3><p>The <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer">shopping example</a> started as a monolithic application in early versions. It has been refactored and improved over time to make the application modular.</p><p>We did some experiments to decompose <code>loopback4-example-shopping</code> into microservices, package them as Docker containers, and deploy them into a Kubernetes cluster. The whole story can be read <a href="https://github.com/strongloop/loopback4-example-shopping/tree/master/kubernetes" target="_blank" rel="noopener noreferrer">here</a>.</p><p>Key takeaways:</p><ul><li>Break down an application into multiple microservices</li><li>Enable efficient communication between microserices</li><li>Update the application to adapt to configuration for resources in the Kubernetes environment</li><li>Build Docker images for each packages</li><li>Organize deployment of docker containers as a single unit using an Helm chart</li><li>Deploy to Minikube or IBM Cloud</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="enable-developers-to-have-end-to-end-cloud-native-development-and-deployment---kabaneroappsody---loopback-stack">Enable developers to have end-to-end cloud native development and deployment - Kabanero/Appsody - LoopBack stack<a href="#enable-developers-to-have-end-to-end-cloud-native-development-and-deployment---kabaneroappsody---loopback-stack" class="hash-link" aria-label="Direct link to Enable developers to have end-to-end cloud native development and deployment - Kabanero/Appsody - LoopBack stack" title="Direct link to Enable developers to have end-to-end cloud native development and deployment - Kabanero/Appsody - LoopBack stack">​</a></h3><p>Developers are often disconnected from the cloud environment during the development phase, with code only verified on a developer's local machine. Bad surprises may rise late in the cycle when deployment and tests happen in the cloud against that code.</p><p><a href="https://kabanero.io/" target="_blank" rel="noopener noreferrer">Kabanero</a> is created to address such concerns. The following is quoted from Kabanero's web site:</p><blockquote><p>Kabanero is an open source project focused on bringing together foundational open source technologies into a modern microservices-based framework. Developing apps for container platforms requires harmony between developers, architects, and operations. Today’s developers need to be efficient at much more than writing code. Architects and operations get overloaded with choices, standards, and compliance. Kabanero speeds development of applications built for Kubernetes while meeting the technology standards and policies your company defines. Design, develop, deploy, and manage with speed and control!</p></blockquote><p>To learn how Kabanero works, head <a href="https://kabanero.io/docs/ref/general/architecture-overview.html" target="_blank" rel="noopener noreferrer">here</a>.</p><p>To bring the LoopBack offering to the Kabanero experience, we have introduced an <a href="https://github.com/appsody/stacks/tree/master/incubator/nodejs-loopback" target="_blank" rel="noopener noreferrer">Appsody Stack for LoopBack 4</a>.</p><p>The Node.js LoopBack stack extends the <a href="https://github.com/appsody/stacks/tree/master/incubator/nodejs" target="_blank" rel="noopener noreferrer">Node.js stack</a> and provides a powerful solution to build open APIs and microservices in TypeScript with <a href="https://loopback.io/" target="_blank" rel="noopener noreferrer">LoopBack</a>, an open source Node.js API framework. It is based on <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">LoopBack 4</a>.</p><p>Go <a href="https://github.com/appsody/stacks/tree/master/incubator/nodejs-loopback" target="_blank" rel="noopener noreferrer">here</a> for more details.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="provide-observability---healthmetricstracinglogging">Provide observability - health/metrics/tracing/logging<a href="#provide-observability---healthmetricstracinglogging" class="hash-link" aria-label="Direct link to Provide observability - health/metrics/tracing/logging" title="Direct link to Provide observability - health/metrics/tracing/logging">​</a></h3><p>Observability is critical to the success of cloud native microservices. To make LoopBack a good citizen of Kubernetes based cluster, we have been rolling out extensions to integrate with health, metrics, tracing, and logging capabilities, based on projects at <a href="https://cncf.io" target="_blank" rel="noopener noreferrer">CNCF</a>.</p><ul><li><p>Released experimental features</p><ul><li>Health readiness/liveness check endpoints <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/health" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/tree/master/extensions/health</a></li><li>Metrics instrumentation and <a href="https://prometheus.io/" target="_blank" rel="noopener noreferrer">Prometheus</a> reporting: <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/metrics" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/tree/master/extensions/metrics</a></li></ul></li><li><p>New features proposed</p><ul><li>Distributed tracing with <a href="https://www.jaegertracing.io/" target="_blank" rel="noopener noreferrer">Jaeger</a> - <a href="https://github.com/strongloop/loopback-next/tree/tracing/extensions/tracing" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/tree/tracing/extensions/tracing</a></li><li>Distributed logging with <a href="https://www.fluentd.org/" target="_blank" rel="noopener noreferrer">Fluentd</a> - <a href="https://github.com/strongloop/loopback-next/tree/logging/extensions/logging" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/tree/logging/extensions/logging</a></li></ul></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="allow-graceful-shutdown-of-kubernetes-pods">Allow graceful shutdown of Kubernetes Pods<a href="#allow-graceful-shutdown-of-kubernetes-pods" class="hash-link" aria-label="Direct link to Allow graceful shutdown of Kubernetes Pods" title="Direct link to Allow graceful shutdown of Kubernetes Pods">​</a></h3><p>LoopBack 4 applications hosted by Kubernetes Pods can be requested to shutdown per provisioning needs by the cluster. The life-cycle and hand-share are described <a href="https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-terminating-with-grace" target="_blank" rel="noopener noreferrer">here</a>.</p><ul><li>Proposed features<ul><li>Handle http keep-alive connections and allow graceful shutdown upon application.stop()<ul><li><a href="https://github.com/strongloop/loopback-next/pull/4146" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/pull/4146</a></li></ul></li><li>Improve state transitions and allow shutdown hooks for applications<ul><li><a href="https://github.com/strongloop/loopback-next/pull/4145" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/pull/4145</a></li></ul></li></ul></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h3><p>With the investigation and experiment, we were able to deploy <code>loopback4-example-shopping</code> as an application with cloud native microservices to a Kubernetes cluster hosted by IBM Cloud. The LoopBack stack for Kabanero/Appsody is released. There are also pull requests under reviews to close gaps and add new facilities. We're very excited that LoopBack 4 is going cloud native and we're even more interested in seeing LoopBack applications going cloud native with us. Please join us on the journey.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li></ul>]]></content>
        <author>
            <name>Raymond Feng</name>
            <uri>https://github.com/raymondfeng</uri>
        </author>
        <category label="cloud native" term="cloud native"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building an Online Game With LoopBack 4 - Wrap-Up (Part 7)]]></title>
        <id>https://loopback.io/blog/building-an-online-game-with-loopback-4-pt7</id>
        <link href="https://loopback.io/blog/building-an-online-game-with-loopback-4-pt7"/>
        <updated>2019-11-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="part-7-wrap-up">Part 7: Wrap-Up<a href="#part-7-wrap-up" class="hash-link" aria-label="Direct link to Part 7: Wrap-Up" title="Direct link to Part 7: Wrap-Up">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="in-this-episode">In This Episode<a href="#in-this-episode" class="hash-link" aria-label="Direct link to In This Episode" title="Direct link to In This Episode">​</a></h3><p>This is the final episode of this series. We've used LoopBack 4 to build an online web text-based adventure game. We've built the foundation with LoopBack, and I am going to summarize what we have achieved so far, and how can you apply all of this to your own project. </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-we-have-achieved">What We Have Achieved<a href="#what-we-have-achieved" class="hash-link" aria-label="Direct link to What We Have Achieved" title="Direct link to What We Have Achieved">​</a></h3><p>In <a href="https://strongloop.com/strongblog/building-online-game-with-loopback-4-pt1/" target="_blank" rel="noopener noreferrer">episode 1</a>, we created a simple APIs. You can do the same to create a start point for your own project, for example, a student registration system which has a <code>student</code> model with properties like <code>studentId</code>, <code>name</code>, <code>major</code>, and <code>course</code>. Then we connected our project to MongoDB. You have the freedom to choose any database you want. LB4 supports most databases very well.</p><p>In <a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt2/" target="_blank" rel="noopener noreferrer">episode 2</a>, we used a third-party library to generate UUID. You can easily use any external library in you LoopBack 4 project. We also built relations between <code>character</code>, <code>weapon</code>, <code>aromr</code>, and <code>skill</code>. In a real world application, most of entities have relationships between each other. You can use LoopBack 4 to easily manage that in your project.</p><p>In <a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt3/" target="_blank" rel="noopener noreferrer">episode 3</a>, we covered how to customize APIs to achieve the function to manage users data. You can always implement your own amazing idea in your LoopBack 4 project.</p><p>In <a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt4/" target="_blank" rel="noopener noreferrer">episode 4</a>, we combined self-defined authorization strategies and services with <code>@loopback/authentication</code> and how to apply it to your API. You can always design your own strategies and services based on your project needs.</p><p>In <a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt5/" target="_blank" rel="noopener noreferrer">episode 5</a>, we deployed our project with Docker and Kubernetes on IBM Cloud. Once you create a Docker image, you can run it almost everywhere. You can also push your own project image to other cloud like AWS, Azure, and Google Cloud.</p><p>In <a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt6/" target="_blank" rel="noopener noreferrer">episode 6</a>, we created simple login, signup and home pages with React. We also learned how to connect front-end and back-end. React is the most popular front-end framework today. You can easily use it to create your own front-end UI.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="last-but-not-least">Last But Not Least<a href="#last-but-not-least" class="hash-link" aria-label="Direct link to Last But Not Least" title="Direct link to Last But Not Least">​</a></h3><p>Congratulations! You have built your own web application with LoopBack!</p><p>What we built in this series doesn't matter. It doesn't have to be an online game! You can use these concepts for online shopping or food delivery APIs. What <em>is</em> important is improving your design thinking, what methodology and tools we were using, and adding to the ways you think as a developer. Now, you've established stronger skills to build! </p><p>I hope you enjoyed this series. Thank you so much for all of the following and support. The series may be ending, but your journey with LoopBack is just starting.</p><p>Happy coding!</p>]]></content>
        <author>
            <name>Wen Bo</name>
            <uri>https://github.com/gobackhuoxing</uri>
        </author>
        <category label="how-to" term="how-to"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[CASCONxEVOKE Conference Recap for LoopBack]]></title>
        <id>https://loopback.io/blog/cascon-evoke-2019</id>
        <link href="https://loopback.io/blog/cascon-evoke-2019"/>
        <updated>2019-11-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p><a href="https://www-01.ibm.com/ibm/cas/cascon/" target="_blank" rel="noopener noreferrer">CASCONxEVOKE</a> is one of Canada’s largest combined academic, research and developer conferences, welcoming 1,500+ attendees and 150+ speakers. This year, the LoopBack team attended and kept busy collaborating with other attendees at the LoopBack booth and delivering a workshop at the conference between November 4th and 6th in Markham Ontario</p><p><img loading="lazy" alt="CASCONxEVOKE logo" src="/blog/assets/images/casconxevoke_logo-6247b65d9c0db9a77db72f3ff565b9b3.png" width="645" height="150" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="day-1-booth-showcasing-fast-and-easy-api-creation-with-loopback">Day 1: Booth Showcasing Fast and Easy API Creation with LoopBack<a href="#day-1-booth-showcasing-fast-and-easy-api-creation-with-loopback" class="hash-link" aria-label="Direct link to Day 1: Booth Showcasing Fast and Easy API Creation with LoopBack" title="Direct link to Day 1: Booth Showcasing Fast and Easy API Creation with LoopBack">​</a></h3><p>At our <a href="https://pheedloop.com/cascon/site/sessions/?id=DugCzZ" target="_blank" rel="noopener noreferrer">booth</a> we had a great opportunity to show how LoopBack can make API creation fast and easy. It looks like the use case we've shown in our poster is a common use case for our attendees to build APIs! </p><p><img loading="lazy" alt="shopping app example" src="/blog/assets/images/shopping-app-usecase-191f20276a7d9236e059ae06d044c231.png" width="1482" height="744" class="img_ev3q"></p><p>We also got a few questions about exposing GraphQL in LoopBack. If you're interested in it too, see <a href="https://loopback.io/doc/en/lb4/exposing-graphql-apis.html" target="_blank" rel="noopener noreferrer">our tutorial</a> which uses the <a href="https://loopback.io/openapi-to-graphql.html" target="_blank" rel="noopener noreferrer">OpenAPI-to-GraphQL module</a>. </p><p><img loading="lazy" alt="event photo for booth" src="/blog/assets/images/loopback-poster-casconevoke1-8be09098520d20111020e0a9126032ae.jpg" width="1119" height="1492" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="day-2-workshop-on-writing-scalable-nodejs-applications-using-loopback">Day 2: Workshop on Writing Scalable Node.js Applications Using LoopBack<a href="#day-2-workshop-on-writing-scalable-nodejs-applications-using-loopback" class="hash-link" aria-label="Direct link to Day 2: Workshop on Writing Scalable Node.js Applications Using LoopBack" title="Direct link to Day 2: Workshop on Writing Scalable Node.js Applications Using LoopBack">​</a></h3><p>On Day 2, we held a <a href="https://pheedloop.com/cascon/site/sessions/?id=OhNsKW" target="_blank" rel="noopener noreferrer">workshop</a> about writing scalable and extensible Node.js applications using LoopBack 4. We presented the challenges we faced for LoopBack as a large scale Node.js framework and showed how we are addressing those challenges in LoopBack 4. While we introduced the concepts that make scalability and extensibility possible (such as Dependency Injection, extension/extension-point framework and Inversion of Control), the attendees also had a chance to build an extensible and scalable Node.js application step-by-step using those features. </p><p><img loading="lazy" alt="event photo for booth" src="/blog/assets/images/loopback-workshop-casconxevoke-fbac2b4f294d018e6f325fcdcfe706e8.png" width="1994" height="946" class="img_ev3q"></p><p>We won't be able to relive the workshop, but you can check out our workshop <a href="https://github.com/strongloop/cascon2019" target="_blank" rel="noopener noreferrer">hands-on exercise instructions</a> and <a href="https://github.com/strongloop/cascon2019/blob/master/2019cascon-workshop-presentation-pdf.pdf" target="_blank" rel="noopener noreferrer">presentation slides</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="day-3-ibm-developer-booth">Day 3: IBM Developer Booth<a href="#day-3-ibm-developer-booth" class="hash-link" aria-label="Direct link to Day 3: IBM Developer Booth" title="Direct link to Day 3: IBM Developer Booth">​</a></h3><p>Throughout the conference, the IBM Developer booth was showcasing different developer-focused technologies, such as Appsody and LoopBack. We were delighted to be there on Day 3 to reach out more existing and potential users!</p><p>Some attendees asked about cloud deployment story for LoopBack. We have been focusing on a vendor agnostic approach. For instance, we recently completed a PoC and added a <a href="https://github.com/strongloop/loopback4-example-shopping/tree/master/kubernetes" target="_blank" rel="noopener noreferrer">tutorial</a> on how to deploy a LoopBack application as microservices using Kubernetes. While we recommend to <a href="https://github.com/strongloop/loopback4-example-shopping/blob/master/kubernetes/docs/deploy-to-ibmcloud.md" target="_blank" rel="noopener noreferrer">deploy your applications to IBM Cloud</a>, you can also deploy to another vendor of your choice.</p><p><img loading="lazy" alt="IBM Developer booth picture" src="/blog/assets/images/loopback-ibmdeveloperbooth-bd680974ecd86d6770013d663570b4c0.jpg" width="4032" height="3024" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li></ul>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="conference" term="conference"/>
        <category label="CASCONxEVOKE" term="CASCONxEVOKE"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 October 2019 Milestone Update]]></title>
        <id>https://loopback.io/blog/october-2019-milestone</id>
        <link href="https://loopback.io/blog/october-2019-milestone"/>
        <updated>2019-11-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>As the cold autumn winds and frost nipped at our heels, the LoopBack team kept warm with generous portions of hot tea and coffee and accomplished their planned October milestone goals.</p><p>We focused on the following areas:</p><ul><li>Inclusion of related models</li><li>Adding Partitioned Database Support for Cloudant and CouchDB connector</li><li>Spike on Migration Guide</li><li>Improvements to Shopping Cart Example</li><li>CASCON x Evoke 2019 Workshop Preparation</li><li>Repository Tests for PostgreSQL</li><li>Generating Controller/Repository from a Model</li><li>Documentation Improvements</li><li>Bug fixes / CI fixes</li></ul><p>See the <a href="https://github.com/strongloop/loopback-next/issues/3801" target="_blank" rel="noopener noreferrer">October milestone</a> for an overview of what we have worked on, and read on for more details.</p><p>Also, we were honored this month when <a href="https://apiworld.co/" target="_blank" rel="noopener noreferrer">API World</a> awarded LoopBack with the <code>2019 Best of API Middleware Award</code>. Raymond Feng was there to <a href="https://twitter.com/cyberfeng/status/1181943111531909120" target="_blank" rel="noopener noreferrer">accept the award</a> on behalf of the team. Yay, team!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="inclusion-of-related-models">Inclusion of Related Models<a href="#inclusion-of-related-models" class="hash-link" aria-label="Direct link to Inclusion of Related Models" title="Direct link to Inclusion of Related Models">​</a></h2><p>We've been working on inclusion resolvers for relations for the past several months. Besides the basic functionality, we also added a prompt for activating the inclusion resolver for the <code>lb4 relation</code> command in <a href="https://github.com/strongloop/loopback-next/pull/3856" target="_blank" rel="noopener noreferrer">PR #3856</a>. This allows users to easily set up the inclusion resolver through the CLI just like all others artifacts.</p><p>The <code>lb4 relation</code> command now <a href="https://loopback.io/doc/en/lb4/Relation-generator.html#arguments" target="_blank" rel="noopener noreferrer">prompts to confirm</a> if an inclusion resolver should be registered for the given relation.</p><p>Also, we posted <a href="https://strongloop.com/strongblog/inclusion-of-related-models/" target="_blank" rel="noopener noreferrer">a blog</a> to illustrate the idea and usage of the inclusion resolver. We have a full example from setting up the models and relations through CLI, to querying data with the inclusion resolver. Read the blog to try out the feature!</p><p>We've gotten feedback from the community since this feature was published. As a result, we've improved the documentation. Diagrams were added to each relation to make the concept more intuitive. We also added URLs as examples to query related models in case users want to process data at the controller level instead of the repository level. See <a href="https://github.com/strongloop/loopback-next/pull/4007" target="_blank" rel="noopener noreferrer">PR #4007</a> for more details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="adding-partitioned-database-support-for-cloudant-and-couchdb-connector">Adding Partitioned Database Support for Cloudant and CouchDB connector<a href="#adding-partitioned-database-support-for-cloudant-and-couchdb-connector" class="hash-link" aria-label="Direct link to Adding Partitioned Database Support for Cloudant and CouchDB connector" title="Direct link to Adding Partitioned Database Support for Cloudant and CouchDB connector">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="spike">Spike<a href="#spike" class="hash-link" aria-label="Direct link to Spike" title="Direct link to Spike">​</a></h3><p>Both Cloudant and CouchDB support partitioned databases which make querying less expensive - computationally in CouchDB, monetarily on Cloudant (on <code>IBM Cloud</code>).</p><p>A <a href="https://github.com/strongloop/loopback-connector-cloudant/issues/214" target="_blank" rel="noopener noreferrer">spike</a> was performed to investigate the work required to support the partitioned database in Cloudant, and follow-up tasks were created. <a href="https://github.com/strongloop/loopback-connector-cloudant/issues/219" target="_blank" rel="noopener noreferrer">Epic #219 - Add support for partitioned database</a> was created to track the implementation stories.</p><p>The feature will be supported in 3 stages. In the first stage, we will update the driver and enable creating the partitioned index; which are the pre-requisites for the partitioned search. The second stage includes supporting the query with partition key from the options data or the payload data; the latter one requires a model property defined as the partition key field. Stage 3 contains more improvements for the document creation in the partitioned database by supporting a composed ID.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="updating-driver">Updating Driver<a href="#updating-driver" class="hash-link" aria-label="Direct link to Updating Driver" title="Direct link to Updating Driver">​</a></h3><p>To start <a href="https://github.com/strongloop/loopback-connector-cloudant/issues/219" target="_blank" rel="noopener noreferrer">Epic #219</a>, we updated the <a href="https://github.com/cloudant/nodejs-cloudant" target="_blank" rel="noopener noreferrer">cloudant driver</a> and the <a href="https://hub.docker.com/r/ibmcom/couchdb3" target="_blank" rel="noopener noreferrer">docker image</a> to the latest ones which support the partition feature.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="spike-on-migration-guide">Spike on Migration Guide<a href="#spike-on-migration-guide" class="hash-link" aria-label="Direct link to Spike on Migration Guide" title="Direct link to Spike on Migration Guide">​</a></h2><p>A spike was performed on migrating from LoopBack 3 to LoopBack 4. As a result, we created the outline of a <a href="https://loopback.io/doc/en/lb4/migration-overview.html" target="_blank" rel="noopener noreferrer">migration guide</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="improvements-to-shopping-cart-example">Improvements to Shopping Cart Example<a href="#improvements-to-shopping-cart-example" class="hash-link" aria-label="Direct link to Improvements to Shopping Cart Example" title="Direct link to Improvements to Shopping Cart Example">​</a></h2><p>The <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer">shopping cart application</a> has undergone a few improvements.</p><ul><li><p>We have added an out-of-the-box capability to set a JWT token via an <code>Authorize button/dialog</code> in the API Explorer. When interacting with the secured endpoint, the token is automatically sent in the <code>Authorization</code> header of the request. See <a href="https://github.com/strongloop/loopback4-example-shopping/pull/301" target="_blank" rel="noopener noreferrer">PR #301</a> and <a href="https://github.com/strongloop/loopback-next/pull/3876" target="_blank" rel="noopener noreferrer">PR #3876</a> for details. To find out how to enable this capability in your application, please see <a href="https://loopback.io/doc/en/lb4/Authentication-Tutorial.html#specifying-the-security-settings-in-the-openapi-specification" target="_blank" rel="noopener noreferrer">Specifying the Security Settings in the OpenAPI Specification</a>.</p></li><li><p>The shopping cart application has been decomposed into multiple microservices, each of which is packaged as a docker image. It's possible to communicate between microservices using <a href="https://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank" rel="noopener noreferrer">REST</a> and/or <a href="https://grpc.io/" target="_blank" rel="noopener noreferrer">gRPC</a>. A <a href="https://helm.sh/docs/developing_charts/" target="_blank" rel="noopener noreferrer">helm chart</a> can now be used to deploy these microservices to a Kubernetes cluster on <a href="https://github.com/kubernetes/minikube" target="_blank" rel="noopener noreferrer">Minikube</a> or <a href="https://www.ibm.com/cloud" target="_blank" rel="noopener noreferrer">IBM Cloud</a>. See <a href="https://github.com/strongloop/loopback4-example-shopping/blob/master/kubernetes/README.md" target="_blank" rel="noopener noreferrer">Deploy the Shopping Application as Cloud-native Microservices using Kubernetes</a> for more details.</p></li><li><p>The <code>shopping</code> service can now connect to the <code>recommender</code> service over gRPC as well as REST. See <a href="https://github.com/strongloop/loopback4-example-shopping/pull/333" target="_blank" rel="noopener noreferrer">PR #333</a> for details.</p></li><li><p>Extra logic was added to <code>*.datasources.ts</code> files to accept configuration from kubernetes environment variables. See <a href="https://github.com/strongloop/loopback4-example-shopping/pull/338" target="_blank" rel="noopener noreferrer">PR #338</a> for details.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="cascon-x-evoke-2019-workshop-preparation">CASCON x Evoke 2019 Workshop Preparation<a href="#cascon-x-evoke-2019-workshop-preparation" class="hash-link" aria-label="Direct link to CASCON x Evoke 2019 Workshop Preparation" title="Direct link to CASCON x Evoke 2019 Workshop Preparation">​</a></h2><p>The LoopBack 4 team has prepared material for a booth and workshop at <a href="http://www-01.ibm.com/ibm/cas/cascon/" target="_blank" rel="noopener noreferrer">CASCON x Evoke 2019</a> in Toronto, Canada. We hosted a booth named <a href="https://pheedloop.com/cascon/site/sessions/?id=DugCzZ" target="_blank" rel="noopener noreferrer">REST APIs with LoopBack 4 and OpenAPI 3</a> on November 4th and 6th and held a workshop named <a href="https://pheedloop.com/cascon/site/sessions/?id=OhNsKW" target="_blank" rel="noopener noreferrer">Write scalable and extensible Node.js applications using LoopBack 4</a> on November 5th. Watch for an upcoming blog post with an overview of the event!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="repository-tests-for-postgresql">Repository Tests for PostgreSQL<a href="#repository-tests-for-postgresql" class="hash-link" aria-label="Direct link to Repository Tests for PostgreSQL" title="Direct link to Repository Tests for PostgreSQL">​</a></h2><p>Previously, we ran repository tests against the memory, MySQL, and MongoDB databases. This month, we added PostgreSQL to the databases these tests are run against. You can see <a href="https://github.com/strongloop/loopback-next/pull/3853" target="_blank" rel="noopener noreferrer">PR #3853</a> for details or take a look at the newly added <a href="https://github.com/strongloop/loopback-next/tree/master/acceptance/repository-postgresql" target="_blank" rel="noopener noreferrer"><code>repository-postgresql</code> package</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="generating-controllerrepository-from-a-model">Generating Controller/Repository from a Model<a href="#generating-controllerrepository-from-a-model" class="hash-link" aria-label="Direct link to Generating Controller/Repository from a Model" title="Direct link to Generating Controller/Repository from a Model">​</a></h2><p>Some progress was made on the <a href="https://github.com/strongloop/loopback-next/issues/2036" target="_blank" rel="noopener noreferrer">EPIC #2036 - From model definition to REST API with no custom repository/controller classes</a>. A controller can now be generated based on a model name. See <a href="https://github.com/strongloop/loopback-next/pull/3842" target="_blank" rel="noopener noreferrer">PR #3842</a> for details. Also, a repository can now be generated based on a model name. See <a href="https://github.com/strongloop/loopback-next/pull/3867" target="_blank" rel="noopener noreferrer">PR #3867</a> for details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation-improvements">Documentation Improvements<a href="#documentation-improvements" class="hash-link" aria-label="Direct link to Documentation Improvements" title="Direct link to Documentation Improvements">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-inside-a-loopback-application-section-added-to-docs">New 'Inside a LoopBack Application' Section Added to Docs<a href="#new-inside-a-loopback-application-section-added-to-docs" class="hash-link" aria-label="Direct link to New 'Inside a LoopBack Application' Section Added to Docs" title="Direct link to New 'Inside a LoopBack Application' Section Added to Docs">​</a></h3><p>We're always seeking to improve our documentation. We've added a new section <a href="https://loopback.io/doc/en/lb4/Inside-LoopBack-Application.html" target="_blank" rel="noopener noreferrer">Inside a Loopback Application</a> to help LoopBack 4 application developers to establish a high level understanding of how LoopBack 4 is related to their application requirements.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="customize-id-and-foreign-key-names-for-relations">Customize Id and Foreign Key Names for Relations<a href="#customize-id-and-foreign-key-names-for-relations" class="hash-link" aria-label="Direct link to Customize Id and Foreign Key Names for Relations" title="Direct link to Customize Id and Foreign Key Names for Relations">​</a></h3><p>After triaging some issues from the community, we realized that the documentation for customizing key names needs to be enhanced. We added explanations and examples to illustrate the default value of relations, how to customize key names, and how to use different names for models and database columns. You can find more details in <a href="https://loopback.io/doc/en/lb4/HasMany-relation.html#relation-metadata" target="_blank" rel="noopener noreferrer">HasMany - Relation Metadata</a>, <a href="https://loopback.io/doc/en/lb4/hasOne-relation.html#relation-metadata" target="_blank" rel="noopener noreferrer">HasOne - Relation Metadata</a>, and <a href="https://loopback.io/doc/en/lb4/BelongsTo-relation.html#defining-a-belongsto-relation" target="_blank" rel="noopener noreferrer">Defining a belongsTo Relation</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="bug-fixes--ci-fixes">Bug Fixes / CI Fixes<a href="#bug-fixes--ci-fixes" class="hash-link" aria-label="Direct link to Bug Fixes / CI Fixes" title="Direct link to Bug Fixes / CI Fixes">​</a></h2><ul><li><p>Fixed <a href="https://github.com/strongloop/loopback/issues/4252" target="_blank" rel="noopener noreferrer">Issue #4252 - Fix CI builds (Karma + PhantomJS)</a> by reworking browser tests to run in Headless Chrome instead of PhantomJS, because the latter is no longer maintained. See <a href="https://github.com/strongloop/loopback/pull/4262" target="_blank" rel="noopener noreferrer">PR #4262</a> for details.</p></li><li><p>Fixed <a href="https://github.com/strongloop/loopback/issues/3717" target="_blank" rel="noopener noreferrer">Issue #3717 - PersistedModel's updateAll method crashes the server when invoked via the remote connector</a> by properly handling anonymous object types when <code>PersistedModel.updateAll</code> is called. See <a href="https://github.com/strongloop/strong-remoting/pull/472" target="_blank" rel="noopener noreferrer">PR #472</a> for details.</p></li><li><p>Fixed <a href="https://github.com/strongloop/loopback-next/issues/3878" target="_blank" rel="noopener noreferrer">Issue #3878 - lifeCycleObserver is not working with express composition</a>. See <a href="https://github.com/strongloop/loopback-next/pull/3879" target="_blank" rel="noopener noreferrer">PR #3879</a> and <a href="https://github.com/strongloop/loopback-next/pull/3891" target="_blank" rel="noopener noreferrer">PR #3891</a> for details.</p></li><li><p>Fixed <a href="https://github.com/strongloop/loopback-next/issues/3706" target="_blank" rel="noopener noreferrer">Issue #3706 - Unable to POST on endpoint with recursive model</a>. See <a href="https://github.com/strongloop/loopback-next/pull/3897" target="_blank" rel="noopener noreferrer">PR #3897</a> for details.</p></li><li><p>Fixed <a href="https://github.com/strongloop/loopback-next/issues/3296" target="_blank" rel="noopener noreferrer">Issue #3296 - Model discovery not working with Oracle connector &amp; CDB instance</a> by only calling back once the connection is released. See <a href="https://github.com/strongloop/loopback-connector-oracle/pull/193" target="_blank" rel="noopener noreferrer">PR #193</a> for details.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="looking-for-user-references">Looking for User References<a href="#looking-for-user-references" class="hash-link" aria-label="Direct link to Looking for User References" title="Direct link to Looking for User References">​</a></h2><p>As a LoopBack user, do you want your company highlighted on our <a href="https://loopback.io/" target="_blank" rel="noopener noreferrer">web site</a>? If your answer is yes, see the details in this <a href="https://github.com/strongloop/loopback-next/issues/3047" target="_blank" rel="noopener noreferrer">GitHub issue</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>If you're interested in what we're working on next, you can check out the <a href="https://github.com/strongloop/loopback-next/issues/4029" target="_blank" rel="noopener noreferrer">November Milestone</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Dominique Emond</name>
            <uri>https://github.com/emonddr</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 Offers Inclusion of Related Models]]></title>
        <id>https://loopback.io/blog/inclusion-of-related-models</id>
        <link href="https://loopback.io/blog/inclusion-of-related-models"/>
        <updated>2019-10-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>LoopBack 4 now offers a new feature: inclusion of related models! This addition not only simplifies querying data in LoopBack 4, but since we have similar features in LoopBack 3 it also closes one feature gap between LoopBack 3 as well. The idea is to use the <code>inclusion resolver</code>, which is a function that helps to query data over different relations, to achieve such simplifications for us.</p><p>Here is a simple use case of inclusion: a customer has many orders.</p><p><img loading="lazy" alt="hasMany" src="/blog/assets/images/inclusion-of-related-models-hasmany-3c062e8e6b871d17f8b7a3b84a47cc1f.png" width="2884" height="540" class="img_ev3q"></p><p>If we'd like to get a customer's instance with all their orders instances, we can query on <code>Customer</code> with filter <code>{include: [{relation: 'orders']}</code>. The inclusion resolvers are similar to GraphQL resolvers -- it will find the target instances of <code>Customer</code> first and pass its result to the inclusion resolver of <code>orders</code>. The query result will contain the return value of <code>orders</code> nested under corresponding <code>Customer</code> instead of connecting to database twice. Read on for detailed examples and explanations!</p><p>LoopBack 4 creates a different inclusion resolver for each relation type. Each relation has its own inclusion resolver <code>inclusionResolver</code>. And each repository has a built-in property <code>inclusionResolvers</code> as a registry for its <code>inclusionResolver</code>s.</p><p><img loading="lazy" alt="inclusionResolvers" src="/blog/assets/images/inclusion-of-related-models-resolvers-09732e907a4692831607ccf87e190a01.png" width="3524" height="1324" class="img_ev3q"></p><p>To enable querying related models for a certain relation, the corresponding <code>inclusionResolver</code> of that relation has to be registered to the <code>inclusionResolvers</code>. I promise the set up is not as complicated as what you just read through.
Let me show you the steps to enable this feature in few steps!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="0-before-you-get-started">0. Before you get started<a href="#0-before-you-get-started" class="hash-link" aria-label="Direct link to 0. Before you get started" title="Direct link to 0. Before you get started">​</a></h2><p>Upgrade your global installation of LoopBack 4 command line interface (CLI) to get the new feature.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ npm install -g "@loopback/cli"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-set-up-models-and-datasource">1. Set up models and datasource<a href="#1-set-up-models-and-datasource" class="hash-link" aria-label="Direct link to 1. Set up models and datasource" title="Direct link to 1. Set up models and datasource">​</a></h2><p>You can set up models and datasource by the CLI <code>lb4 model</code> and <code>lb4 datasouce</code>. </p><p>I use <code>MySQL</code> as my database in this case. And here are my models <code>Customer</code> and <code>Order</code>:</p><p><code>customer.model.ts</code>:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// imports</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Customer</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Entity</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    generated</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// constructor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>order.model.ts</code>:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Entity</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    generated</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    required</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//constructor</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-set-up-relations-and-register-inclusion-resolver-for-each-relation">2. Set up relations and register inclusion resolver for each relation<a href="#2-set-up-relations-and-register-inclusion-resolver-for-each-relation" class="hash-link" aria-label="Direct link to 2. Set up relations and register inclusion resolver for each relation" title="Direct link to 2. Set up relations and register inclusion resolver for each relation">​</a></h2><p>We are setting up two relations in this example:</p><ul><li><code>hasMany</code>: a <code>Customer</code> has many <code>Order</code>s. Named this relation as <code>orders</code>.</li><li><code>belongsTo</code>: an <code>Order</code> has a <code>Customer</code>. Named this relation as <code>customer</code>. The foreign key is <code>customerId</code>.</li></ul><p><img loading="lazy" alt="relations" src="/blog/assets/images/inclusion-of-related-models-relations-190dceb1245245bda45c2d831e26d9ed.png" width="2884" height="540" class="img_ev3q"></p><p>You can either modify your model and repository files or use CLI <code>lb4 relation</code> to set up relations and enable the <code>inclusionResolver</code> in each relation. Here's how I set the <code>belongsTo</code> relation through the CLI:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ lb4 relation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please select the relation type: belongsTo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please select source model: Order</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please select target model: Customer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Source property name for the relation getter: customerId</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Allow Order queries to include data from related Customer instances? Yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   create src/controllers/order-customer.controller.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Relation BelongsTo was created in src/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This prompt registers the <code>inclusionResolver</code> for this <code>belongsTo</code> relation for you.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">? Allow Order queries to include data from related Customer instances? (Y/n)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It defaults to <code>Yes</code>. Make sure to choose 'yes' if you'd like to use inclusion and your model is traversable.</p><p>Here is the code snippet for models after setting up two relations and enabling both inclusion resolvers:</p><p><code>customer.model.ts</code>:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// imports</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Customer</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Entity</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// id, name properties</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">hasMany</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> Order</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  orders</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Order</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// constructor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>order.model.ts</code>:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// imports</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Entity</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// id, desc properties</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">belongsTo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> Customer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  customerId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Customer</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//constructor</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And you'll see the inclusion resolvers are enabled in the repository classes:</p><p><code>customer.repository.ts</code>:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">//imports</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">CustomerRepository</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">DefaultCrudRepository</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">readonly</span><span class="token plain"> orders</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> HasManyRepositoryFactory</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Order</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">typeof</span><span class="token plain"> Customer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dataSource</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> DbDataSource</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    orderRepositoryGetter</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Getter</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">OrderRepository</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Customer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dataSource</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">orders </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">createHasManyRepositoryFactoryFor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">"orders"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      orderRepositoryGetter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// this line registers inclusion resolver, allows us to query related models</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">registerInclusionResolver</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"orders"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">inclusionResolver</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>order.repository.ts</code>:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">OrderRepository</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">DefaultCrudRepository</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">readonly</span><span class="token plain"> customer</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> BelongsToAccessor</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Customer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">typeof</span><span class="token plain"> Order</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dataSource</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> juggler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DataSource</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    customerRepositoryGetter</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Getter</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">CustomerRepository</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Order</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dataSource</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">customer </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">createBelongsToAccessorFor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">"customer"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      customerRepositoryGetter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// this line registers inclusion resolver, allows us to query related models</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">registerInclusionResolver</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"customer"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">customer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">inclusionResolver</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><em>Notice: I use default values in this example. We also recommend to follow the naming convention. If you'd like to custom property names or relation names, check our site <a href="https://loopback.io/doc/en/lb4/Relations.html" target="_blank" rel="noopener noreferrer">Relations</a> for more details.</em></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-try-it-out">3. Try it out!<a href="#3-try-it-out" class="hash-link" aria-label="Direct link to 3. Try it out!" title="Direct link to 3. Try it out!">​</a></h2><p>At this point, you're able to query related models by specifying the relation name in the inclusion field. Let's create instances for <code>Customer</code> and <code>Order</code>.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Customer: [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  {id: 1, name: `Thor`},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  {id: 2, name: `Captain`},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Order: [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  {id: 1, desc: `Rocket Raccoon`, customerId: 1},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  {id: 2, desc: `Shield`, customerId: 2},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  {id: 3, desc: `Mjolnir`, customerId: 1},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can either query data via controllers or do it in the repository level.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">CustomerController</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// constructor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/customers'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">OrderController</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// constructor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/orders'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>For hasMany relation <code>orders</code>, these queries return all customers with their <code>Order</code>s:</p><ul><li><p>Use controllers (or use the API Explorer <a href="http://localhost:3000/explorer/" target="_blank" rel="noopener noreferrer"><code>http://localhost:3000/explorer/</code></a>):</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> GET http://localhost:3000/customers?filter[include][][relation]=orders</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>This is the same as you process data in the repository level:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> customerRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> include</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> relation</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"orders"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ul><p>Result:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id: 1,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name: 'Thor',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    orders: [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      {id: 1, desc: 'Mjolnir', customerId: 1},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      {id: 3, desc: 'Rocket Raccoon', customerId: 1},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id: 2,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name: 'Captain',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    orders: [{id: 2, desc: 'Shield', customerId: 2}],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">];</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Here is a diagram to make this more intuitive:</p><p><img loading="lazy" alt="inclusion" src="/blog/assets/images/inclusion-of-related-models-includes-115470a66edb26ebeda5a127fb948dd3.png" width="4480" height="1448" class="img_ev3q"></p><p>For belongsTo relation <code>customer</code>, these queries return the <code>Order</code> that has <code>id = 1</code> and includes the <code>Customer</code> it belongs to.</p><ul><li><p>Use controllers (or use the API Explorer <a href="http://localhost:3000/explorer/" target="_blank" rel="noopener noreferrer"><code>http://localhost:3000/explorer/</code></a>):</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">GET http://localhost:3000/orders/1?filter[include][][relation]=customer</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>This is the same as you process data in the repository level:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> orderRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">include</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">relation</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'customer'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ul><p>Result:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id: 1,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    desc: 'Rocket Raccoon',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    customerId: 1,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    customer: {id: 1, name: 'Thor'},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Besides the example I've shown above, our <a href="https://loopback.io/doc/en/lb4/todo-list-tutorial.html" target="_blank" rel="noopener noreferrer">TodoList Tutorial</a> example also uses inclusion. Check on the site for more detailed steps. </p><p>Hope this new feature is helpful for you!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="limitations">Limitations<a href="#limitations" class="hash-link" aria-label="Direct link to Limitations" title="Direct link to Limitations">​</a></h2><p>Though we've finished the implementation of this new feature and test it against SQL and NoSQL databases, there are some limitations:</p><ul><li>Including related models with a custom scope is not supported. For example, for <code>orders</code> of a <code>Customer</code>, it cannot filter a certain <code>Order</code>s that you want to include in <code>orders</code>. Related GH issue: <a href="https://github.com/strongloop/loopback-next/issues/3453" target="_blank" rel="noopener noreferrer">Include related models with a custom scope</a></li><li>We don't support recursive inclusion of related models. Related GH issue: <a href="https://github.com/strongloop/loopback-next/issues/3454" target="_blank" rel="noopener noreferrer">Recursive inclusion of related models</a></li><li>It doesn't split numbers of queries. Related GH issue: <a href="https://github.com/strongloop/loopback-next/issues/3444" target="_blank" rel="noopener noreferrer">Support <code>inq</code> splitting</a>.</li><li>It might not work well with <code>ObjectId</code> of MongoDB. Related GH issue: <a href="https://github.com/strongloop/loopback-next/issues/3456" target="_blank" rel="noopener noreferrer">Spike: robust handling of ObjectID type for MongoDB</a></li></ul><p>We have some discussions on these issues. Please check out the <a href="https://github.com/strongloop/loopback-next/issues/3585" target="_blank" rel="noopener noreferrer">Post MVP Enhancement</a> story if you're interested. We'd love to hear your input and feel free to contribute. </p><p>Thanks for choosing LoopBack!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's success depends on you! We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Agnes Lin</name>
            <uri>https://github.com/agnes512</uri>
        </author>
        <category label="feature" term="feature"/>
        <category label="related models" term="related models"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 2019 Q3 Overview]]></title>
        <id>https://loopback.io/blog/loopback-4-2019-q3-overview</id>
        <link href="https://loopback.io/blog/loopback-4-2019-q3-overview"/>
        <updated>2019-10-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>For the past few months, the LoopBack team has been busy improving the framework. Aside from implementation, we also did some investigation to plan out road map for the incoming new features. Here are our main focuses in last quarter:</p><ul><li><a href="#authentication">Authentication</a>: released <code>@loopback/authentication@3.x</code> version.</li><li><a href="#authorization">Authorization</a>: experimental feature which provides basic support for authorization.</li><li><a href="#inclusion_of_related_models">Inclusion of Related Models</a>: query data over relations with <code>inclusionResolver</code>.</li><li><a href="#creating_rest_api_from_model_classes">Creating REST API from Model Classes</a>: the proposed design to allow users create REST API with less code.</li><li><a href="#importing_loopBack_3_models">Importing LoopBack 3 Models</a>: migrate your LB3 applications to LB4 with command <code>lb4 import-lb3-models</code>.</li></ul><p>We have a monthly blog reviewing what we've done in each milestone. To stay tuned, don't forget to follow us on Twitter <a href="https://twitter.com/@StrongLoop" target="_blank" rel="noopener noreferrer">@StrongLoop</a>.</p><p>Let's take a closer look at each of the epic.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="authentication">Authentication<a href="#authentication" class="hash-link" aria-label="Direct link to Authentication" title="Direct link to Authentication">​</a></h2><p>We have recently released <code>@loopback/authentication</code> 3.0. We refactored some common types/interfaces in both authentication and authorization packages and moved them to the new <code>@loopback/security</code> package. This helps combine the operations over these two packages. We also improved the <code>@authenticate</code> decorator so that users can apply the default authentication metadata without adding the decorator <code>@authenticate</code> to every route. Also, methods that don't require authentication can be skipped by adding <code>@authenticate.skip</code>.</p><p>Apart from enhancing codebase, we also updated the related documentation and examples. Developers can easily follow tutorials and examples to try out setting up their own authentication systems.</p><p>Moreover, we did some researches into potential solutions for the new features. In <a href="https://github.com/strongloop/loopback4-example-shopping/pull/267" target="_blank" rel="noopener noreferrer">spike #267</a> we were exploring a way to enable the authorization header setting from the API Explorer. And in <a href="https://github.com/strongloop/loopback-next/pull/3771" target="_blank" rel="noopener noreferrer">spike #3771</a>, we tried to find a solution to make <code>UserProfile</code> interface more flexible so that users have more controls over authentication. Check the links for discussions and proposal details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="authorization">Authorization<a href="#authorization" class="hash-link" aria-label="Direct link to Authorization" title="Direct link to Authorization">​</a></h2><p>We released an experimental version of <a href="https://loopback.io/doc/en/lb4/Loopback-component-authorization.html" target="_blank" rel="noopener noreferrer"><code>@loopback/authorization</code></a>. The authorization system now allows developers to decorate their endpoints with <code>@authorize()</code>. By plugging in their own authorizers, it is able to determine whether a user has access to the resource.</p><p>Besides the basic functionalities, we also made <code>@authorize()</code> more flexible: users now can define their own voters/authorizers, apply <code>@authorize</code> at the class level, and use the new <code>@authorize.skip</code> annotation. All these improvements allow developers to have more control to shape the authorization system.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="inclusion-of-related-models">Inclusion of Related Models<a href="#inclusion-of-related-models" class="hash-link" aria-label="Direct link to Inclusion of Related Models" title="Direct link to Inclusion of Related Models">​</a></h2><p>We have made good progress in this epic this quarter. We completed and released the implementation of <code>inclusionResolver</code> of relations. It allows LoopBack 4 users to query data over relations more easily. The <code>todo-list</code> tutorial is also updated with the usage of <code>inclusionResolver</code>. Check LB4 site <a href="https://loopback.io/doc/en/lb4/Relations.html" target="_blank" rel="noopener noreferrer">Relations</a> and the <a href="https://loopback.io/doc/en/lb4/todo-list-tutorial.html" target="_blank" rel="noopener noreferrer"><code>todo-list</code> tutorial</a> to get started. We will make this feature easier to use by adding it to CLI command. Stay tuned for more details!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="creating-rest-api-from-model-classes">Creating REST API from Model Classes<a href="#creating-rest-api-from-model-classes" class="hash-link" aria-label="Direct link to Creating REST API from Model Classes" title="Direct link to Creating REST API from Model Classes">​</a></h2><p>In LoopBack 3, it was very easy to get a fully-featured CRUD REST API with very little code. We would like to provide the same simplicity to you that you can create REST APIs from models directly without the need of creating Repository or Controller classes. As we found out and discussed in <a href="https://github.com/strongloop/loopback-next/pull/3617" target="_blank" rel="noopener noreferrer">spike #3617</a>, we will introduce a new package <code>@loopback/model-api-builder</code>, a new booter <code>ModelApiBooter</code>, and a plugged-in model-api-builder that builds CRUD REST APIs. The proposed design will enable users to create REST APIs without customizing repository/controller classes. Check <a href="https://github.com/strongloop/loopback-next/issues/2036" target="_blank" rel="noopener noreferrer">Epic #2036</a> for details of related stories.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="importing-loopback-3-models">Importing LoopBack 3 models<a href="#importing-loopback-3-models" class="hash-link" aria-label="Direct link to Importing LoopBack 3 models" title="Direct link to Importing LoopBack 3 models">​</a></h2><p>We accomplished the implementation for the CLI command to import model definitions from LoopBack 3 applications. If you have existing LoopBack 3 applications, it's a good time to type in command <code>lb4 import-lb3-models</code> to migrate them to LoopBack 4! See <a href="https://github.com/strongloop/loopback-next/pull/3688" target="_blank" rel="noopener noreferrer">PR #3688</a> for implementation details, <a href="https://loopback.io//doc/en/lb4/Importing-LB3-models.html" target="_blank" rel="noopener noreferrer">Importing models from LoopBack 3 projects</a> documentations, and also the <a href="https://strongloop.com/strongblog/import-loopback-3-models-to-loopback-4" target="_blank" rel="noopener noreferrer">blog post</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="exciting-news">Exciting News<a href="#exciting-news" class="hash-link" aria-label="Direct link to Exciting News" title="Direct link to Exciting News">​</a></h2><p>In August, we got the news from <a href="https://apiworld.co/" target="_blank" rel="noopener noreferrer">APIWorld</a> that LoopBack has won the "Best In API Middleware" award. We have shared this news in <a href="https://strongloop.com/strongblog/loopback-2019-api-award-api-middleware/" target="_blank" rel="noopener noreferrer">this blog post</a>. Our architect and co-creator of LoopBack, <a href="https://strongloop.com/authors/Raymond_Feng/" target="_blank" rel="noopener noreferrer">Raymond Feng</a>, will be attending the awards ceremony on October 8 at APIWorld. If you happen to be at the conference, don't miss out.</p><p>To moving towards the cloud native direction, LoopBack 4 has been added to be one of the <a href="https://appsody.dev/" target="_blank" rel="noopener noreferrer">Appsody application stacks</a>. It is also being offered as part of the <a href="https://www.ibm.com/cloud/cloud-pak-for-applications" target="_blank" rel="noopener noreferrer">IBM Cloud Pak for Applications</a>. With the health check extension being added to LoopBack 4, we are planning to add more capabilities to provide the non-functional requirements for the cloud native deployment. Stay tuned!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>For the next 3 months, we'd like to focus on the following:</p><ul><li>Continue with the Q3 stories. e.g. <a href="https://github.com/strongloop/loopback-next/issues/3242" target="_blank" rel="noopener noreferrer">Authentication</a>, <a href="https://github.com/strongloop/loopback-next/issues/538" target="_blank" rel="noopener noreferrer">Authorization</a>, <a href="https://github.com/strongloop/loopback-next/issues/1352" target="_blank" rel="noopener noreferrer">Inclusion of related models</a>.</li><li>Start working on the migration guide spikes: <a href="https://github.com/strongloop/loopback-next/issues/1849" target="_blank" rel="noopener noreferrer">Migration Guide: general runtime</a> and <a href="https://github.com/strongloop/loopback-next/issues/3719" target="_blank" rel="noopener noreferrer">Migration Guide: Authentication and Authorization</a>.</li><li>Continue to enhance our cloud native story: <a href="https://github.com/strongloop/loopback-next/issues/1054" target="_blank" rel="noopener noreferrer">Production Deployment with IBM Cloud</a>.</li><li>CASCON x Evoke: LoopBack team will be organizing an <a href="https://pheedloop.com/cascon/site/sessions/?id=DugCzZ" target="_blank" rel="noopener noreferrer">Exhibition</a> and a <a href="https://pheedloop.com/cascon/site/sessions/?id=OhNsKW" target="_blank" rel="noopener noreferrer">Workshop</a> on Nov 4th and Nov 5th.</li></ul><p>Check <a href="https://github.com/strongloop/loopback-next/blob/master/docs/ROADMAP.md" target="_blank" rel="noopener noreferrer">Q4 roadmap</a> for more details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="previous-milestone-blogs">Previous Milestone Blogs<a href="#previous-milestone-blogs" class="hash-link" aria-label="Direct link to Previous Milestone Blogs" title="Direct link to Previous Milestone Blogs">​</a></h2><p>There are too many features added and bug fixes that cannot be captured here. Check out our previously published monthly milestone blog posts in Q2 for more details:</p><ul><li><a href="https://strongloop.com/strongblog/july-2019-milestone/" target="_blank" rel="noopener noreferrer">July 2019</a></li><li><a href="https://strongloop.com/strongblog/august-2019-milestone/" target="_blank" rel="noopener noreferrer">August 2019</a></li><li><a href="https://strongloop.com/strongblog/september-2019-milestone/" target="_blank" rel="noopener noreferrer">September 2019</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-for-action">Call for Action<a href="#call-for-action" class="hash-link" aria-label="Direct link to Call for Action" title="Direct link to Call for Action">​</a></h2><p>LoopBack's future success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li></ul>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <author>
            <name>Agnes Lin</name>
            <uri>https://github.com/agnes512</uri>
        </author>
        <category label="Quarterly update" term="Quarterly update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Import LoopBack 3 Models into a LoopBack 4 Project]]></title>
        <id>https://loopback.io/blog/import-loopback-3-models-to-loopback-4</id>
        <link href="https://loopback.io/blog/import-loopback-3-models-to-loopback-4"/>
        <updated>2019-10-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>It has been almost a year since <a href="https://strongloop.com/strongblog/loopback-4-ga" target="_blank" rel="noopener noreferrer">LoopBack 4.0 GA was announced</a>. Since then, we have been working hard on closing the feature gap between the new and the old versions and looking for ways to simplify migration of projects built on LoopBack 3.</p><p>In June, we announced a new feature that allows LoopBack 3 applications to be mounted in LoopBack 4 projects, allowing developers to start writing new features using LoopBack 4 while keeping existing APIs powered by LoopBack 3 (Read more about it in this <a href="https://strongloop.com/strongblog/migrate-from-loopback-3-to-loopback-4/" target="_blank" rel="noopener noreferrer">blog post</a>).</p><p>Today, we are happy to announce a preview version of a tool automating migration of models from LoopBack 3 to LoopBack 4:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">lb4 import-lb3-models</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Let me show you the new command in practice, using our <a href="https://github.com/strongloop/loopback-next/tree/master/examples/lb3-application" target="_blank" rel="noopener noreferrer"><code>lb3-application</code></a> example, which is based on <a href="https://loopback.io/doc/en/lb3/Getting-started-with-LoopBack.html" target="_blank" rel="noopener noreferrer">Getting started with LoopBack 3</a>.</p><p>First of all, upgrade your global installation of LoopBack 4 CLI to get the new feature!</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ npm install -g "@loopback/cli"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now we can run the following command to start the migration process:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ lb4 import-lb3-models lb3app/server/server.js</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><em>A side note: in our example project, the LoopBack 3 application is a part of the root LoopBack 4 project. Therefore it does not have its own <code>package.json</code> file and LoopBack 3 dependencies are included in the top-level <code>package.json</code> file along LoopBack 4 dependencies. The directory of the LoopBack 3 application cannot be loaded directly via <code>require</code> as a result, and we have to provide a full path to the server file to the CLI tool. On the other hand, if you are importing from a standalone LoopBack 3 project which has <code>main</code> entry in <code>package.json</code> configured to point to <code>server/server.js</code> (as is the case with projects scaffolded by our LoopBack 3 CLI tool), then it's enough to use the path to your LoopBack 3 project directory as the argument, e.g. <code>lb3app</code>).</em></p><p>The generator will greet you with a warning about the experimental status and then load the LoopBack 3 application at the provided path. Once the application is loaded, the generator shows a list of models available for import.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">? Select models to import: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">❯◯ Application</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ◯ AccessToken</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ◯ User</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ◯ RoleMapping</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ◯ Role</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ◯ ACL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ◯ Scope</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(Move up and down to reveal more choices)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The initial version includes built-in LoopBack 3 models too, because they don't have any direct counterparts in LoopBack 4. We would like to investigate different options for importing models based on LoopBack 3 built-in models. Depending on the findings, the behavior of this prompt may change in the future.</p><p>Using arrows and the spacebar, we select the <code>CoffeeShop</code> model to import and confirm the selection.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">? Select models to import:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ◯ Role</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ◯ ACL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ◯ Scope</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">❯◉ CoffeeShop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ◯ Application</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ◯ AccessToken</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ◯ User</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(Move up and down to reveal more choices)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now the generator migrates the model definition to the LoopBack 4 style, creates a TypeScript model file, and also updates the relevant index file.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">? Select models to import: CoffeeShop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Model CoffeeShop will be created in src/models/coffee-shop.model.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Ignoring the following unsupported settings: acls</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   create src/models/coffee-shop.model.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   update src/models/index.ts</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The definition of <code>CoffeeShop</code> model includes access-control configuration, which is not supported by LoopBack 4. The tool will warn about other unsupported fields besides <code>acls</code>, for example <code>relations</code> and <code>methods</code>.</p><p>The initial release has a few more limitations beyond missing support for <code>acls</code>. Please refer to our documentation at <a href="https://loopback.io/doc/en/lb4/Importing-LB3-models.html" target="_blank" rel="noopener noreferrer">Importing models from LoopBack 3 projects</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>We are releasing this early preview version to get feedback from you, our users! Please give the new command a try and let us know which parts of the migration experience we should improve next. Start by checking the known limitations described in the documentation and up-vote the linked GitHub issues. If there is no GitHub issue describing your feature yet then please open a new one.</p><p>Besides importing model definitions, we are also working on a declarative way of exposing models via REST APIs. This will allow LoopBack 4 applications to be written in a style that's closer to LoopBack 3, where REST API are built from a model definition file (e.g. <code>common/models/product.json</code>) and model configuration file (<code>server/model-config.json</code>). Once this feature is implemented, it will be possible to migrate both model definition and REST API from LoopBack 3. You can track our progress in GitHub issues <a href="https://github.com/strongloop/loopback-next/issues/2036" target="_blank" rel="noopener noreferrer">loopback-next#2036</a> and <a href="https://github.com/strongloop/loopback-next/issues/3822" target="_blank" rel="noopener noreferrer">loopback-next#3822</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's success depends on you! We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Miroslav Bajtoš</name>
            <uri>http://github.com/bajtos</uri>
        </author>
        <category label="LoopBack 3" term="LoopBack 3"/>
        <category label="migration" term="migration"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 September 2019 Milestone Update]]></title>
        <id>https://loopback.io/blog/september-2019-milestone</id>
        <link href="https://loopback.io/blog/september-2019-milestone"/>
        <updated>2019-10-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>All the leaves are red and the flowers are fading away. In this season of fruitfulness, the LoopBack team accomplished their planned September milestone goals. Besides delivering code-related contributions, we also addressed the growing number of reported issues from the growing number of users from the GitHub community. I believe that with the effort from our team and the contribution from the community, we are crafting LoopBack to a better framework.</p><p>Here are our main focuses from September:</p><ul><li>Enhancement of Authentication/Authorization</li><li>Declarative Building of REST APIs</li><li>Importing of LB3 Model JSON File To LB4 Model Class</li><li>Inclusion Resolver in Relations</li></ul><p>See the <a href="https://github.com/strongloop/loopback-next/issues/3653" target="_blank" rel="noopener noreferrer">September milestone</a> for an overview of what we have worked on, and read on for more details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="enhancing-authentication-and-authorization">Enhancing Authentication and Authorization<a href="#enhancing-authentication-and-authorization" class="hash-link" aria-label="Direct link to Enhancing Authentication and Authorization" title="Direct link to Enhancing Authentication and Authorization">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="improving-authenticate-and-authorize-decorators">Improving <code>@authenticate</code> and <code>@authorize</code> Decorators<a href="#improving-authenticate-and-authorize-decorators" class="hash-link" aria-label="Direct link to improving-authenticate-and-authorize-decorators" title="Direct link to improving-authenticate-and-authorize-decorators">​</a></h3><p>In <a href="https://github.com/strongloop/loopback-next/pull/3691" target="_blank" rel="noopener noreferrer">PR #3691</a>, we implemented the default metadata for authentication. It allows us to have a default authentication enforcement for methods. We also improved the <code>@authenticate</code> decorator to configure a default authentication for all methods within a class. Now we can apply our default authentication metadata without adding the decorator <code>@authenticate</code> to every route.</p><p>Moreover, methods that don't require authentication can be skipped by adding <code>@authenticate.skip</code>. Similarly, authorization can be skipped with <code>@authorize.skip</code> annotation. Check <a href="https://github.com/strongloop/loopback-next/pull/3762" target="_blank" rel="noopener noreferrer">PR #3762</a> for more details.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="spike-for-authentication-in-api-explorer">Spike for Authentication in API Explorer<a href="#spike-for-authentication-in-api-explorer" class="hash-link" aria-label="Direct link to Spike for Authentication in API Explorer" title="Direct link to Spike for Authentication in API Explorer">​</a></h3><p>In <a href="https://github.com/strongloop/loopback4-example-shopping/pull/267" target="_blank" rel="noopener noreferrer">spike #267</a> we tried enabling the authorization header setting from the API Explorer. Without this feature, users will have to test their endpoints outside the API Explorer to specify the header fields.</p><p>The <code>swagger-ui</code> module has its built-in "Authorize" component. It shows up in the API Explorer automatically when <code>components.securities</code> is added in the application's OpenAPI specification. In the spike PR, <a href="https://github.com/strongloop/loopback4-example-shopping/blob/9e0bd5f63ee221a740f68a7af3019d6c8c1df972/README.md#authentication" target="_blank" rel="noopener noreferrer">a series of screenshots</a> demos how to interact with the "Authorize" dialog to set the authentication headers. You can either specify global security policies to be applied to all the APIs, or configure the policy per endpoint.</p><p>When merging the security schemas into the OpenAPI specification, we also realized the importance to make contributing partial OpenAPI specifications from extensions more flexible. As the next steps, we will document and explain the steps of enabling the "Authorize" component in the API Explorer, and also improve inferring security schemas from the authentication strategies.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="spike-for-a-more-flexible-userprofile-interface-in-loopbackauthentication">Spike for A More Flexible <code>UserProfile</code> Interface in <code>@loopback/authentication</code><a href="#spike-for-a-more-flexible-userprofile-interface-in-loopbackauthentication" class="hash-link" aria-label="Direct link to spike-for-a-more-flexible-userprofile-interface-in-loopbackauthentication" title="Direct link to spike-for-a-more-flexible-userprofile-interface-in-loopbackauthentication">​</a></h3><p>Interface <code>UserProfile</code> describes a minimum set of properties that represents an identity of a user. It is also a contract shared between the authentication and authorization modules. To make up the difference between a custom <code>User</code> model and <code>UserProfile</code>, we introduced a <code>UserService</code> interface with a converter function as a choice for users who want to organize the utilities for the <code>User</code> model into a service class.</p><p>In this spike, we worked on a more general solution that unifies the behavior across all modules. We started the spike with the <code>@loopback/authentication-passport</code> because compared with custom authentication strategies, users have less control over the returned user when applying the passport adapter. The solution is to define an interface <code>UserProfileFactory</code> which takes in an instance of the custom user and returns a user profile. A corresponding key will also be created in <code>@loopback/authentication</code> for the sake of injection.</p><p>In the meantime, we also discovered that some user profile related refactor in <code>@loopback/authorization</code> is needed. You can find more details in the <a href="https://github.com/strongloop/loopback-next/pull/3771" target="_blank" rel="noopener noreferrer">PoC PR</a></p><p>Two follow-up stories were created: <a href="https://github.com/strongloop/loopback-next/issues/3846" target="_blank" rel="noopener noreferrer">Add user profile factory</a> and <a href="https://github.com/strongloop/loopback-next/issues/3845" target="_blank" rel="noopener noreferrer">Refactor the authorization component</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="declarative-building-of-rest-apis">Declarative Building of REST APIs<a href="#declarative-building-of-rest-apis" class="hash-link" aria-label="Direct link to Declarative Building of REST APIs" title="Direct link to Declarative Building of REST APIs">​</a></h2><p>In LoopBack 3, it was very easy to get a fully-featured CRUD REST API with very little code: a model definition describing model properties + a model configuration specifying which datasource to use.</p><p>In September, we did some research into how to provide the same simplicity to LB4 users too and outlined the following implementation design:</p><ol><li><p>A new package <code>@loopback/model-api-builder</code> will define the contract for plugins (extensions) contributing repository &amp; controller builders.</p></li><li><p>A new booter <code>ModelApiBooter</code> will load all model-config files from <code>/model-endpoints/{model-name}.{api-flavour}-config.js</code>, find model API builder using Extension/ExtensionPoint pattern and delegate the remaining work to the plugin.</p></li><li><p>An official model-api-builder plugin that will build CRUD REST APIs using <code>DefaultCrudRepository</code> implementation. The plugin will be implemented inside the recently introduced package <code>@loopback/rest-crud</code>.</p></li></ol><p>The proposed design will enable the following opportunities to extend and customize the default behavior of API endpoints:</p><ul><li><p>App developers will be able to create &amp; bind a custom repository class, this will allow them, for example, to implement functionality similar to LB3 Operation Hooks.</p></li><li><p>App developers will be able to implement their own api-builder plugins and replace the repository &amp; controller builders provided by LB4 with their own logic.</p></li><li><p>The model configuration schema will be extensible; individual plugins will be able to define additional model-endpoints options to further tweak the behavior of API endpoints.</p></li></ul><p>You can find more details in the spike <a href="https://github.com/strongloop/loopback-next/pull/3617" target="_blank" rel="noopener noreferrer">PR #3617</a> and track the implementation progress in <a href="https://github.com/strongloop/loopback-next/issues/2036" target="_blank" rel="noopener noreferrer">Epic #2036</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="importing-loopback-3-models">Importing LoopBack 3 Models<a href="#importing-loopback-3-models" class="hash-link" aria-label="Direct link to Importing LoopBack 3 Models" title="Direct link to Importing LoopBack 3 Models">​</a></h2><p>To further simplify the migration from LoopBack 3 to LoopBack 4, we implemented a new CLI command to import model definitions from LoopBack 3 applications. See <a href="https://github.com/strongloop/loopback-next/pull/3688" target="_blank" rel="noopener noreferrer">PR #3688</a>, <a href="https://loopback.io//doc/en/lb4/Importing-LB3-models.html" target="_blank" rel="noopener noreferrer">Importing models from LoopBack 3 projects</a> in our documentations and stay tuned for an upcoming blog post announcement!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="implementing-inclusion-resolvers-for-relations">Implementing Inclusion Resolvers for Relations<a href="#implementing-inclusion-resolvers-for-relations" class="hash-link" aria-label="Direct link to Implementing Inclusion Resolvers for Relations" title="Direct link to Implementing Inclusion Resolvers for Relations">​</a></h2><p>Last month, we introduced the concept of the <code>inclusion resolver</code> in relations, which helps to query data through an <code>include</code> filter. An inclusion resolver is a function that can fetch target models for a given list of source model instances.</p><p>Here is an example of the <code>HasMany</code> relation: querying customers' orders. A <code>Customer</code> has many <code>Order</code>s:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">customerRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> include</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> relation</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"orders"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>will return all customer instances alone with their related orders:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    customerName</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Thor"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    orders</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> desc</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Mjolnir"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> customerId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> desc</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Rocket Raccoon"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> customerId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    customerName</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Captain"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    orders</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> desc</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Shield"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> customerId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We accomplished finishing the implementation of <code>inclusion resolver</code> for <code>HasMany</code>, <code>BelongsTo</code>, and <code>HasOne</code> relations. The <code>inclusionResolver</code> property is now available for these three relations.</p><p>For more details on how to use the resolvers, please check the LoopBack 4 <a href="https://loopback.io/doc/en/lb4/Relations.html" target="_blank" rel="noopener noreferrer">Relation</a> page or try out the <code>todo-list</code> example (by using <code>lb4 example todo-list</code>).</p><p>For implementation details, please check pull requests of inclusion resolver tasks and its helpers:</p><ul><li><code>HasMany</code> inclusion resolver implementation <a href="https://github.com/strongloop/loopback-next/pull/3595" target="_blank" rel="noopener noreferrer">PR #3595</a></li><li><code>BelongsTo</code> inclusion resolver implementation <a href="https://github.com/strongloop/loopback-next/pull/3721" target="_blank" rel="noopener noreferrer">PR #3721</a></li><li><code>HasOne</code> inclusion resolver implementation <a href="https://github.com/strongloop/loopback-next/pull/3764" target="_blank" rel="noopener noreferrer">PR #3764</a></li><li>Update <code>todo-list</code> example to use inclusion resolver <a href="https://github.com/strongloop/loopback-next/issues/3450" target="_blank" rel="noopener noreferrer">PR #3450</a></li><li>Add <code>keyFrom</code> to resolved relation metadata <a href="https://github.com/strongloop/loopback-next/pull/3726" target="_blank" rel="noopener noreferrer">PR #3726</a></li><li>Implement helpers for inclusion resolver <a href="https://github.com/strongloop/loopback-next/pull/3727" target="_blank" rel="noopener noreferrer">PR #3727</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-changes">Other Changes<a href="#other-changes" class="hash-link" aria-label="Direct link to Other Changes" title="Direct link to Other Changes">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="allowing-recursive-model">Allowing Recursive Model<a href="#allowing-recursive-model" class="hash-link" aria-label="Direct link to Allowing Recursive Model" title="Direct link to Allowing Recursive Model">​</a></h3><p><a href="https://github.com/strongloop/loopback-next/pull/3674" target="_blank" rel="noopener noreferrer">PR #3674</a> and <a href="https://github.com/strongloop/loopback-next/pull/3722" target="_blank" rel="noopener noreferrer">PR #3722</a> allow us to define recursive models. For example:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">ReportState</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Model</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">array</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ReportState</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  states</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ReportState</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  benchmarkId</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Partial</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">ReportState</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>where the JsonSchema of the <code>ReportState</code> model is</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  states</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'array'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    items</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">$ref</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#/definitions/ReportState'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  benchmarkId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'string'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ci-failures-fixing">CI Failures Fixing<a href="#ci-failures-fixing" class="hash-link" aria-label="Direct link to CI Failures Fixing" title="Direct link to CI Failures Fixing">​</a></h3><p>The CI failures in the <a href="https://github.com/strongloop/loopback-connector-oracle" target="_blank" rel="noopener noreferrer">Oracle connector</a> have been fixed. In a related note, <a href="https://github.com/strongloop/loopback-connector-oracle/issues/190" target="_blank" rel="noopener noreferrer">a new issue</a> has been opened to make the local tests (<code>npm test</code>) pass.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="database-migration">Database Migration<a href="#database-migration" class="hash-link" aria-label="Direct link to Database Migration" title="Direct link to Database Migration">​</a></h3><p>Previously, <code>npm run migrate</code> would exclude LoopBack 3 models mounted in a LoopBack 4 app. Now it successfully migrates LoopBack 3 models as well. Check <a href="https://github.com/strongloop/loopback-next/pull/3779" target="_blank" rel="noopener noreferrer">PR #3779</a> for more details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-features-on-the-way">New Features On The Way<a href="#new-features-on-the-way" class="hash-link" aria-label="Direct link to New Features On The Way" title="Direct link to New Features On The Way">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="deploying-the-shopping-application-as-a-kubernetes-cluster">Deploying the Shopping Application as a Kubernetes Cluster<a href="#deploying-the-shopping-application-as-a-kubernetes-cluster" class="hash-link" aria-label="Direct link to Deploying the Shopping Application as a Kubernetes Cluster" title="Direct link to Deploying the Shopping Application as a Kubernetes Cluster">​</a></h3><p>Through the work in progress <a href="https://github.com/strongloop/loopback4-example-shopping/pull/268" target="_blank" rel="noopener noreferrer">PR #268</a>, by decomposing shopping example into multiple microservices and packaging them as docker images, we will be able to deploy a composite application. In addition, this feature would also show the posibility of communicating between microservices using REST and/or gRPC in such LB4 applications.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="adding-metrics-integration-with-prometheus">Adding Metrics Integration with <code>Prometheus</code><a href="#adding-metrics-integration-with-prometheus" class="hash-link" aria-label="Direct link to adding-metrics-integration-with-prometheus" title="Direct link to adding-metrics-integration-with-prometheus">​</a></h3><p>In another work in progress <a href="https://github.com/strongloop/loopback-next/pull/3339" target="_blank" rel="noopener noreferrer">PR #3339</a>, we are working on an experimental functionality. The new <code>@loopback/extension-metrics</code> package would allow users to report metrics of Node.js, LoopBack framework, and their application to <code>Prometheus</code>. This feature will be shown as an example in the new package <code>@loopback/example-metrics-prometheus</code>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="community-contribution">Community Contribution<a href="#community-contribution" class="hash-link" aria-label="Direct link to Community Contribution" title="Direct link to Community Contribution">​</a></h2><p>We have many community users contributing to LoopBack. In September, 14% of the merged PRs was coming from community contribution! From refactoring functionality to enhancing documentation, we really appreciate all these contributions. Here are some highlights of this month's community contributions:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="allowing-rest-explorer-to-use-a-relative-url-for-the-openapi-specification">Allowing <code>rest-explorer</code> to Use a Relative URL for the OpenAPI Specification<a href="#allowing-rest-explorer-to-use-a-relative-url-for-the-openapi-specification" class="hash-link" aria-label="Direct link to allowing-rest-explorer-to-use-a-relative-url-for-the-openapi-specification" title="Direct link to allowing-rest-explorer-to-use-a-relative-url-for-the-openapi-specification">​</a></h3><p>Community user <a href="https://github.com/mgabeler-lee-6rs" target="_blank" rel="noopener noreferrer">@mgabeler-lee-6rs</a> implemented a new feature that allows API Explorer to self-host the OpenAPI spec document and thus use a relative path in <code>swagger-ui</code> configuration. Before this change, the LoopBack configured UI component with an absolute path that did not work well when the application was running behind a reverse proxy link <code>nginx</code>. The API Explorer now works more reliably. Check <a href="https://github.com/strongloop/loopback-next/pull/3133" target="_blank" rel="noopener noreferrer">PR #3133</a> for more implementation details and discussions over the feature.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="updating-openapi-schemas-for-azure-validation">Updating OpenAPI Schemas for Azure Validation<a href="#updating-openapi-schemas-for-azure-validation" class="hash-link" aria-label="Direct link to Updating OpenAPI Schemas for Azure Validation" title="Direct link to Updating OpenAPI Schemas for Azure Validation">​</a></h3><p>In <a href="https://github.com/strongloop/loopback-next/pull/3504" target="_blank" rel="noopener noreferrer">PR #3504</a>, community user <a href="https://github.com/ericzon" target="_blank" rel="noopener noreferrer">@ericzon</a> changed the formatting of the OpenAPI Schema, which allows it to now pass Azure API Manager validation. We can now deploy an API as "App Service" and connect it with the API Manager as OpenAPI. It enables LB4 to work out-of-the-box on Microsoft Azure.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="contributions-from-community-user-derdeka">Contributions from Community User <a href="https://github.com/derdeka" target="_blank" rel="noopener noreferrer">@derdeka</a><a href="#contributions-from-community-user-derdeka" class="hash-link" aria-label="Direct link to contributions-from-community-user-derdeka" title="Direct link to contributions-from-community-user-derdeka">​</a></h3><p><a href="https://github.com/derdeka" target="_blank" rel="noopener noreferrer">@derdeka</a> is one of our most active users and contributors. <a href="https://github.com/derdeka" target="_blank" rel="noopener noreferrer">@derdeka</a> shared their ideas and suggestions in many pull requests with us, especially in the <code>Authentication</code> area. Here are some of their contributions:</p><ul><li><a href="https://github.com/derdeka" target="_blank" rel="noopener noreferrer">@derdeka</a>'s <a href="https://github.com/strongloop/loopback-next/pull/3649" target="_blank" rel="noopener noreferrer">PR #3649</a> allowed the <code>AuthenticationStrategyProvider</code> class to be extended.</li><li>In <a href="https://github.com/strongloop/loopback-next/pull/3623" target="_blank" rel="noopener noreferrer">PR #3623</a>, <a href="https://github.com/derdeka" target="_blank" rel="noopener noreferrer">@derdeka</a> improved the booter for importing a LB3 app to LB4. With the change, it processes the generated OpenAPI specifications correctly when mouting a LB3 app to LB4.</li></ul><p>If you would like to contribute to LoopBack, please check the <a href="#Call-to-Action">Call to Action</a> section below!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="looking-for-user-references">Looking for User References<a href="#looking-for-user-references" class="hash-link" aria-label="Direct link to Looking for User References" title="Direct link to Looking for User References">​</a></h2><p>As a LoopBack user, do you want your company highlighted on our <a href="https://loopback.io/" target="_blank" rel="noopener noreferrer">web site</a>? If your answer is yes, see the details in this <a href="https://github.com/strongloop/loopback-next/issues/3047" target="_blank" rel="noopener noreferrer">GitHub issue</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>If you're interested in what we're working on next, you can check out the <a href="https://github.com/strongloop/loopback-next/issues/3801" target="_blank" rel="noopener noreferrer">October milestone</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's success depends on you! We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Agnes Lin</name>
            <uri>https://github.com/agnes512</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 August 2019 Milestone Update]]></title>
        <id>https://loopback.io/blog/august-2019-milestone</id>
        <link href="https://loopback.io/blog/august-2019-milestone"/>
        <updated>2019-09-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>The last month of summer started with exiting news that <a href="https://strongloop.com/strongblog/loopback-2019-api-award-api-middleware/" target="_blank" rel="noopener noreferrer">LoopBack won the "Best in API Middleware award"</a>🎉, which is a great recognition of our team's achievement and effort. With those efforts in mind, here's the highlights of what we worked on in August: </p><ul><li>The implementation of InclusionResolver has made significant progress in the Inclusion epic.</li><li>A new epic to simplify building REST APIs is started with some pre-work and spike.</li><li>We contributed a LoopBack stack for Kabanero/Appsody to enable cloud native development experience.</li><li>The first version of @loopback/authorization was released for users to try.</li></ul><p>You can read more to learn the new features in details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="inclusion-resolver">Inclusion Resolver<a href="#inclusion-resolver" class="hash-link" aria-label="Direct link to Inclusion Resolver" title="Direct link to Inclusion Resolver">​</a></h2><p>To deliver <a href="https://github.com/strongloop/loopback-next/issues/1352" target="_blank" rel="noopener noreferrer">Inclusion of related models</a> epic, we started to implement tasks related to the inclusion resolver. </p><ul><li><p>We introduced the type <code>InclusionResolver</code> which you can use to fetch related models in <a href="https://github.com/strongloop/loopback-next/pull/3517" target="_blank" rel="noopener noreferrer">PR #3517</a>.</p></li><li><p>We implemented <code>findByForeignKeys</code> and <code>includeRelatedModels</code> functions, which help build <code>resolvers</code> for relations and improve querying for the include filter. The <code>findByForeignKeys</code> method finds model instances that contain any of the provided foreign key values. You can see more details for <code>findByForeignKeys</code> in <a href="https://github.com/strongloop/loopback-next/pull/3473" target="_blank" rel="noopener noreferrer">PR #3473</a>. The <code>includeRelatedModels</code> function returns model instances that include related models that have a registered resolver. You can see more about this function in <a href="https://github.com/strongloop/loopback-next/pull/3517" target="_blank" rel="noopener noreferrer">PR #3517</a>.</p></li><li><p>We improved <code>DefaultCrudRepository</code> to leverage <code>InclusionResolver</code> in <a href="https://github.com/strongloop/loopback-next/pull/3583" target="_blank" rel="noopener noreferrer">PR #3583</a>.</p><ul><li>The <code>findById</code>, <code>find</code>, and <code>findOne</code> methods have been modified to to call <code>includeRelatedModels</code>.</li><li><code>registerInclusionResolver</code> method has been added to register resolvers.</li></ul></li><li><p>Tests in repository package for relations have been refactored so that they can be tested against MySQL and MongoDB. This ensures our relations test suites work against real databases, along with the memory. Check <a href="https://github.com/strongloop/loopback-next/pull/3538" target="_blank" rel="noopener noreferrer">PR #3538</a> for more details.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="authorization">Authorization<a href="#authorization" class="hash-link" aria-label="Direct link to Authorization" title="Direct link to Authorization">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="experimental-release">Experimental release<a href="#experimental-release" class="hash-link" aria-label="Direct link to Experimental release" title="Direct link to Experimental release">​</a></h3><p>This month we released the experimental version of <a href="https://github.com/strongloop/loopback-next/tree/master/packages/authorization" target="_blank" rel="noopener noreferrer"><code>@loopback/authorization</code></a> by landing Raymond's <a href="https://github.com/strongloop/loopback-next/pull/1205" target="_blank" rel="noopener noreferrer">authorization feature PR</a>.</p><p>The authorization system is verified and tested by a <a href="https://github.com/strongloop/loopback4-example-shopping/pull/231" target="_blank" rel="noopener noreferrer">PoC PR</a> in the shopping example. Developers can decorate their endpoints with <code>@authorize()</code>, and provide the authorization metadata like <code>scope</code>, <code>resource</code>, <code>voter</code> in the decorator. Then define or plugin their own authorizers which determine whether a user has access to the resource. This is similar to how the authentication strategies are provided in the authentication system.</p><p><code>@loopback/authentication</code> and <code>@loopback/authorization</code> are combined in a way that the <code>authentication</code> module establishes the user identity from a request, passes it as the current user to the <code>authorization</code> module which decides is the resource accessible by that user.</p><p>Since the two modules share the identity abstracts to describe the user(or application, device in the future), we extracted the user related binding keys and types into a separate module <code>@loopback/security</code>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="configure-the-decision-logic-for-voters">Configure the Decision logic for Voters<a href="#configure-the-decision-logic-for-voters" class="hash-link" aria-label="Direct link to Configure the Decision logic for Voters" title="Direct link to Configure the Decision logic for Voters">​</a></h3><p>After the initial release of <code>@loopback/authorization</code>, we received community feedback regarding more flexible decision logic for the voters/authorizers. Raymond introduced two options to configure the decision maker:</p><ul><li><p><code>precedence</code>: Controls if Allow/Deny vote takes precedence and override other votes. If not set, default to <code>AuthorizationDecision.DENY</code>. Once a vote matches the <code>precedence</code>, it becomes the final decision. The rest of votes will be skipped.</p></li><li><p><code>defaultDecision</code>: Default decision if all authorizers vote for <code>ABSTAIN</code>. If not set, default to <code>AuthorizationDecision.DENY</code>.</p></li></ul><p>For details of how the final decision is made, you can check the <a href="https://github.com/strongloop/loopback-next/blob/master/packages/authorization/README.md#decision-matrix" target="_blank" rel="noopener noreferrer">Decision matrix</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-common-layer-for-authorization-and-authentication">New Common Layer for Authorization and Authentication<a href="#new-common-layer-for-authorization-and-authentication" class="hash-link" aria-label="Direct link to New Common Layer for Authorization and Authentication" title="Direct link to New Common Layer for Authorization and Authentication">​</a></h2><p>As mentioned in the previous section, the interface <code>UserProfile</code> and <code>AuthenticationBindings.CURRENT_USER</code> have been moved into a new module called <a href="https://github.com/strongloop/loopback-next/tree/master/packages/security" target="_blank" rel="noopener noreferrer"><code>@loopback/security</code></a>. This module contains the common types/interfaces for LoopBack 4 security including authentication and authorization.</p><p>In this package we defined interface <code>Principle</code> as the base type of all the identity models, like <code>UserProfile</code>, <code>Organization</code>, <code>Application</code>(the later two are still in build), it has a symbol field called <code>securityId</code>, which is used as the identity of a user/application/device.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="from-model-definition-to-rest-api-with-no-custom-classes">From model definition to REST API with no custom classes<a href="#from-model-definition-to-rest-api-with-no-custom-classes" class="hash-link" aria-label="Direct link to From model definition to REST API with no custom classes" title="Direct link to From model definition to REST API with no custom classes">​</a></h2><p>This month we started to work on the Epic that will simplify building REST APIs in LoopBack 4.</p><p>Quoting from <a href="https://github.com/strongloop/loopback-next/issues/2036" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/issues/2036</a>:</p><blockquote><p>In LoopBack 3, it was very easy to get a fully-featured CRUD REST API with very little code: a model definition describing model properties + a model configuration specifying which datasource to use.</p><p>Let's provide the same simplicity to LB4 users too.</p><ul><li>User creates a model class and uses decorators to define model properties. (No change here.)</li><li>User declaratively defines what kind of data-access patterns to provide (CRUD, KeyValue, etc.) and what datasource to use under the hood.</li><li><code>@loopback/boot</code> processes this configuration and registers appropriate repositories &amp; controllers with the app.</li></ul></blockquote><p>The first step was building a new component that will provide the default CRUD REST operations. The <a href="https://github.com/strongloop/loopback-next/pull/3582" target="_blank" rel="noopener noreferrer">PR#3582</a> introduces a new package <code>@loopback/rest-crud</code> that can be already used today as an alternative solution to <code>lb4 controller</code>.</p><p>In the next step, we needed to research the best design for model configuration and booter implementation. The <a href="https://github.com/strongloop/loopback-next/pull/3617" target="_blank" rel="noopener noreferrer">PR#3617</a> offers a proof-of-concept prototype demonstrating the proposed design. We are excited about the extensibility of the proposed approach, as it will make it very easy for 3rd-party developers (including application developers) to implement their own flavor of Repository and Controller classes to be used with the new Model API booter.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="loopback-stack-for-appsody">LoopBack Stack for Appsody<a href="#loopback-stack-for-appsody" class="hash-link" aria-label="Direct link to LoopBack Stack for Appsody" title="Direct link to LoopBack Stack for Appsody">​</a></h2><p><a href="https://appsody.dev/" target="_blank" rel="noopener noreferrer">Appsody</a> is an open source project that makes creating cloud native applications simple. It provides application stacks for open source runtimes and frameworks, which are pre-configured with cloud native capabilities for Kubernetes and Knative deployments. </p><p>This month, LoopBack has been added as one of the application stacks in Appsody to provide a powerful solution to build open APIs and Microservices in TypeScript. You can try its image in <a href="https://github.com/appsody/stacks/tree/master/incubator/nodejs-loopback" target="_blank" rel="noopener noreferrer">stack Node.js-LoopBack</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ajv-keywords-support">AJV Keywords Support<a href="#ajv-keywords-support" class="hash-link" aria-label="Direct link to AJV Keywords Support" title="Direct link to AJV Keywords Support">​</a></h2><p>In <a href="https://github.com/strongloop/loopback-next/pull/3539" target="_blank" rel="noopener noreferrer">PR#3539</a> we added validator <a href="https://github.com/epoberezkin/ajv-keywords" target="_blank" rel="noopener noreferrer"><code>ajv-keywords</code></a> to validate the incoming request data according to its corresponding OpenAPI schema. Now you can specify <code>ajvKeywords</code> as <code>true</code> or an array of AJV validation keywords in the validation options. See examples:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">app </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">RestApplication</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">rest</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">givenHttpServerConfig</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">app</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">RestBindings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">REQUEST_BODY_PARSER_OPTIONS</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">to</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">validation</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ajvKeywords</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>or</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">app </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">RestApplication</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">rest</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">givenHttpServerConfig</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">app</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">RestBindings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">REQUEST_BODY_PARSER_OPTIONS</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">to</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">validation</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ajvKeywords</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'range'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="max-listeners">Max Listeners<a href="#max-listeners" class="hash-link" aria-label="Direct link to Max Listeners" title="Direct link to Max Listeners">​</a></h2><p>If multiple operations are executed by a connector before a connection is established with the database, these operation are queued up. If the number of queued operations exceeds <a href="https://nodejs.org/api/events.html#events_eventemitter_defaultmaxlisteners" target="_blank" rel="noopener noreferrer">Node.js' default max listeners amount</a>, it throws the following warning: <code>MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 connected listeners added. Use emitter.setMaxListeners() to increase limit</code>. We introduced a default value for the maximum number of emitters and now allow users to customize the number. In a LoopBack 3 application's <code>datasources.json</code>, you can change the number by setting the <code>maxOfflineRequests</code> property to your desired number. See <a href="https://github.com/strongloop/loopback-datasource-juggler/pull/1767" target="_blank" rel="noopener noreferrer">PR #1767</a> and <a href="https://github.com/strongloop/loopback-connector/pull/149" target="_blank" rel="noopener noreferrer">PR #149</a> for details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="binding-improvement">Binding Improvement<a href="#binding-improvement" class="hash-link" aria-label="Direct link to Binding Improvement" title="Direct link to Binding Improvement">​</a></h2><p>In <a href="https://github.com/strongloop/loopback-next/pull/3618" target="_blank" rel="noopener noreferrer">PR#3618</a> we added support for applying multiple <code>@bind()</code> decorators on the same class. Now you can decorator your class like:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">scope</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> BindingScope</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">TRANSIENT</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">tags</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'my-controller'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyController</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Your controller members</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation-improvements">Documentation Improvements<a href="#documentation-improvements" class="hash-link" aria-label="Direct link to Documentation Improvements" title="Direct link to Documentation Improvements">​</a></h2><p>The architecture diagrams are added for concepts <a href="https://loopback.io/doc/en/lb4/Binding.html" target="_blank" rel="noopener noreferrer">Binding</a>, <a href="https://loopback.io/doc/en/lb4/Components.html" target="_blank" rel="noopener noreferrer">Component</a>, <a href="https://loopback.io/doc/en/lb4/Context.html" target="_blank" rel="noopener noreferrer">Context</a>, <a href="https://loopback.io/doc/en/lb4/Context.html#why-is-it-important" target="_blank" rel="noopener noreferrer">IoC Container</a>, and <a href="https://loopback.io/doc/en/lb4/Context.html#request-level-context-request" target="_blank" rel="noopener noreferrer">Context Hierarchy</a>.</p><p>We also reorganized the documentation so that it's easier for users to understand, including:</p><ul><li>Adding diagrams displaying how each key concepts relate to each other.</li><li>Reordering the sidebar items under the key concepts section.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="farewell-and-welcome">Farewell and Welcome<a href="#farewell-and-welcome" class="hash-link" aria-label="Direct link to Farewell and Welcome" title="Direct link to Farewell and Welcome">​</a></h2><p>As the summer ends, <a href="https://strongloop.com/authors/Nora_Abdelgadir/" target="_blank" rel="noopener noreferrer">Nora</a> wraps up her 12-month internship in the LoopBack team. She has made good progress in the <a href="https://github.com/strongloop/loopback-next/issues/1352" target="_blank" rel="noopener noreferrer">inclusion of related models story</a> this month! While she has returned to school, Nora will still be maintaining LoopBack on a part-time basis. We send her best wishes at school, and sincere thank yous for her dedication and hard work! </p><p>On the other hand, we're excited to have <a href="https://github.com/deepakrkris" target="_blank" rel="noopener noreferrer">Deepak</a> back to the team. Bringing his knowledge and experience in cloud and container related technologies, it would be a great addition to us. Welcome Deepak!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's success depends on you! We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Janny Hou</name>
            <uri>https://github.com/jannyhou</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building an Online Game With LoopBack 4 - Front-end with React (Part 6)]]></title>
        <id>https://loopback.io/blog/building-an-online-game-with-loopback-4-pt6</id>
        <link href="https://loopback.io/blog/building-an-online-game-with-loopback-4-pt6"/>
        <updated>2019-08-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="part-6-front-end-with-react">Part 6: Front-end with React<a href="#part-6-front-end-with-react" class="hash-link" aria-label="Direct link to Part 6: Front-end with React" title="Direct link to Part 6: Front-end with React">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="in-this-episode">In This Episode<a href="#in-this-episode" class="hash-link" aria-label="Direct link to In This Episode" title="Direct link to In This Episode">​</a></h3><p>Now our project is on IBM Cloud. But you may notice there is not anything that we can actually play with. It's just some APIs. How can we call it a game without front-end UI?</p><p>In this episode, I will build signup, login, and home pages with <a href="https://reactjs.org/" target="_blank" rel="noopener noreferrer">React</a>.</p><p>You can check <a href="https://github.com/gobackhuoxing/first-web-game-lb4/tree/part6/firstgame" target="_blank" rel="noopener noreferrer">here</a> for the code from this episode.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h3><p>In this series, I’m going to help you learn LoopBack 4 and how to use it to easily build your own API and web project. We’ll create a new project I’ve been thinking about: an online web text-based adventure game. In this game, you can create your own account to build characters, fight monsters and find treasures. You will be able to control your character to take a variety of actions: attacking enemies, casting spells, and getting loot. This game also allows multiple players to log in and play with their friends.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="previously-on-building-an-online-game-with-loopback-4">Previously on Building an Online Game With LoopBack 4<a href="#previously-on-building-an-online-game-with-loopback-4" class="hash-link" aria-label="Direct link to Previously on Building an Online Game With LoopBack 4" title="Direct link to Previously on Building an Online Game With LoopBack 4">​</a></h3><p>In the last episode, we covered how to run our project in Docker and push it to Kubernetes cluster on IBM Cloud.</p><p>Here are the previous episodes:</p><ul><li><a href="https://strongloop.com/strongblog/building-online-game-with-loopback-4-pt1/" target="_blank" rel="noopener noreferrer">Part 1: Building a Simple LoopBack Project With MongoDB</a></li><li><a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt2/" target="_blank" rel="noopener noreferrer">Part 2: Generating Universally Unique ID and Managing Models Relationships</a></li><li><a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt3/" target="_blank" rel="noopener noreferrer">Part 3: Customizing APIs in Controller</a></li><li><a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt4/" target="_blank" rel="noopener noreferrer">Part 4: User Authentication and Role-Based Access Control</a></li><li><a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt5/" target="_blank" rel="noopener noreferrer">Part 5: Deploying our Application to Kubernetes on IBM Cloud</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a href="#prerequisites" class="hash-link" aria-label="Direct link to Prerequisites" title="Direct link to Prerequisites">​</a></h3><p>I am completely new to the front-end world. So I took some online courses.
If you don't have any front-end experience like me, you should spend some time on the basic knowledge before moving on.</p><ul><li><a href="https://javascript30.com/" target="_blank" rel="noopener noreferrer">Javascript 30 days</a></li><li><a href="https://www.youtube.com/watch?v=Ke90Tje7VS0" target="_blank" rel="noopener noreferrer">Learn React - React Crash Course</a></li></ul><p>You don't need to finish them all. Watching online courses is boring. You can start to write code whenever you think you are ready.</p><p>I will also use some other libraries.</p><ul><li><a href="https://www.npmjs.com/package/axios" target="_blank" rel="noopener noreferrer">axios</a></li><li><a href="https://www.npmjs.com/package/bootstrap" target="_blank" rel="noopener noreferrer">bootstrap</a></li><li><a href="https://www.npmjs.com/package/react-bootstrap" target="_blank" rel="noopener noreferrer">react-bootstrap</a></li><li><a href="https://www.npmjs.com/package/react-router-dom" target="_blank" rel="noopener noreferrer">react-router-dom</a></li></ul><p>You don't have to fully understand them before. I will show you how to use them step by step.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="initializing-react-project">Initializing React Project<a href="#initializing-react-project" class="hash-link" aria-label="Direct link to Initializing React Project" title="Direct link to Initializing React Project">​</a></h3><p>Install <code>create-react-app</code></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">npm i create-react-app</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then run this to create a new react project:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">create-react-app &lt;your_project_name&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If you go to the project you just created and run <code>npm start</code>, you will see a page like this:</p><p><img loading="lazy" alt="default_page" src="/blog/assets/images/building-online-game-pt6-react-default-a55ee6e982dfa28d12e7f101e8f5c7a7.jpg" width="2090" height="1110" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="structure-designing">structure Designing<a href="#structure-designing" class="hash-link" aria-label="Direct link to structure Designing" title="Direct link to structure Designing">​</a></h3><p>Before we start, we need to spend some time on the project structure.</p><p>In a React project, everything is <a href="https://reactjs.org/docs/react-component.html" target="_blank" rel="noopener noreferrer">component</a>. Your pages, navigation bar, input form, or even a button, all of them could be components. All of those components are organized in a tree structure. Here is my project structure.</p><p><img loading="lazy" alt="structure" src="/blog/assets/images/building-online-game-pt6-structure-bb6a0cdee86daf8af434ae4c2dc8ac0a.jpg" width="2224" height="1406" class="img_ev3q"></p><p>And here is my directory structure:</p><p><img loading="lazy" alt="directory" src="/blog/assets/images/building-online-game-pt6-directory-structure-4e14406028ac402ba46bd7a71dec522e.jpg" width="678" height="446" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="appjsx"><code>App.jsx</code><a href="#appjsx" class="hash-link" aria-label="Direct link to appjsx" title="Direct link to appjsx">​</a></h3><p>First, open the <code>src/App.js</code> file. It will be the parent of all other components.</p><p>Change your <code>App.js</code> to <code>App.jsx</code>. It makes our life easier to use <code>.jsx</code> in React.</p><p>Then change your <code>App.jsx</code> to this:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Component</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">BrowserRouter</span><span class="token imports"> </span><span class="token imports keyword module" style="color:#00009f">as</span><span class="token imports"> </span><span class="token imports maybe-class-name">Router</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">Redirect</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">Route</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react-router-dom"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">NavBar</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./components"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Login</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">Signup</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">HomePage</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./containers"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> userService</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> authenticationService </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./services"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./containers/style.css"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">App</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Component</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">props</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">props</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">state</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">currentUser</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">data</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">gear</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">handelLogout</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">handelLogout</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">handelUserData</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">handelUserData</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">componentDidMount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">handelUserData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">handelLogout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    authenticationService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">logout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">currentUser</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">data</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">gear</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">handelUserData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> currentUser </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token dom variable" style="color:#36acaa">localStorage</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getItem</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"currentUser"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">currentUser</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> currentUser </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      userService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getUserData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">currentUser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      userService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getGearData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">currentUser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">render</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> gear</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> currentUser </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">state</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">jumbotron</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">NavBar</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">data</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">data</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">onLogout</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript keyword" style="color:#00009f">this</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript property-access" style="color:#00009f">handelLogout</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">container basic</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">col-sm-8 col-sm-offset-2 basic</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Router</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                &lt;Route</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                  exact</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                  path="/"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                  render=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token parameter">props</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token dom variable" style="color:#36acaa">localStorage</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getItem</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"currentUser"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">HomePage</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                        </span><span class="token tag spread punctuation" style="color:#393A34">{</span><span class="token tag spread operator" style="color:#393A34">...</span><span class="token tag spread" style="color:#00009f">props</span><span class="token tag spread punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                        </span><span class="token tag attr-name" style="color:#00a4db">currentUser</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">currentUser</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                        </span><span class="token tag attr-name" style="color:#00a4db">data</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">data</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                        </span><span class="token tag attr-name" style="color:#00a4db">gear</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">gear</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                        </span><span class="token tag attr-name" style="color:#00a4db">handelUserData</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript keyword" style="color:#00009f">this</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript property-access" style="color:#00009f">handelUserData</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                      </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Redirect</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                      </span><span class="token tag attr-name" style="color:#00a4db">to</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                        </span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                          </span><span class="token tag script language-javascript literal-property property" style="color:#36acaa">pathname</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">"/login"</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                          </span><span class="token tag script language-javascript literal-property property" style="color:#36acaa">state</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript keyword module" style="color:#00009f">from</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> props</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript property-access" style="color:#00009f">location</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                        </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                      </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                      </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                /&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Route</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                  </span><span class="token tag attr-name" style="color:#00a4db">path</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">/login</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                  </span><span class="token tag attr-name" style="color:#00a4db">render</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript parameter" style="color:#00009f">props</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                    </span><span class="token tag script language-javascript tag punctuation" style="color:#393A34">&lt;</span><span class="token tag script language-javascript tag class-name" style="color:#00009f">Login</span><span class="token tag script language-javascript tag" style="color:#00009f"> </span><span class="token tag script language-javascript tag spread punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript tag spread operator" style="color:#393A34">...</span><span class="token tag script language-javascript tag spread" style="color:#00009f">props</span><span class="token tag script language-javascript tag spread punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript tag" style="color:#00009f"> </span><span class="token tag script language-javascript tag attr-name" style="color:#00a4db">handelUserData</span><span class="token tag script language-javascript tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript tag script language-javascript keyword" style="color:#00009f">this</span><span class="token tag script language-javascript tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript tag script language-javascript property-access" style="color:#00009f">handelUserData</span><span class="token tag script language-javascript tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript tag" style="color:#00009f"> </span><span class="token tag script language-javascript tag punctuation" style="color:#393A34">/&gt;</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                  </span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Route</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">path</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">/signup</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">component</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript maybe-class-name" style="color:#00009f">Signup</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Router</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">text-center</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">a</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">href</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">https://loopback.io/</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Powered by Loopback 4</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">a</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">a</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">href</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">https://github.com/gobackhuoxing/first-web-game-lb4</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              Github@gobackhuoxing</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">a</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token exports punctuation" style="color:#393A34">{</span><span class="token exports"> </span><span class="token exports maybe-class-name">App</span><span class="token exports"> </span><span class="token exports punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Here we will use a library called <a href="https://www.npmjs.com/package/react-router-dom" target="_blank" rel="noopener noreferrer">react-router-dom</a>. Simply run <code>npm install react-router-dom</code> to install it. This library allows us to navigate between different components.</p><p>Let's go through this line by line.</p><p>The first thing you can see is:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">state</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">currentUser</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">data</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">gear</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This is the state of this component. Because we are using <code>JWT</code> in back-end for login. we need to store the token for future API calls. We also need to store the basic user information, so we can display it somewhere.</p><p>Then we have three functions:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">componentDidMount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">handelUserData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">handelLogout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    authenticationService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">logout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">currentUser</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">data</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">gear</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">handelUserData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> currentUser </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token dom variable" style="color:#36acaa">localStorage</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getItem</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"currentUser"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">currentUser</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> currentUser </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      userService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getUserData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">currentUser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      userService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getGearData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">currentUser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>handelLogout</code> is a function to logout. It will remove our token from <code>localStorage</code> and user data from <code>state</code>.</li><li><code>handelUserData</code> is a function to fetch user data from back-end and store the data in <code>state</code>. In react, never change <code>state</code> directly. If you do that, React will not update the page, because it doesn't know what has been changed. You should always use <code>setState()</code> to change <code>state</code> so that React can update all pages that related to this change.</li><li><code>authenticationService</code> and <code>userService</code> are my self-defined services to do all of the API calls.</li><li><code>componentDidMount</code> is a react build-in function that will be executed after the first render. I use it to get user data before page loading. You can check <a href="https://www.tutorialspoint.com/reactjs/reactjs_component_life_cycle" target="_blank" rel="noopener noreferrer">here</a> for more information about the React component life cycle.</li></ul><p>The <code>render</code> function defined how does our component look like. I have four children components here: <code>NavBar</code>, <code>HomePage</code>, <code>Login</code>, and <code>Signup</code>.</p><p>We use <code>react-router-dom</code> for redirecting. I have three pages in my route:</p><ul><li>Login("/login")</li><li>Signup("/signup")</li><li>HomePage("/")</li></ul><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Route</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  exact</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  path</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"/"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  render</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token parameter">props</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token dom variable" style="color:#36acaa">localStorage</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getItem</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"currentUser"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">HomePage</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag spread punctuation" style="color:#393A34">{</span><span class="token tag spread operator" style="color:#393A34">...</span><span class="token tag spread" style="color:#00009f">props</span><span class="token tag spread punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">currentUser</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">currentUser</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">data</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">data</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">gear</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">gear</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">handelUserData</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript keyword" style="color:#00009f">this</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript property-access" style="color:#00009f">handelUserData</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Redirect</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">to</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">        </span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">          </span><span class="token tag script language-javascript literal-property property" style="color:#36acaa">pathname</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">"/login"</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">          </span><span class="token tag script language-javascript literal-property property" style="color:#36acaa">state</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript keyword module" style="color:#00009f">from</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> props</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript property-access" style="color:#00009f">location</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">        </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">      </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If we can find token in <code>localStorage</code>, we will go to <code>HomePage</code>, otherwise, we will go to <code>Login</code>.</p><p>You can check <a href="https://github.com/gobackhuoxing/first-web-game-lb4/blob/part6/firstgame-frontend/src/App.jsx" target="_blank" rel="noopener noreferrer">here</a> for my code of <code>App.jsx</code>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="containers">Containers<a href="#containers" class="hash-link" aria-label="Direct link to Containers" title="Direct link to Containers">​</a></h3><p>A container is also a component. It is also a holder for other components. We have three containers: <code>HomePage</code>, <code>Login</code>, <code>Signup</code>.</p><p>Let's first create a <code>containers</code> folder in <code>/src</code>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="login-and-signup">Login and Signup<a href="#login-and-signup" class="hash-link" aria-label="Direct link to Login and Signup" title="Direct link to Login and Signup">​</a></h4><p><img loading="lazy" alt="login" src="/blog/assets/images/building-online-game-pt6-login-d6e8e87ddb3dd9e6b5d1d3affa2eff37.jpg" width="2364" height="948" class="img_ev3q"></p><p>This is my <code>Login.jsx</code>.</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Component</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> authenticationService </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../services"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Login</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Component</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  unmount </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">props</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">props</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">state</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">email</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">password</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">error</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">submitted</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">loading</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">shortPassword</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">handleChange</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">handleChange</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">handleSubmit</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">handleSubmit</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">componentWillUnmount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">unmount</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">handleChange</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">target</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> value </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function-variable function" style="color:#d73a49">handleSubmit</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token parameter">e</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">preventDefault</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> email</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> password </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">state</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> handelUserData </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">props</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">submitted</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">email </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> password</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">password</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">shortPassword</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">loading</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">shortPassword</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    authenticationService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">login</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">email</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> password</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">unmount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">loading</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">handelUserData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">render</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      email</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      password</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      error</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      loading</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      submitted</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      shortPassword</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">state</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">React.Fragment</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">h2</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Login</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">h2</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">error </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">statusCode</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">404</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript string" style="color:#e3116c">"alert alert-danger"</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Email doesn't exist</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">error </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">statusCode</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">401</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript string" style="color:#e3116c">"alert alert-danger"</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Password is incorrect</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">error </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">statusCode</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">422</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript string" style="color:#e3116c">"alert alert-danger"</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            Email or Password is invalid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">form</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">form</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">onSubmit</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript keyword" style="color:#00009f">this</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript property-access" style="color:#00009f">handleSubmit</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">form-group</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">label</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">htmlFor</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">email</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Email</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">label</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">input</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">type</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">email</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">form-control</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">email</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">email</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">onChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript keyword" style="color:#00009f">this</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript property-access" style="color:#00009f">handleChange</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">            </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">submitted </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">email </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">alert alert-danger</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Email is required</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">form-group</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">label</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">htmlFor</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">password</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Password</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">label</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">input</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">type</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">password</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">form-control</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">password</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">password</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">onChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript keyword" style="color:#00009f">this</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript property-access" style="color:#00009f">handleChange</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">            </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">submitted </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">password </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">alert alert-danger</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Password is required</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">submitted </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> shortPassword </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">alert alert-danger</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              Password too short - minimum length is 8 characters</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">form-group</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">btn btn-primary</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">disabled</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">loading</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              Login</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            Don't have an account? </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">a</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">href</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">/signup</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"> SignUp!</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">a</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">form</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">React.Fragment</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token exports punctuation" style="color:#393A34">{</span><span class="token exports"> </span><span class="token exports maybe-class-name">Login</span><span class="token exports"> </span><span class="token exports punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>I have an input form to collect data from users and pass that data to back-end. After the user hit the <code>Login</code> button, this <code>handleSubmit</code> function will be called.</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function-variable function" style="color:#d73a49">handleSubmit</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token parameter">e</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">preventDefault</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> email</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> password </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">state</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> handelUserData </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">props</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">submitted</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">email </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> password</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">password</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">shortPassword</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">loading</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">shortPassword</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  authenticationService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">login</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">email</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> password</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">unmount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">loading</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">handelUserData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It basically validates all the user input and action. If everything looks good, it will pass the user's email and password to back-end, otherwise, it will tell the user there is something wrong.</p><p>It also uses <code>authenticationService</code> for login API call. We will talk about that later. The <code>Signup</code> page is almost the same. You can check my repo for more details.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="homepage">HomePage<a href="#homepage" class="hash-link" aria-label="Direct link to HomePage" title="Direct link to HomePage">​</a></h3><p>After login, the user will be navigated to <code>HomePage</code>.</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Component</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Display</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">InitCharacter</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../components"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./style.css"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">HomePage</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Component</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">componentDidMount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> handelUserData</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">props</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">props</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">history</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/login"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">handelUserData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">render</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gear</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> currentUser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> handelUserData </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">props</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">React.Fragment</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">basic</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">name</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"nousername"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">h2</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              LV.</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">level</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">name</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">h2</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">name</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"nousername"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Display</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">basic</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">data</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">data</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">gear</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">gear</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">name</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"nousername"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">InitCharacter</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">basic</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">currentUser</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">currentUser</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">data</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">data</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">handelUserData</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">handelUserData</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">            </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">React.Fragment</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token exports punctuation" style="color:#393A34">{</span><span class="token exports"> </span><span class="token exports maybe-class-name">HomePage</span><span class="token exports"> </span><span class="token exports punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We have two children components in <code>HomePage</code>:</p><ul><li><code>InitCharacter</code> to create a new character if this is the user's first time login.</li><li><code>Display</code> to display the user's character information, if the user already has one.</li></ul><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">name</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"nousername"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Display</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">basic</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">data</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">data</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">gear</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">gear</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">name</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"nousername"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">InitCharacter</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">basic</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">currentUser</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">currentUser</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">data</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">data</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">handelUserData</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">handelUserData</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">    </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We will store the user's information in the <code>state</code> of <code>App</code>. If the user doesn't have a character name, we will show <code>Display</code> component, otherwise, we will show <code>InitCharacter</code> component.</p><p>You can check <a href="https://github.com/gobackhuoxing/first-web-game-lb4/tree/part6/firstgame-frontend/src/containers" target="_blank" rel="noopener noreferrer">here</a> for the code of <code>containers</code>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="components">Components<a href="#components" class="hash-link" aria-label="Direct link to Components" title="Direct link to Components">​</a></h3><p>Create a <code>component</code> folder in <code>src</code>. We will put all re-useable components here.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="initcharacter">InitCharacter<a href="#initcharacter" class="hash-link" aria-label="Direct link to InitCharacter" title="Direct link to InitCharacter">​</a></h4><p><img loading="lazy" alt="init" src="/blog/assets/images/building-online-game-pt6-init-c81bdd201c0c27375715cb272d421f3c.jpg" width="2364" height="1506" class="img_ev3q"></p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Component</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> userService</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> gearList </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../services"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./style.css"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">InitCharacter</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Component</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  unmount </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">props</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">props</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">state</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">error</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">submitted</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">loading</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">lastClick</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">handleChange</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">handleChange</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">handleSubmit</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">handleSubmit</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">componentWillUnmount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">unmount</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">handleChange</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">target</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> value </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function-variable function" style="color:#d73a49">handleSubmit</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token parameter">e</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">preventDefault</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lastClick </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">state</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> currentUser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> handelUserData </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">props</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">submitted</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">name </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">lastClick</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">loading</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> gear </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">switch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lastClick</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"1"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        gear </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">weapon</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> gearList</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">weapons</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">guideBookJunior</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">armor</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> gearList</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">armors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">silkRobe</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">skill</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> gearList</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">skills</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">sacrifice</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"2"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        gear </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">weapon</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> gearList</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">weapons</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">surgicalDagger</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">armor</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> gearList</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">armors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">labCoat</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">skill</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> gearList</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">skills</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">bloodLetting</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"3"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        gear </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">weapon</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> gearList</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">weapons</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">rustyShortSword</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">armor</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> gearList</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">armors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">chainArmor</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">skill</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> gearList</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">skills</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">slap</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword module" style="color:#00009f">default</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    userService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">initCharacter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">currentUser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gear</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">handelUserData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function-variable function" style="color:#d73a49">handelClick</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token parameter">e</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> lastClick </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">state</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">target</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">classList</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toggle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"open"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lastClick</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> lastClick</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">classList</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toggle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"open"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">unmount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">lastClick</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">target</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">render</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> submitted</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> loading </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">state</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">React.Fragment</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">panels</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">panel panel1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript keyword" style="color:#00009f">this</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript property-access" style="color:#00009f">handelClick</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">p</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">classes</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Demon Scholar</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">2</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">panel panel2</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript keyword" style="color:#00009f">this</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript property-access" style="color:#00009f">handelClick</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">p</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">classes</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Plague Doctor</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">3</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">panel panel3</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript keyword" style="color:#00009f">this</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript property-access" style="color:#00009f">handelClick</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">p</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">classes knight</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Knight of Madness</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">form</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">form</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">onSubmit</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript keyword" style="color:#00009f">this</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript property-access" style="color:#00009f">handleSubmit</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">form-group</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">label</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">text</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">htmlFor</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">name</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              Character Name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">label</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">input</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">type</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">name</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">form-control</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">name</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">name</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">onChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript keyword" style="color:#00009f">this</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript property-access" style="color:#00009f">handleChange</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">            </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">submitted </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">name </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">alert alert-danger</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                Character name is required</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">form-group button</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">btn btn-primary button</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">disabled</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">loading</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              Start</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">form</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">React.Fragment</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token exports punctuation" style="color:#393A34">{</span><span class="token exports"> </span><span class="token exports maybe-class-name">InitCharacter</span><span class="token exports"> </span><span class="token exports punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>I have three classes for a user to choose from. If the user clicks one of the classes, the <code>handelClick</code> function will store that one in <code>state</code>. Then we call <code>userService.initCharacter</code> to create a new character.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="display">Display<a href="#display" class="hash-link" aria-label="Direct link to Display" title="Direct link to Display">​</a></h4><p>If the user has one character, we will jump to <code>Display</code> page to show all of the user information.</p><p><img loading="lazy" alt="display" src="/blog/assets/images/building-online-game-pt6-display-e3f8100212370b9cc761f964e3bd58fb.jpg" width="2348" height="1064" class="img_ev3q"></p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Component</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">DropdownButton</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">Dropdown</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">Table</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react-bootstrap"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./style.css"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Display</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Component</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">render</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gear </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">props</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">React.Fragment</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Table</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">striped</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">bordered</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">hover</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">variant</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">dark</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">tbody</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">tr</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">EXP</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">currentExp</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text">/</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">nextLevelExp</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">tr</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">tr</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">HP</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">currentHealth</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text">/</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">maxHealth</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">tr</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">tr</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">MP</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">currentMana</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text">/</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">maxMana</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">tr</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">tr</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Attack</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">attack</span><span class="token punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">tr</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">tr</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">defence</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">defence</span><span class="token punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">tr</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">tr</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">DropdownButton</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                  </span><span class="token tag attr-name" style="color:#00a4db">title</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">weapon</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                  </span><span class="token tag attr-name" style="color:#00a4db">variant</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">danger</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                  </span><span class="token tag attr-name" style="color:#00a4db">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">weapon</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                  </span><span class="token tag attr-name" style="color:#00a4db">key</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">weapon</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"no weapon"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">eventKey</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"no weapon"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">eventKey</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">name</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"> </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"no weapon"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">eventKey</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                      Attack: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">attack</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">" "</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"no weapon"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">eventKey</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                      Defence: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">defence</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">" "</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">DropdownButton</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">DropdownButton</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                  </span><span class="token tag attr-name" style="color:#00a4db">title</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">armor</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                  </span><span class="token tag attr-name" style="color:#00a4db">variant</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">primary</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                  </span><span class="token tag attr-name" style="color:#00a4db">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">armor</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                  </span><span class="token tag attr-name" style="color:#00a4db">key</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">armor</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"no armor"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">eventKey</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"no armor"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">eventKey</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">name</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"> </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"no armor"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">eventKey</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                      Attack: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">attack</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">" "</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"no armor"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">eventKey</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                      Defence: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">defence</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">" "</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">DropdownButton</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">DropdownButton</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                  </span><span class="token tag attr-name" style="color:#00a4db">title</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">skill</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                  </span><span class="token tag attr-name" style="color:#00a4db">variant</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">success</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                  </span><span class="token tag attr-name" style="color:#00a4db">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">skill</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                  </span><span class="token tag attr-name" style="color:#00a4db">key</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">skill</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"no skill"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">eventKey</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">2</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"no skill"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">eventKey</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">name</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"> </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"no skill"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">eventKey</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                      Attack: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">attack</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">" "</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"no skill"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">eventKey</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                      Cost: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">gear</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">cost</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">" "</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Dropdown.Item</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">DropdownButton</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">th</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">tr</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">tbody</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Table</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">React.Fragment</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token exports punctuation" style="color:#393A34">{</span><span class="token exports"> </span><span class="token exports maybe-class-name">Display</span><span class="token exports"> </span><span class="token exports punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In <code>HomePage</code>, we passed <code>data</code> and <code>gear</code> to <code>Display</code> like this:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Display</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">basic</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">data</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">data</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">gear</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">gear</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then, in <code>Display</code>, we receive them by using <code>props</code></p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gear </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">props</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Here I use a library called <code>react-bootstrap</code> to decorate this component. Feel free to use anything you like. That is an advantage of React. You can use almost any library you want with React.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="services">Services<a href="#services" class="hash-link" aria-label="Direct link to Services" title="Direct link to Services">​</a></h3><p>Create <code>services</code> folder in <code>src</code>. Here is where all API calls happen.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="authenticationservice"><code>authenticationService</code><a href="#authenticationservice" class="hash-link" aria-label="Direct link to authenticationservice" title="Direct link to authenticationservice">​</a></h4><p><code>authenticationService</code> is for all authentication API calls.</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> apiService </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./APIServices"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> authenticationService </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  login</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  signup</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  logout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> axios </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"axios"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">login</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">email</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> password</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">email</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> email</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">password</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> password</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> header </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"Content-Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"application/json"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> axios</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">post</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apiService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">login</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> header</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">response</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token dom variable" style="color:#36acaa">localStorage</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setItem</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"currentUser"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">token</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">props</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">history</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">unmount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> error </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">signup</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">email</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> password</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> header </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"Content-Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"application/json"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">email</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> email</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">password</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> password</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"nousername"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> axios</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">post</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apiService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">character</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> header</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">props</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">history</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/login"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">unmount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> error </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">logout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"logout"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token dom variable" style="color:#36acaa">localStorage</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">removeItem</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"currentUser"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We are using a library called <a href="https://www.npmjs.com/package/axios" target="_blank" rel="noopener noreferrer">axios</a> to do all API calls. The basic syntax is like this:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">axios.get/post/put/patch(&lt;Your_URL&gt;,&lt;Your_body&gt;,&lt;your_header&gt;)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In the login function:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">axios</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">post</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apiService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">login</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> header</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">response</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token dom variable" style="color:#36acaa">localStorage</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setItem</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"currentUser"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">token</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">props</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">history</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">unmount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> error </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We store the token in <code>localStorage</code>. Then we jump to the <code>HomePage</code>. <code>self.props.history.push("/")</code> is how we navigate between different components by using <code>react-router-dom</code>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="userservice"><code>userService</code><a href="#userservice" class="hash-link" aria-label="Direct link to userservice" title="Direct link to userservice">​</a></h4><p><code>userService</code> handles all API calls that related to users, like change name and fetch user data.</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> authenticationService </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./AuthServices"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> apiService </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./APIServices"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> userService </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  getUserData</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  getGearData</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  changeCharacterName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  initCharacter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  changeWeapon</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  changeArmor</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  changeSkill</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> axios </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"axios"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getUserData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">currentUser</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  axios</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apiService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">character</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">headers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">Authorization</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Bearer </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">currentUser</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">response</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">data</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">data</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      authenticationService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">logout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getGearData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">currentUser</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  axios</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apiService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">updatecharacter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">headers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">Authorization</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Bearer </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">currentUser</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">response</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">gear</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">data</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      authenticationService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">logout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">changeCharacterName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">currentUser</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> name</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  axios</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">patch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apiService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">changename</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">headers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">Authorization</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Bearer </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">currentUser</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">response</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">statusCode</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">401</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        authenticationService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">logout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">unmount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> error </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">initCharacter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">currentUser</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> name</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> gear</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    gear</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> axios</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">patch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apiService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">initCharacter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">headers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">Authorization</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Bearer </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">currentUser</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">response</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">statusCode</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">401</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        authenticationService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">logout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">unmount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> error </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">changeWeapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">currentUser</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> gear</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  axios</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">patch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apiService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">updateweapon</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gear</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">weapon</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">headers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">Authorization</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Bearer </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">currentUser</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">response</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">statusCode</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">401</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        authenticationService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">logout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">unmount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> error </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">changeArmor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">currentUser</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> gear</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  axios</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">patch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apiService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">updatearmor</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gear</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">armor</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">headers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">Authorization</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Bearer </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">currentUser</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">response</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">statusCode</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">401</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        authenticationService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">logout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">unmount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> error </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">changeSkill</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">currentUser</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> gear</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  axios</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">patch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apiService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">updateskill</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gear</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">skill</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">headers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">Authorization</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Bearer </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">currentUser</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">response</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">statusCode</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">401</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        authenticationService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">logout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">unmount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> error </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can check <a href="https://github.com/gobackhuoxing/first-web-game-lb4/tree/part6/firstgame-frontend/src/services" target="_blank" rel="noopener noreferrer">here</a> for the code of <code>Services</code>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="applying-this-to-your-own-project">Applying This to Your Own Project<a href="#applying-this-to-your-own-project" class="hash-link" aria-label="Direct link to Applying This to Your Own Project" title="Direct link to Applying This to Your Own Project">​</a></h3><p>In this episode, we covered how to create simple login, signup and home pages with React. We also learned how to connect front-end and back-end. React is the most popular front-end framework today. You can easily use it to create your own front-end UI. It doesn't have to be React and LoopBack. The basic idea is similar.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h3><p>Next time, we will extend our project on back-end APIs. So we can actually have something to play as a game.</p><p>In the meantime, learn more about LoopBack in <a href="https://strongloop.com/strongblog/tag_LoopBack.html" target="_blank" rel="noopener noreferrer">past blogs</a>.</p>]]></content>
        <author>
            <name>Wen Bo</name>
            <uri>https://github.com/gobackhuoxing</uri>
        </author>
        <category label="learning" term="learning"/>
        <category label="how-to" term="how-to"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learning LoopBack 4 Interceptors (Part 2) - Method Level and Class Level Interceptors]]></title>
        <id>https://loopback.io/blog/loopback4-interceptors-part2</id>
        <link href="https://loopback.io/blog/loopback4-interceptors-part2"/>
        <updated>2019-08-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p><a href="https://strongloop.com/strongblog/loopback4-interceptors-part1/" target="_blank" rel="noopener noreferrer">Previously</a>, we looked at how to add a global interceptor. In this article, we are going to build an application that validates the incoming request using class level and method level interceptors&nbsp;</p><p>For the complete application, you can go to this repo: <a href="https://github.com/dhmlau/loopback4-interceptors" target="_blank" rel="noopener noreferrer">https://github.com/dhmlau/loopback4-interceptors</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="lets-build-a-simple-orderapp">Let's Build a Simple Order&nbsp;App<a href="#lets-build-a-simple-orderapp" class="hash-link" aria-label="Direct link to Let's Build a Simple Order&nbsp;App" title="Direct link to Let's Build a Simple Order&nbsp;App">​</a></h2><p>If you want to skip this part, you can check out the <code>orginal-app</code> branch of this github repo: <a href="https://github.com/dhmlau/loopback4-interceptors/tree/original-app" target="_blank" rel="noopener noreferrer">https://github.com/dhmlau/loopback4-interceptors/tree/original-app</a>.</p><p>If you want to follow along, take these steps.</p><ol><li><p>Scaffold the app by calling <code>lb4 app loopback4-interceptors --yes</code></p></li><li><p>In the newly created project, create a file called <code>order.json</code> with the following content:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token property" style="color:#36acaa">"name"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Order"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token property" style="color:#36acaa">"base"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Entity"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token property" style="color:#36acaa">"properties"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"orderNum"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"id"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"required"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"customerNum"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"required"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"customerEmail"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"required"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"total"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"number"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"required"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Create the Order model by providing the above json file. Run <code>lb4 model --config order.json --yes</code></p></li><li><p>Create a DataSource with the in-memory connector. Run <code>lb4 datasource ds</code>.  Then select "In-memory db" as the type of connector. </p></li><li><p>Create a Repository and accept all defaults by running <code>lb4 repository</code> command.</p></li><li><p>Finally, create a controller. Follow the prompts as below:</p></li></ol><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ lb4 controller</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Controller class name: Order</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Controller Order will be created in src/controllers/order.controller.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? What kind of controller would you like to generate? REST Controller with CRUD functions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? What is the name of the model to use with this CRUD repository? Order</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? What is the name of your CRUD repository? OrderRepository</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? What is the type of your ID? string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? What is the base HTTP path name of the CRUD operations? /orders</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   create src/controllers/order.controller.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   update src/controllers/index.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Controller Order was created in src/controllers/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You now have a LoopBack application ready to run.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="creating-interceptor-function-for-validation">Creating Interceptor Function for Validation<a href="#creating-interceptor-function-for-validation" class="hash-link" aria-label="Direct link to Creating Interceptor Function for Validation" title="Direct link to Creating Interceptor Function for Validation">​</a></h2><p>What we're doing here is validating user inputs at the REST layer. Note that in real world, you should also consider validating data at the Repository level to ensure the validation is applied even when modifying data from places outside of controllers, e.g. tests or services running in background.</p><p>For the <code>POST /order</code> endpoint, we are going to validate the order before actually creating the order. The length of <code>orderNum</code> has to be 6, otherwise the order is not valid. </p><p>Let's define the interceptor function in the <code>OrderController</code> class&nbsp;just before the class is defined.&nbsp;</p><p>In <code>src/controllers/order.controller.ts</code>:&nbsp;</p><ol><li><p>Add this statement:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">intercept</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Interceptor</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/core'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Add the following function to validate order. &nbsp;</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> validateOrder</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">Interceptor</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">invocationCtx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> next</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'log: before-'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> invocationCtx</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">methodName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> order</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Order </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Order</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">invocationCtx</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">methodName </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'create'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">assign</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">order</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> invocationCtx</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">args</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">invocationCtx</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">methodName </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'updateById'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">assign</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">order</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> invocationCtx</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">args</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">order</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">orderNum</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpErrors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">InternalServerError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'Invalid order number'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">next</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="apply-intercept-decorator-at-the-method-level">Apply <code>@intercept</code> Decorator at the Method Level<a href="#apply-intercept-decorator-at-the-method-level" class="hash-link" aria-label="Direct link to apply-intercept-decorator-at-the-method-level" title="Direct link to apply-intercept-decorator-at-the-method-level">​</a></h2><p>After defining the interceptor function, you can now use this as a method-level or class-level decorator. For class-level interceptor, you just apply it on the class, like this.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">intercept</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">validateOrder</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">OrderController</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>However, we want the validation to run only when the order is being created, so the <code>@intercept</code> decorator will be applied at the method level. To do this, add the <code>@intercept</code> decorator on the method I want to intercept, i.e. the <code>POST</code> method:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">```ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@intercept(validateOrder) // &lt;--- add here</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@post('/orders', {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    responses: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    '200': {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        description: 'Order model instance',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        content: {'application/json': {schema: {'x-ts-type': Order}}},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">async create(@requestBody() order: Order): Promise&lt;Order&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="lets-experiment">Let's Experiment!&nbsp;<a href="#lets-experiment" class="hash-link" aria-label="Direct link to Let's Experiment!&nbsp;" title="Direct link to Let's Experiment!&nbsp;">​</a></h2><p>Now that the application is ready to go, start the app by running <code>npm start</code> command and go to the API Explorer: http://localhost:3000/explorer.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="calling-get-orderscount">Calling <code>GET /orders/count</code><a href="#calling-get-orderscount" class="hash-link" aria-label="Direct link to calling-get-orderscount" title="Direct link to calling-get-orderscount">​</a></h3><p>Since this method doesn't have the interceptor, when this endpoint is being called, there shouldn't be anything printed to the log.&nbsp;</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="calling-post-orders">Calling <code>POST /orders</code><a href="#calling-post-orders" class="hash-link" aria-label="Direct link to calling-post-orders" title="Direct link to calling-post-orders">​</a></h3><p>This is the method where the interceptor is applied to validate the order. Let's give it a try with a valid order.</p><div class="language-&nbsp; codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-&nbsp; codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "orderNum": "111111",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "customerNum": "12345",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "customerEmail": "aa@abc.com",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "total": 100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You should expect to get the HTTP 200 response code that the order has been created successfully.</p><p>Now try another order with <code>orderNum</code> is <code>11</code>. </p><div class="language-&nbsp; codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-&nbsp; codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "orderNum": "11",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "customerNum": "67890",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "customerEmail": "bb@abc.com",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "total": 1000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You should expect a HTTP 500 error with message saying "Internal Server Error".</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="resources">Resources<a href="#resources" class="hash-link" aria-label="Direct link to Resources" title="Direct link to Resources">​</a></h2><ul><li><a href="https://loopback.io/doc/en/lb4/Interceptors.html" target="_blank" rel="noopener noreferrer">Interceptor docs page</a></li><li><a href="https://github.com/strongloop/loopback-next/tree/master/examples/greeting-app" target="_blank" rel="noopener noreferrer">Caching enabled via interceptors in Greeter application</a></li><li><a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt4/" target="_blank" rel="noopener noreferrer">Authorization added using interceptors in this tutorial</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Joining</a> our user group.</li></ul>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="learning" term="learning"/>
        <category label="interceptor" term="interceptor"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Congratulations to LoopBack, Winner of 2019 API Award for API Middleware]]></title>
        <id>https://loopback.io/blog/loopback-2019-api-award-api-middleware</id>
        <link href="https://loopback.io/blog/loopback-2019-api-award-api-middleware"/>
        <updated>2019-08-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>We're excited to congratulate the LoopBack team for earning the 2019 API Award for the "Best in API Middleware" category. <a href="https://loopback.io/" target="_blank" rel="noopener noreferrer">LoopBack</a> is a highly extensible, open source Node.js framework based on Express that enables you to quickly create dynamic end-to-end REST APIs and connect to backend systems such as databases and SOAP or REST services.</p><p>The 2019 API Awards celebrate the technical innovation, adoption, and reception in the API &amp; Microservices industries and use by a global developer community. The 2019 API Awards will be presented at the 2019 API Awards Ceremony during the first day of <a href="https://apiworld.co/" target="_blank" rel="noopener noreferrer">API World 2019</a> (Oct 8-10, 2019, San Jose Convention Center), the world’s largest API &amp; Microservices conference &amp; expo -- the largest event for the API economy -- in its 8th year, with over 3,500 attendees.</p><p><img loading="lazy" alt="2019 API Awards - Middleware" src="/blog/assets/images/API-Middleware-0f7f8d6d53739fb220a3443dda364cdb.jpg" width="3333" height="1667" class="img_ev3q"></p><p>The 2019 API Awards received hundreds of nominations, and the Advisory Board to the API Awards selected LoopBack based on three criteria: </p><ul><li>attracting notable attention and awareness in the API industry</li><li>general regard and use by the developer and engineering community</li><li>being a leader in its sector for innovation</li></ul><blockquote><p>"IBM is a shining example of the API technologies now empowering developers &amp; engineers to build upon the backbone of the multi-trillion-dollar market for API-driven products and services. Today’s cloud-based software and hardware increasingly runs on an open ecosystem of API-centric architecture, and IBM’s win here at the 2019 API Awards is evidence of their leading role in the growth of the API Economy,” said Jonathan Pasky, Executive Producer &amp; Co-Founder of DevNetwork, producer of API Word &amp; the 2019 API Awards.</p></blockquote><p>The LoopBack team is proud that all of their hard work on LoopBack is being recognized by the larger Node.js community.</p><p>"We're thrilled and honored to receive the Best in API Middleware 2019 award from API World," said Raymond Feng, co-creator and architect for LoopBack. "It's indeed a great recognition and validation of the LoopBack framework, team and community."</p><p>Feng continued, "Six and half years ago, the team created LoopBack at StrongLoop with the goal to help fellow developers kick off their API journey with the ideal Node.js platform. With the support of the fantastic Node.js ecosystem, the team built on top of open source modules such as Express and made it incredibly simple to create REST APIs out of existing datasources and services."</p><p>"The StrongLoop team's bet on open APIs and Node.js was right. The project and community have grown significantly."</p><p>"The StrongLoop team joined with IBM API Connect team in 2015 to better position LoopBack as a strategic open source project. LoopBack 4 is the second generation of the framework. Version 4 incorporates what the team has learned with new standards and technologies such as TypeScript, OpenAPI, GraphQL, and cloud-native microservices to build a foundation for even greater flexibility, extensibility, composablity, and scalability."</p><p>"More and more features are shipped and being built by us and the community. The LoopBack team strive to bring best practices and tools. We love Github stars. It's simply rewarding to create something valuable for the open source community!" concluded Feng.</p><p>See the official announcement and read about other winners <a href="https://apiworld.co/2019-api-award-winners-announced/" target="_blank" rel="noopener noreferrer">here</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>You can help shape the future of LoopBack with your support and engagement! You can help make LoopBack even better and meaningful for your API creation experience by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Joining</a> our user group.</li></ul>]]></content>
        <author>
            <name>Dave Whiteley</name>
            <uri>https://github.com/DaveYVR</uri>
        </author>
        <category label="community" term="community"/>
        <category label="event" term="event"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 July 2019 Milestone Update]]></title>
        <id>https://loopback.io/blog/july-2019-milestone</id>
        <link href="https://loopback.io/blog/july-2019-milestone"/>
        <updated>2019-08-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>This July 20th was the 50th anniversary of The Moon Landing and the famous quote, "That's one small step for man, one giant leap for mankind." This great, memorable event reminds me that every task the LoopBack team finishes will end up enhancing our project. From starting to build new features such as <code>inclusion</code>, to enriching the documentation, we believe that we are making LoopBack better by taking all these small steps!</p><p>We finished up 85 story points this month. See the <a href="https://github.com/strongloop/loopback-next/issues/3241" target="_blank" rel="noopener noreferrer">July milestone</a> for an overview of what we have worked on, and read on for more details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="improvements-of-developer-experience">Improvements of Developer Experience<a href="#improvements-of-developer-experience" class="hash-link" aria-label="Direct link to Improvements of Developer Experience" title="Direct link to Improvements of Developer Experience">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="improvement-of-loopbackcli">Improvement of @loopback/cli<a href="#improvement-of-loopbackcli" class="hash-link" aria-label="Direct link to Improvement of @loopback/cli" title="Direct link to Improvement of @loopback/cli">​</a></h3><ul><li><p>The original CLI version is now stored in the <code> .yo.rc.json</code> file. This allows users to check the version of CLI when upgrading their dependencies. See <a href="https://github.com/strongloop/loopback-next/pull/3338" target="_blank" rel="noopener noreferrer">PR #3338</a> for details.</p></li><li><p>We refactored the way that the property generator is invoked in the model generator. Now when generating a new model, the loop prompts for adding properties are more robust. See <a href="https://github.com/strongloop/generator-loopback/pull/412" target="_blank" rel="noopener noreferrer">PR #412</a> for more information. </p></li><li><p>For the CLI <code>lb4 app</code> can now handle a hyphened path and will generate default names properly. See <a href="https://github.com/strongloop/loopback-next/issues/2092" target="_blank" rel="noopener noreferrer">PR #2092</a> for more details.</p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-features-in-loopbackcontext">New Features in @loopback/context<a href="#new-features-in-loopbackcontext" class="hash-link" aria-label="Direct link to New Features in @loopback/context" title="Direct link to New Features in @loopback/context">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="config-decorator"><code>@config</code> Decorator<a href="#config-decorator" class="hash-link" aria-label="Direct link to config-decorator" title="Direct link to config-decorator">​</a></h4><p>In <a href="https://github.com/strongloop/loopback-next/pull/3329" target="_blank" rel="noopener noreferrer">PR #3329</a>, we introduce new config metadata, which allows <code>@config.*</code> to be resolved from a binding other than the current one. For example, before we could inject <code>@config</code> this way:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyRestServer</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// injects `RestServerConfig.port` to the target</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">config</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'host'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    host</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now this kind of injection can be done this way:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyRestServer</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Inject the `rest.host` from the application config</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">config</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">fromBinding</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'application'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> propertyPath</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'rest.host'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    host</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="parameter-injection">Parameter Injection<a href="#parameter-injection" class="hash-link" aria-label="Direct link to Parameter Injection" title="Direct link to Parameter Injection">​</a></h4><p>The module <code>Context</code> didn't use the invocation context to resolve parameter injection. This might limit some use cases such as <code>@inceptors</code> which couldn't rebind new values. With this implementation, you can use <code>options.skipParameterInjection</code> to resolve parameter injection.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-options-for-json-schema-generation">New Options for JSON Schema Generation<a href="#new-options-for-json-schema-generation" class="hash-link" aria-label="Direct link to New Options for JSON Schema Generation" title="Direct link to New Options for JSON Schema Generation">​</a></h3><p>We enabled the <code>exclude</code> and <code>optional</code> options to <code>JsonSchemaOptions</code>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="exclude">Exclude<a href="#exclude" class="hash-link" aria-label="Direct link to Exclude" title="Direct link to Exclude">​</a></h4><p>The <code>exclude</code> option takes in an array of model properties which you can exclude from your <code>requestBody</code>. For example, you can exclude the <code>id</code> property from the body of a <code>POST</code> request:</p><p><code>POST /todos</code></p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">requestBody</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getModelSchemaRef</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Note</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">exclude</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  note</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Omit</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Note</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'id'</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Note</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Any new generated controllers scaffolded by <code>lb4 controller</code> will have the <code>id</code> property excluded by default. See <a href="https://github.com/strongloop/loopback-next/pull/3297/" target="_blank" rel="noopener noreferrer">PR #3297</a> for details.</p><p>We also added support for excluding a custom primary key name (not the default <code>id</code>) in <a href="https://github.com/strongloop/loopback-next/pull/3347" target="_blank" rel="noopener noreferrer">PR #3347</a>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="optional">Optional<a href="#optional" class="hash-link" aria-label="Direct link to Optional" title="Direct link to Optional">​</a></h4><p>The <code>optional</code> option takes in an array of model properties which you can mark optional in your <code>requestBody</code>. For example, you can mark the foreign key property from the body of a <code>POST</code> request as optional:</p><p><code>POST /todo-lists/{id}/todos</code></p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">number</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">requestBody</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getModelSchemaRef</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Todo</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          exclude</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          optional</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'todoListId'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  todo</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Omit</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Todo</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'id'</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Todo</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If this option is set and is not empty, it will override the <code>partial</code> option. See <a href="https://github.com/strongloop/loopback-next/pull/3309" target="_blank" rel="noopener noreferrer">PR #3309</a> for details.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="simplifying-requestbody">Simplifying @requestBody<a href="#simplifying-requestbody" class="hash-link" aria-label="Direct link to Simplifying @requestBody" title="Direct link to Simplifying @requestBody">​</a></h3><p>The current <code>@requestBody()</code> only takes in an entire request body (with very nested content object) or infers the schema from the parameter type. To simplify the signature so that users can describe the schema with concise configure options, we explored a new signature in a <a href="https://github.com/strongloop/loopback-next/issues/2654" target="_blank" rel="noopener noreferrer">spike story</a>: <code>@requestBody(spec, model, schemaOptions)</code>. Most of the discussions are tracked in <a href="https://github.com/strongloop/loopback-next/pull/3398" target="_blank" rel="noopener noreferrer">PR #3398</a>, and additional opinions and feedback are welcomed before we start implementing the simplified decorator.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="adding-cloud-native-features">Adding Cloud Native Features<a href="#adding-cloud-native-features" class="hash-link" aria-label="Direct link to Adding Cloud Native Features" title="Direct link to Adding Cloud Native Features">​</a></h3><p>To provide observability for LoopBack 4 applications deployed to a cloud environment, we start to add more integrations to expose health, metrics, and distributed tracing data. These packages are positioned as extensions to the framework.</p><p>The <a href="https://github.com/strongloop/loopback-next/tree/master/extensions/health" target="_blank" rel="noopener noreferrer">Health extension</a> has been released as an experimental feature. Two more PRs are up for review:</p><ul><li>Metrics extension for <a href="https://prometheus.io/" target="_blank" rel="noopener noreferrer">Prometheus</a><ul><li><a href="https://github.com/strongloop/loopback-next/pull/3339" target="_blank" rel="noopener noreferrer">strongloop/loopback-next#3339</a></li></ul></li><li>OpenTracing extension based on <a href="https://www.jaegertracing.io/" target="_blank" rel="noopener noreferrer">Jaeger</a><ul><li><a href="https://github.com/strongloop/loopback-next/pull/3389" target="_blank" rel="noopener noreferrer">strongloop/loopback-next#3389</a></li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation-improvements">Documentation Improvements<a href="#documentation-improvements" class="hash-link" aria-label="Direct link to Documentation Improvements" title="Direct link to Documentation Improvements">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="more-detailed-content-for-model-and-property-decorators">More Detailed Content for <code>@model</code> and <code>@property</code> Decorators<a href="#more-detailed-content-for-model-and-property-decorators" class="hash-link" aria-label="Direct link to more-detailed-content-for-model-and-property-decorators" title="Direct link to more-detailed-content-for-model-and-property-decorators">​</a></h3><p>As we always try to beef up the documentation for LB4, this month we improved docs of the decorators <a href="https://loopback.io/doc/en/lb4/Model.html#model-decorator" target="_blank" rel="noopener noreferrer"><code>@model</code></a> and <a href="https://loopback.io/doc/en/lb4/Model.html#property-decorator" target="_blank" rel="noopener noreferrer"><code>@property</code></a>. Before we were simply using docs from LB3 site. However, since the implementation structures are different for LB3 and LB4, some parts of the docs are not precise or correct for LB4. We updated the documentation with more details and pointed out the differences between LB3 and LB4. We also added more links so that users can find more references and join the dicussion on GitHub with us. More details are in <a href="https://github.com/strongloop/loopback-next/pull/3354" target="_blank" rel="noopener noreferrer">PR #3354</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="supporting-and-documenting-transactions">Supporting and Documenting Transactions<a href="#supporting-and-documenting-transactions" class="hash-link" aria-label="Direct link to Supporting and Documenting Transactions" title="Direct link to Supporting and Documenting Transactions">​</a></h3><p>We also worked on bridging the gap between LoopBack 3 and 4 in terms of exposing transactions from repositories in <a href="https://github.com/strongloop/loopback-next/pull/3397" target="_blank" rel="noopener noreferrer">PR #3397</a>. We've introduced sugar API <code>beginTransaction()</code>
at the repository level, which delegates work to the data source that belongs to it to start a transaction. </p><p>With it, we've created <code>TransactionalRepository</code> interface that is meant to be used with connectors that support transactions and <code>DefaultTransactionalRepository</code> which can be used for CRUD repositories that support transactions. Once a transaction object is obtained from <code>beginTransaction()</code>, it can be passed into any CRUD calls made for the models attached to the backing datasource. The user can then either call <code>commit()</code> or <code>rollback()</code> actions for the transaction object to persist or revert the changes made. </p><p>Note that only select SQL connectors support transactions to use this feature. For more information, check out the <a href="https://loopback.io/doc/en/lb4/Using-database-transactions.html" target="_blank" rel="noopener noreferrer">documentation</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="connector-reference">Connector Reference<a href="#connector-reference" class="hash-link" aria-label="Direct link to Connector Reference" title="Direct link to Connector Reference">​</a></h3><p><a href="https://loopback.io/doc/en/lb3/Connectors-reference.html" target="_blank" rel="noopener noreferrer">Connector reference</a> pages that were missing in the LoopBack 4 docs have been added now. Check <a href="https://github.com/strongloop/loopback-next/issues/2598" target="_blank" rel="noopener noreferrer">issue #2598</a> for more details.  </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="code-base-improvements">Code Base Improvements<a href="#code-base-improvements" class="hash-link" aria-label="Direct link to Code Base Improvements" title="Direct link to Code Base Improvements">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="running-shared-tests-in-connectors">Running Shared Tests in Connectors<a href="#running-shared-tests-in-connectors" class="hash-link" aria-label="Direct link to Running Shared Tests in Connectors" title="Direct link to Running Shared Tests in Connectors">​</a></h3><p>This month we continued refactoring the tests for <code>mysql</code>, <code>mssql</code>, and <code>oracle</code> connectors in LoopBack 3 so that they can run the imported juggler tests in both 3.x and 4.x versions. Now our <code>mongodb</code>, <code>postgresql</code>, <code>kv-redis</code>, <code>cloudant</code>, <code>mysql</code>, <code>mssql</code>, and <code>oracle</code> connectors run shared tests. </p><ul><li>For <code>mysql</code>, see <a href="https://github.com/strongloop/loopback-connector-mysql/pull/390" target="_blank" rel="noopener noreferrer">PR #390</a>.</li><li>For <code>mssql</code>, see <a href="https://github.com/strongloop/loopback-connector-mssql/pull/205" target="_blank" rel="noopener noreferrer">PR #205</a>.</li><li>For <code>oracle</code>, see <a href="https://github.com/strongloop/loopback-connector-oracle/pull/180" target="_blank" rel="noopener noreferrer">PR #180</a>.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="fixing-ci-failures">Fixing CI Failures<a href="#fixing-ci-failures" class="hash-link" aria-label="Direct link to Fixing CI Failures" title="Direct link to Fixing CI Failures">​</a></h3><ul><li>For <code>dashdb</code> see <a href="https://github.com/strongloop/loopback-connector-dashdb/pull/81" target="_blank" rel="noopener noreferrer">PR #81</a> and <a href="https://github.com/strongloop/loopback-connector-dashdb/pull/82" target="_blank" rel="noopener noreferrer">PR #82</a></li><li>For <code>db2</code> see <a href="https://github.com/strongloop/loopback-connector-db2/pull/135" target="_blank" rel="noopener noreferrer">PR #135</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-changes">Other Changes<a href="#other-changes" class="hash-link" aria-label="Direct link to Other Changes" title="Direct link to Other Changes">​</a></h2><ul><li><p>We updated our templates and existing examples to leverage <code>getModelSchemaRef</code> in <a href="https://github.com/strongloop/loopback-next/pull/3402" target="_blank" rel="noopener noreferrer">PR #3402</a>.</p></li><li><p>We updated our <code>oracle</code> connector to <code>oracledb</code> v4.0.0 in <a href="https://github.com/strongloop/loopback-connector-oracle/pull/186" target="_blank" rel="noopener noreferrer">PR #186</a>.</p></li><li><p>We tested/enabled Node.js 12 for some of our connectors. </p><ul><li>For SQL connectors, see the PRs in <a href="https://github.com/strongloop/loopback-next/issues/3110" target="_blank" rel="noopener noreferrer">issue #3110</a>.</li><li>For NoSQL connectors, see the PRs in <a href="https://github.com/strongloop/loopback-next/issues/3111" target="_blank" rel="noopener noreferrer">issue #3111</a>.</li><li>For service connectors, see the PRs in <a href="https://github.com/strongloop/loopback-next/issues/3112" target="_blank" rel="noopener noreferrer">issue #3112</a>.</li></ul></li><li><p>We fixed an edge case where <code>replaceById</code> was not working for MongoDB database when the data came from the REST API layer. Check <a href="https://github.com/strongloop/loopback-next/pull/3431" target="_blank" rel="noopener noreferrer">issue #3431</a> and <a href="https://github.com/strongloop/loopback-datasource-juggler/pull/1759" target="_blank" rel="noopener noreferrer">issue #1759</a> for more details.</p></li><li><p>We removed the source code of <code>@loopback/openapi-v3-types</code> package from our monorepo. This package was deprecated last month in favor of <a href="https://www.npmjs.com/package/openapi3-ts" target="_blank" rel="noopener noreferrer"><code>openapi3-ts</code></a> and <a href="https://www.npmjs.com/package/@loopback/openapi-v3" target="_blank" rel="noopener noreferrer"><code>@loopback/openapi-v3</code></a>. Check <a href="https://github.com/strongloop/loopback-next/pull/3385" target="_blank" rel="noopener noreferrer">PR #3385</a> for more details.</p></li><li><p>We fixed automigrate &amp; autoupdate to wait until the datasource is connected to the database. This addressed a bug in the npm script <code>migrate</code> (scaffolded by <code>lb4 app</code>), where errors thrown by the database migration were not caught correctly and thus the script did not indicate the failure via a non-zero exit code. Check <a href="https://github.com/strongloop/loopback-datasource-juggler/pull/1756" target="_blank" rel="noopener noreferrer">issue #1756</a> for more details.</p></li><li><p>We improved the type definition of <code>toJSON</code> helper from <code>@loopback/testlab</code> to better support union types like <code>MyModel | null</code> (e.g. as returned by Repository <code>findOne</code> method). Check <a href="https://github.com/strongloop/loopback-next/pull/3283" target="_blank" rel="noopener noreferrer">PR #3823</a> for more details.</p></li><li><p>We fixed REST API to better handle the case where a custom <code>basePath</code> is configured via <code>app.basePath()</code> API. As a result, the <code>server</code> entry in OpenAPI spec now correctly includes the configured base path again. Check <a href="https://github.com/strongloop/loopback-next/pull/3266" target="_blank" rel="noopener noreferrer">PR #3266</a> for more details.</p></li><li><p>We fixed a MongoDB connector bug which caused the id from the input data object to be deleted. See <a href="https://github.com/strongloop/loopback-next/issues/3267" target="_blank" rel="noopener noreferrer">issue #3267</a> for more details.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-feature-on-the-way---inclusion-of-related-models">New Feature On The Way - Inclusion of Related Models<a href="#new-feature-on-the-way---inclusion-of-related-models" class="hash-link" aria-label="Direct link to New Feature On The Way - Inclusion of Related Models" title="Direct link to New Feature On The Way - Inclusion of Related Models">​</a></h2><p>After many weeks in making, Miroslav finally finished researching how to resolve included models when querying datasources. This concluded the spike <a href="https://github.com/strongloop/loopback-next/issues/2634" target="_blank" rel="noopener noreferrer">issue #2634</a>.</p><p>The essence:</p><ul><li>We will introduce a concept of <code>InclusionResolver</code> functions. These functions implement the logic for fetching related models.</li><li>Base repository classes (e.g. <code>DefaultCrudRepository</code>) will handle inclusions by calling resolvers registered for individual relations.</li><li>Model-specific repositories (e.g. <code>TodoRepository</code> scaffolded in your project) will register inclusion resolvers for relations that are allowed to be traversed.</li><li>LoopBack will provide built-in inclusion resolvers for each relation type we implement (<code>hasMany</code>, <code>belongsTo</code>, <code>hasOne</code> at the time of writing).</li></ul><p>The <a href="https://github.com/strongloop/loopback-next/pull/3387" target="_blank" rel="noopener noreferrer">spike PR #3387</a> shows a proof-of-concept implementation and includes high-level description of the proposed design in the <a href="https://github.com/strongloop/loopback-next/blob/spike/resolve-included-models/_SPIKE_.md" target="_blank" rel="noopener noreferrer">SPIKE document</a>, where you can find more details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="team-changes">Team Changes<a href="#team-changes" class="hash-link" aria-label="Direct link to Team Changes" title="Direct link to Team Changes">​</a></h2><p>Our LoopBack core maintainer <a href="https://github.com/b-admike" target="_blank" rel="noopener noreferrer">Biniam</a> is leaving to join the <a href="https://www.ibm.com/ca-en/marketplace/api-management" target="_blank" rel="noopener noreferrer">API Connect</a> team. His hard work and dedication were an important part of our team. We appreciate the inspiration he gave us and all the contributions he's made. We believe that he will do an outstanding job in the next phase of his career! </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="looking-for-user-references">Looking for User References<a href="#looking-for-user-references" class="hash-link" aria-label="Direct link to Looking for User References" title="Direct link to Looking for User References">​</a></h2><p>We have updated our <a href="https://loopback.io/" target="_blank" rel="noopener noreferrer">loopback.io</a> website with our users and their testimonials. If you would like to be a part of it, see the details in this <a href="https://github.com/strongloop/loopback-next/issues/3047" target="_blank" rel="noopener noreferrer">GitHub issue</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>If you're interested in what we're working on next, you can check out the <a href="https://github.com/strongloop/loopback-next/issues/3482" target="_blank" rel="noopener noreferrer">August milestone</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's future success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Here's how you can join us and help the project:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Report issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contribute</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Open a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Join</a> our user group.</li></ul>]]></content>
        <author>
            <name>Agnes Lin</name>
            <uri>https://github.com/agnes512</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learning LoopBack 4 Interceptors (Part 1) - Global Interceptors]]></title>
        <id>https://loopback.io/blog/loopback4-interceptors-part1</id>
        <link href="https://loopback.io/blog/loopback4-interceptors-part1"/>
        <updated>2019-07-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Wondering what an interceptor is in LoopBack 4?&nbsp;</p><blockquote><p>Interceptors are reusable functions to provide aspect-oriented logic around method invocations.&nbsp;</p></blockquote><p>Seems pretty useful, right? There are 3 levels of interceptors: global, class level and method level. In this article, we are going to look into what a global interceptor is and how to use it. </p><p>Global interceptors are automatically called for all controller methods. They are called first, before interceptors specified at class and method level. You can insert additional logic before and after method invocation through <a href="https://loopback.io/doc/en/lb4/Interceptors.html" target="_blank" rel="noopener noreferrer">interceptors</a>. Examples of using global interceptors are <a href="https://github.com/strongloop/loopback-next/tree/master/examples/greeting-app" target="_blank" rel="noopener noreferrer">caching</a> and <a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt4/" target="_blank" rel="noopener noreferrer">authorization</a>.</p><p>For the sake of illustration, we'll use global interceptors for logging purposes using the default <code>/ping</code> endpoint that comes with all scaffolded LB4 application. Note that interceptors are not the best tool for logging. It's usually better to implement logging as a new sequence action, as we demonstrate in our <a href="https://github.com/strongloop/loopback-next/tree/master/examples/log-extension" target="_blank" rel="noopener noreferrer">log extension example</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="creating-a-global-interceptor">Creating a Global Interceptor<a href="#creating-a-global-interceptor" class="hash-link" aria-label="Direct link to Creating a Global Interceptor" title="Direct link to Creating a Global Interceptor">​</a></h2><p>After you've scaffolded the application, run <code>lb4 interceptor</code> command to create an interceptor. Since we are going to have one global interceptor, leave the <code>group name for the global interceptor</code> as an empty string which is the default value.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ lb4 interceptor</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Interceptor name: logging</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Is it a global interceptor? Yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Global interceptors are sorted by the order of an array of group names bound</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">to ContextBindings.GLOBAL_INTERCEPTOR_ORDERED_GROUPS. See </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">https://loopback.io/doc/en/lb4/Interceptors.html#order-of-invocation-for-interceptors.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Group name for the global interceptor: ('')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">create src/interceptors/logging.interceptor.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">update src/interceptors/index.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Interceptor Logging was created in src/interceptors/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="adding-logic-to-the-logging-interceptor">Adding Logic to the Logging Interceptor<a href="#adding-logic-to-the-logging-interceptor" class="hash-link" aria-label="Direct link to Adding Logic to the Logging Interceptor" title="Direct link to Adding Logic to the Logging Interceptor">​</a></h2><p>Let's take a look at the generated interceptor. </p><p>Go to <code>src/interceptors/logging.interceptor.ts</code>. You'll see two comments in the try-catch block where you can add your logic: pre-invocation and post-invocation.&nbsp;We are going to simply print out the method name of the invocationContext before and after the method is being invoked.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  // Add pre-invocation logic here</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  // ----- ADDED THIS LINE ----</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console.log('log: before-' + invocationCtx.targetName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  const result = await next();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  // Add post-invocation logic here</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  // ----- ADDED THIS LINE -----</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console.log('log: after-' + invocationCtx.targetName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  return result;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} catch (err) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  // Add error handling logic here</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console.error(err);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  throw err;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="global-interceptor-inaction">Global Interceptor in&nbsp;Action<a href="#global-interceptor-inaction" class="hash-link" aria-label="Direct link to Global Interceptor in&nbsp;Action" title="Direct link to Global Interceptor in&nbsp;Action">​</a></h2><p>That's it! The global interceptor is ready for action. </p><p>Start the application with <code>npm start</code> command. Then go to the API Explorer: http://localhost:3000/explorer.</p><p>You'll now see the following printed to the console:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">log: before-ExplorerController.prototype.index</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">log: after-ExplorerController.prototype.index</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Next, call the <code>/ping</code> endpoint by clicking "Try it Out" &gt; "Execute". You'll see two more lines got printed:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">log: before-PingController.prototype.ping</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">log: after-PingController.prototype.ping</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The interceptor method was called because it is at the global level.&nbsp;</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="getting-httprequest-from-invocationcontext">Getting HttpRequest from InvocationContext<a href="#getting-httprequest-from-invocationcontext" class="hash-link" aria-label="Direct link to Getting HttpRequest from InvocationContext" title="Direct link to Getting HttpRequest from InvocationContext">​</a></h2><p>For more meaningful log messages, you might want to get more information about the HTTP request. To do that, add this import in the interceptor class:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import {RestBindings} from '@loopback/rest';</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We're going to print out the endpoint being called. To do that, add the snippet below as the pre-invocation logic:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">const httpReq = await invocationCtx.get(RestBindings.Http.REQUEST, {optional: true,});</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if (httpReq) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console.log('Endpoint being called:', httpReq.path);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Restart the application, go to API Explorer and call the <code>/ping</code> endpoint again. You'll see the following printed to the console log:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">log: before-ExplorerController.prototype.index</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Endpoint being called: /explorer/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">log: after-ExplorerController.prototype.index</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">log: before-PingController.prototype.ping</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Endpoint being called: /ping</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">log: after-PingController.prototype.ping</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-resources">Other Resources<a href="#other-resources" class="hash-link" aria-label="Direct link to Other Resources" title="Direct link to Other Resources">​</a></h2><p>For other interceptor examples, check out: <a href="https://loopback.io/doc/en/lb4/Interceptors.html#example-interceptors" target="_blank" rel="noopener noreferrer">https://loopback.io/doc/en/lb4/Interceptors.html#example-interceptors</a></p><p>For running applications that use interceptors, see:</p><ul><li>Caching enabled via interceptors in Greeter application, <a href="https://github.com/strongloop/loopback-next/tree/master/examples/greeting-app" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/tree/master/examples/greeting-app</a></li><li>Authorization added using interceptors in this tutorial, <a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt4/" target="_blank" rel="noopener noreferrer">https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt4/</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's future success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Joining</a> our user group.</li></ul>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="learning" term="learning"/>
        <category label="interceptor" term="interceptor"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building an Online Game With LoopBack 4 - Deploying our Application to Kubernetes on IBM Cloud (Part 5)]]></title>
        <id>https://loopback.io/blog/building-an-online-game-with-loopback-4-pt5</id>
        <link href="https://loopback.io/blog/building-an-online-game-with-loopback-4-pt5"/>
        <updated>2019-07-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="part-5-deploying-our-application-to-kubernetes-on-ibm-cloud">Part 5: Deploying our Application to Kubernetes on IBM Cloud<a href="#part-5-deploying-our-application-to-kubernetes-on-ibm-cloud" class="hash-link" aria-label="Direct link to Part 5: Deploying our Application to Kubernetes on IBM Cloud" title="Direct link to Part 5: Deploying our Application to Kubernetes on IBM Cloud">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="in-this-episode">In This Episode<a href="#in-this-episode" class="hash-link" aria-label="Direct link to In This Episode" title="Direct link to In This Episode">​</a></h3><p>Now that our project has basic features that allow us to create our own characters and log in, it's time to deploy it to cloud! So, we will first run our project in Docker and then push it to Kubernetes cluster on IBM Cloud.</p><p>Docker images are lightweight, portable, and self-sufficient. Once you create a Docker image, you can run it almost everywhere. On the other hand, Kubernetes will handle those high level concepts such as storage, network and scale-up.</p><p>You can check <a href="https://github.com/gobackhuoxing/first-web-game-lb4/tree/part5/firstgame" target="_blank" rel="noopener noreferrer">here</a> for the code from this episode.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h3><p>In this series, I’m going to help you learn LoopBack 4 and how to use it to easily build your own API and web project. We’ll create a new project I’ve been thinking about: an online web text-based adventure game. In this game, you can create your own account to build characters, fight monsters and find treasures. You will be able to control your character to take a variety of actions: attacking enemies, casting spells, and getting loot. This game also allows multiple players to log in and play with their friends.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="previously-on-building-an-online-game-with-loopback-4">Previously on Building an Online Game With LoopBack 4<a href="#previously-on-building-an-online-game-with-loopback-4" class="hash-link" aria-label="Direct link to Previously on Building an Online Game With LoopBack 4" title="Direct link to Previously on Building an Online Game With LoopBack 4">​</a></h3><p>In last episode, we covered how to combine your self-defined authorization strategies and services with <code>@loopback/authentication</code> and how to apply it to your API.</p><p>Here are the previous episodes:</p><ul><li><a href="https://strongloop.com/strongblog/building-online-game-with-loopback-4-pt1/" target="_blank" rel="noopener noreferrer">Part 1: Building a Simple LoopBack Project With MongoDB</a></li><li><a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt2/" target="_blank" rel="noopener noreferrer">Part 2: Generating Universally Unique ID and Managing Models Relationships</a></li><li><a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt3/" target="_blank" rel="noopener noreferrer">Part 3: Customizing APIs in Controller</a></li><li><a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt4/" target="_blank" rel="noopener noreferrer">Part 4: User Authentication and Role-Based Access Control</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a href="#prerequisites" class="hash-link" aria-label="Direct link to Prerequisites" title="Direct link to Prerequisites">​</a></h3><ul><li><a href="https://www.docker.com/" target="_blank" rel="noopener noreferrer">Docker</a></li><li><a href="https://kubernetes.io/" target="_blank" rel="noopener noreferrer">Kubernetes</a></li><li>Sign up for <a href="https://www.ibm.com/cloud/" target="_blank" rel="noopener noreferrer">IBM Cloud</a></li></ul><p>You don't have to fully understand those concepts before we start. I will show you how to use them step by step.</p><p><a href="https://www.youtube.com/watch?v=4ht22ReBjno" target="_blank" rel="noopener noreferrer">The Illustrated Children's Guide to Kubernetes</a> is a wonderful video on YouTube that can give you a clear idea of what is Kubernetes.</p><p><a href="https://loopback.io/doc/en/lb4/deploying_to_ibm_cloud_kubernetes.html#prerequisite" target="_blank" rel="noopener noreferrer">Deploying to Kubernetes on IBM Cloud</a> is a tutorial on the official LoopBack 4 website. Because our project is a bit different and uses MongoDB, we need to set up MongoDB on cloud and connect our project to it.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="adding-docker-feature">Adding Docker Feature<a href="#adding-docker-feature" class="hash-link" aria-label="Direct link to Adding Docker Feature" title="Direct link to Adding Docker Feature">​</a></h3><p>In <a href="https://strongloop.com/strongblog/building-online-game-with-loopback-4-pt1/" target="_blank" rel="noopener noreferrer">Episode 1</a>, we disabled Docker when we created our project. Now we need to manually add the Docker feature.</p><p>In your project root, create a file called <code>Dockerfile</code>.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Check out https://hub.docker.com/_/node to select a new base image</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FROM node:10-slim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Set to a non-root built-in user `node`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">USER node</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Create app directory (with user `node`)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN mkdir -p /home/node/app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WORKDIR /home/node/app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Install app dependencies</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># A wildcard is used to ensure both package.json AND package-lock.json are copied</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># where available (npm@5+)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COPY --chown=node package*.json ./</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN npm install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Bundle app source code</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COPY --chown=node . .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN npm run build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Bind to all network interfaces so that it can be mapped to the host OS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ENV HOST=0.0.0.0 PORT=3000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EXPOSE ${PORT}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CMD [ "node", "." ]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then create a file called <code>.dockerignore</code>.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">node_modules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npm-debug.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dist</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>Dockerfile</code> and<code>.dockerignore</code> are two Docker-related files that are provided by LoopBack 4. We will use them to create a Docker image.</p><p>Open <code>package.json</code>, add two lines under <code>scripts</code>. Those are the commands to build and run Docker image.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">"docker:build": "docker build -t firstgame .",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"docker:run": "docker run -p 3000:3000 -d firstgame",</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="building-docker-image">Building Docker Image<a href="#building-docker-image" class="hash-link" aria-label="Direct link to Building Docker Image" title="Direct link to Building Docker Image">​</a></h3><p>Install <a href="https://www.docker.com/get-started" target="_blank" rel="noopener noreferrer">Docker</a> if you haven't already.</p><p>Run this command to create Docker image.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">npm run docker:build</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If it succeeds, you will see:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Successfully built 0b2c1ff52a2e</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Successfully tagged firstgame:latest</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Run this command to show all images:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker image ls</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You should see two images like this:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">firstgame           latest              0b2c1ff52a2e        44 seconds ago       430MB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node                10-slim             a41b78200d6f        6 days ago           148MB</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now, our image is ready to run. Run this command to create a container. A container is a running instance of an image.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">npm run docker:run</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Run this command to show all running containers.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker ps</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You will see:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">88cc8acfbeea        firstgame           "node ."            5 minutes ago       Up 5 minutes        0.0.0.0:3000-&gt;3000/tcp   friendly_archimedes</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Because we didn't specify container's name, Docker randomly assigned one for it.</p><p>Run this command to see the log output of your container. Replace <code>&lt;container id&gt;</code> with your container id. In my case, it is <code>88cc8acfbeea</code>.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker logs &lt;container id&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You should see something like this:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Server is running at http://127.0.0.1:3000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Try http://127.0.0.1:3000/ping</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now, you should be able to open the API explorer: <a href="http://127.0.0.1:3000/explorer/" target="_blank" rel="noopener noreferrer">http://127.0.0.1:3000/explorer/</a></p><p>If everything is fine, run this command to stop the image.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker stop &lt;container id&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We are now ready to push our Docker image to cloud.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pushing-docker-image-to-ibm-cloud">Pushing Docker image to IBM Cloud.<a href="#pushing-docker-image-to-ibm-cloud" class="hash-link" aria-label="Direct link to Pushing Docker image to IBM Cloud." title="Direct link to Pushing Docker image to IBM Cloud.">​</a></h3><p>Sign up for <a href="https://cloud.ibm.com/login" target="_blank" rel="noopener noreferrer">IBM Cloud</a> and install <a href="https://cloud.ibm.com/docs/cli/reference/ibmcloud?topic=cloud-cli-ibmcloud-cli#ibmcloud-cli" target="_blank" rel="noopener noreferrer">IBM Cloud CLI</a>.</p><p>Run this command to login IBM Cloud.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ibmcloud login</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If you are using a federated IBM ID, use this command instead: </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ibmcloud login -sso</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If you logged in successfully, you will see something like:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">API endpoint:      https://cloud.ibm.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Region:            us-east</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">User:              wenbo.sun@ibm.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Account:           IBM (114e44f826b74008a2afbf099e6b3561)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Resource group:    Default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CF API endpoint:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Org:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Space:</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Log in to IBM Cloud Container Registry. This is where we store our Docker image.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ibmcloud cr login</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If this succeeds, you will see something like:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Logging in to 'us.icr.io'...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Logged in to 'us.icr.io'.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This is the container registry region you logged into.</p><p>After we log in, let's create a new namespace for our project.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ibmcloud cr namespace-add my-lb4-namespace</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can run <code>ibmcloud cr namespace-list</code> to show all of your namespaces.</p><p>Run this command to tag the local docker image with the IBM Cloud container registry.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker tag &lt;image_name&gt;:&lt;tag&gt; &lt;container_registry_region&gt;/&lt;my_namespace&gt;/&lt;new_image_repo&gt;:&lt;new_tag&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In my case, this command will look like this:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker tag firstgame:latest us.icr.io/my-lb4-namespace/firstgame-repo:1.0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then push the local image to the container registry.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker push us.icr.io/my-lb4-namespace/firstgame-repo:1.0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You will see something like this:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">The push refers to repository [us.icr.io/my-lb4-namespace/firstgame-repo]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">8f77245a867e: Pushed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">f3f824dbea6d: Pushed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">637a53e1e6ed: Pushing [==============================&gt;                    ]  144.1MB/236.6MB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">69d1baa1ae3c: Pushed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">30cea096009e: Pushed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">344e2d688289: Pushed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">61cb38befba5: Pushed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aa5a12ea4279: Pushed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">6270adb5794c: Pushed</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>When it is done, run the following command to show images on your container registry.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ibmcloud cr image-list</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You should see this:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">REPOSITORY                                     TAG   DIGEST         NAMESPACE             CREATED      SIZE     SECURITY STATUS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">us.icr.io/my-lb4-namespace/firstgame-repo      1.0   3c853b97ffec   my-lb4-namespace      1 hour ago   144 MB   No Issues</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The <code>SECURITY STATUS</code> shows <code>No Issues</code>. If you get issues here, you may want to check <a href="https://cloud.ibm.com/docs/services/va?topic=va-va_index#va_index" target="_blank" rel="noopener noreferrer">Managing image security with Vulnerability Advisor</a> for more related information.</p><p>Lastly, run this command to build Docker image on the container registry. Don't forget the <code> .</code> at the end.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ibmcloud cr build -t us.icr.io/my-lb4-namespace/firstgame-repo:1.0 .</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="creating-kubernetes-cluster">Creating Kubernetes Cluster<a href="#creating-kubernetes-cluster" class="hash-link" aria-label="Direct link to Creating Kubernetes Cluster" title="Direct link to Creating Kubernetes Cluster">​</a></h3><p>If you don't have a Kubernetes Cluster yet, login to your IBM Cloud in browser and go to <a href="https://cloud.ibm.com/kubernetes/catalog/cluster/create" target="_blank" rel="noopener noreferrer">https://cloud.ibm.com/kubernetes/catalog/cluster/create</a> to create a free cluster. It may take a while.</p><p>When it is done, run this command to point to Kubernetes cluster. My cluster name is <code>firstgame-cluster</code>.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ibmcloud cs cluster-config &lt;Cluster Name&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You will see something like this. Copy and run the last line.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">OK</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">The configuration for firstgame-cluster was downloaded successfully.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Export environment variables to start using Kubernetes.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export KUBECONFIG=/Users/xiaocase/.bluemix/plugins/container-service/clusters/firstgame-cluster/kube-config-hou02-firstgame-cluster.yml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Run this command to verify your cluster.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get nodes</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You should see something like this.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">NAME          STATUS    ROLES     AGE       VERSION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">10.47.84.60   Ready     &lt;none&gt;    5d        v1.13.6+IKS</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now your cluster is ready to use.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-mongodb-and-deploying-our-project-to-kubernetes">Setting up MongoDB and Deploying our Project to Kubernetes<a href="#setting-up-mongodb-and-deploying-our-project-to-kubernetes" class="hash-link" aria-label="Direct link to Setting up MongoDB and Deploying our Project to Kubernetes" title="Direct link to Setting up MongoDB and Deploying our Project to Kubernetes">​</a></h3><p>Because our project is using MongoDB, we need to set up a MongoDB container and our project container in one Kubernetes <a href="https://kubernetes.io/docs/concepts/workloads/pods/pod/" target="_blank" rel="noopener noreferrer">pod</a>. A Kubernetes pod is a group of one or more containers. Containers in the same pod will share storage and network.</p><p>Let's first create a file called <code>first-game.yaml</code> in our project root. We will use this <code>yaml</code> file to specify containers and pod. Check <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/" target="_blank" rel="noopener noreferrer">here</a> for more information about Kubernetes <code>yaml</code> file.</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> extensions/v1beta1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Deployment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> firstgame</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">replicas</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">template</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> firstgame</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> us.icr.io/my</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">lb4</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">namespace/firstgame</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">repo</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">1.0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">containerPort</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mongo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">containerPort</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">27017</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As you can see, we have two containers. <code>fg</code> is for our project. <code>db</code> is for MongoDB. They will be running in the same pod so they can share network and talk to each other.</p><p>Run this command to use the <code>yaml</code> file to create containers and pod:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl create -f first-game.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You will see something like this.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">deployment.extensions "firstgame" deleted</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wenbo:firstgame wenbo$ kubectl create -f first-game.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deployment.extensions "firstgame" created</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Run this command to verify our pod is running:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get pods</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If succeeds, you will see this. The <code>2/2</code> means there are two containers running in this pod.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">NAME                         READY     STATUS    RESTARTS   AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">firstgame-85ccbd5496-6nmvt   2/2       Running   0          1m</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now our application is running on Kubernetes. The next step is to expose it to the public.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl expose deployment firstgame --type=NodePort --port=3000 --name=firstgame-service --target-port=3000</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You should see this.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">service "firstgame-service" exposed</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Run this command to get NodePort for this service.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl describe service firstgame-service</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You should see:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Name:                     firstgame-service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Namespace:                default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Labels:                   run=firstgame</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Annotations:              &lt;none&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Selector:                 run=firstgame</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Type:                     NodePort</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">IP:                       172.21.59.175</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Port:                     &lt;unset&gt;  3000/TCP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">TargetPort:               3000/TCP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NodePort:                 &lt;unset&gt;  30776/TCP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Endpoints:                172.30.234.135:3000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Session Affinity:         None</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">External Traffic Policy:  Cluster</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Events:                   &lt;none&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In my case, the NodePort is <code>30776</code>.</p><p>The last thing we need is the IP address of our cluster.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ibmcloud ks workers firstgame-cluster</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You will get something like this:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ID                                                     Public IP         Private IP      Machine Type   State    Status   Zone    Version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kube-bkrq1svd0l5j9p3147ng-mycluster-default-000000e0   173.193.106.101   10.76.216.103   free           normal   Ready    hou02   1.13.8_1529</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>My cluster IP address is <code>173.193.106.101</code>.</p><p>Now we should be able to access to our application via <a href="http://173.193.106.101:30776" target="_blank" rel="noopener noreferrer">http://173.193.106.101:30776</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="applying-this-to-your-own-project">Applying This to Your Own Project<a href="#applying-this-to-your-own-project" class="hash-link" aria-label="Direct link to Applying This to Your Own Project" title="Direct link to Applying This to Your Own Project">​</a></h3><p>In this episode, we covered how to deploy our project with Docker and Kubernetes on IBM Cloud. Once you create a Docker image, you can run it almost everywhere. You can also push your own project image to other cloud like AWS, Azure, and Google Cloud. It should be very easy.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h3><p>Next time, we will create a simply front-end UI for our project and do a quick demo.</p><p>In the meantime, learn more about LoopBack in <a href="https://strongloop.com/strongblog/tag_LoopBack.html" target="_blank" rel="noopener noreferrer">past blogs</a>.</p>]]></content>
        <author>
            <name>Wen Bo</name>
            <uri>https://github.com/gobackhuoxing</uri>
        </author>
        <category label="how-to" term="how-to"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 2019 Q2 Overview]]></title>
        <id>https://loopback.io/blog/loopback-4-2019-q2-overview</id>
        <link href="https://loopback.io/blog/loopback-4-2019-q2-overview"/>
        <updated>2019-07-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>For the past few months, we have been focusing on the following stories: </p><ul><li><a href="#authentication">Authentication</a>: released a new <code>@loopback/authentication</code> 2.0 version.</li><li><a href="#authorization">Authorization</a>: ability to add authorization through interceptors.</li><li><a href="#inclusion_of_related_models">Inclusion of related models</a>: set up foundation in <code>repository-json-schema</code> package.</li><li><a href="#architectural_improvements">Architectural improvements</a>: introduction of lifecycle observers and interceptors.</li><li><a href="#migration">Migration</a>: allows you to migrate incrementally.</li><li><a href="#internal_tooling_and_ci">Internal tooling and CI</a>: Support Node.js 12, reduce build time, etc.</li><li><a href="#new_look_and_feel_on_loopBack_web_site">New Look and Feel on LoopBack Web Site</a>: published a new look on the <a href="https://loopback.io" target="_blank" rel="noopener noreferrer">loopback.io</a> web site.</li></ul><p>We have a monthly blog reviewing what we've done in each milestone. To stay tuned, don't forget to follow us on Twitter <a href="https://twitter.com/@StrongLoop" target="_blank" rel="noopener noreferrer">@StrongLoop</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="authentication">Authentication<a href="#authentication" class="hash-link" aria-label="Direct link to Authentication" title="Direct link to Authentication">​</a></h3><p>We have recently released <code>@loopback/authentication</code> 2.0. Now you can secure your endpoints with both passport-based and LoopBack native authentication strategies that implement the <code>AuthenticationStrategy</code> interface. Our <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer">shopping app example</a> has also been updated accordingly to include this capability. More details can be found in this <a href="https://strongloop.com/strongblog/loopback-4-authentication-updates/" target="_blank" rel="noopener noreferrer">authentication updates blog post</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="authorization">Authorization<a href="#authorization" class="hash-link" aria-label="Direct link to Authorization" title="Direct link to Authorization">​</a></h3><p>Besides <a href="https://loopback.io/doc/en/lb4/Loopback-component-authorization.html" target="_blank" rel="noopener noreferrer">creating an authorization component</a> to add authorization in your LoopBack 4 application, you can now do so by using interceptors. <a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt4/" target="_blank" rel="noopener noreferrer">This tutorial</a> shows how to do it from end to end.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="inclusion-of-related-models">Inclusion of Related Models<a href="#inclusion-of-related-models" class="hash-link" aria-label="Direct link to Inclusion of Related Models" title="Direct link to Inclusion of Related Models">​</a></h3><p>We have set up the foundation for inclusion of related models. We made improvements in our <code>repository-json-schema</code> package to provide the base for inclusion. We updated our <a href="https://github.com/strongloop/loopback-next/tree/master/examples/todo-list/" target="_blank" rel="noopener noreferrer"><code>TodoList</code> example</a> to describe navigational properties. The approach we used is a temporary approach to demonstrate how inclusion would work. You can clone the example to check it out.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="architectural-improvements">Architectural Improvements<a href="#architectural-improvements" class="hash-link" aria-label="Direct link to Architectural Improvements" title="Direct link to Architectural Improvements">​</a></h3><p>As one of the major architectural improvements, the concept of interceptor was introduced. Interceptors are reusable functions that provide aspect-oriented logic around method invocations. They can be applied for various uses. See the <a href="https://loopback.io/doc/en/lb4/Interceptors.html" target="_blank" rel="noopener noreferrer">interceptors docs page</a> for more details.</p><p>Besides the interceptor, LoopBack 4 now has a basic life cycle support. It allows registration of life cycle observers and actions, and there is a command line interface and a booter to make this even easier.</p><p>In addition, extensibility has been a great advancement for LoopBack 4. We've added decorator functions to allow you to <a href="https://loopback.io/doc/en/lb4/Extension-point-and-extensions.html" target="_blank" rel="noopener noreferrer">add extensions even more easily</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="migration">Migration<a href="#migration" class="hash-link" aria-label="Direct link to Migration" title="Direct link to Migration">​</a></h3><p>If you have existing LoopBack 3 applications, it's a good time to start looking into how to migrate them to LoopBack 4. You can do this incrementally by mounting your LB3 application to LoopBack 4. Read <a href="https://loopback.io/doc/en/lb4/Migrating-from-LoopBack-3.html" target="_blank" rel="noopener noreferrer">this docs page</a> for steps on how to do that.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="internal-tooling-and-ci">Internal Tooling and CI<a href="#internal-tooling-and-ci" class="hash-link" aria-label="Direct link to Internal Tooling and CI" title="Direct link to Internal Tooling and CI">​</a></h3><p>There has been a lot of enhancement in our tooling. We covered a new major release (v2.0) of <code>@loopback/build</code> in our <a href="https://strongloop.com/strongblog/loopback-june-2019-milestone/" target="_blank" rel="noopener noreferrer">June milestone blog</a>. </p><p>We have also introduced the concept of experimental features to LoopBack development. The goal is to be able to release experimental features quickly for early feedback while maintaining high code quality on our production-ready code. For details, see <a href="https://github.com/strongloop/loopback-next/blob/labs/base/LABS.md" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/blob/labs/base/LABS.md</a>. </p><p>Additionally, we have put tremendous effort into fixing the CI errors on the connectors, so that we can help land PRs from the community more quickly and more confidently. We've also reduced the build time in loopback-next which improves our development efficiency.</p><p>Lastly, Node.js 12 support has been added to the LoopBack 3 and LoopBack 4 core. The next step is to add Node.js 12 support to the connectors. </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-look-and-feel-on-loopback-web-site">New Look and Feel on LoopBack Web Site<a href="#new-look-and-feel-on-loopback-web-site" class="hash-link" aria-label="Direct link to New Look and Feel on LoopBack Web Site" title="Direct link to New Look and Feel on LoopBack Web Site">​</a></h3><p>Our web site <a href="https://loopback.io" target="_blank" rel="noopener noreferrer">loopback.io</a> now has a new look! We have moved the <a href="https://v4.loopback.io" target="_blank" rel="noopener noreferrer">LoopBack 4 web site</a> content back to our main web site.</p><p>We have rebuilt the "Who's using LoopBack" section to showcase our users. If you would like to be a part of it, see the details in <a href="https://github.com/strongloop/loopback-next/issues/3047" target="_blank" rel="noopener noreferrer">this GitHub issue</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>We'd like to hear from you! Our <a href="https://github.com/strongloop/loopback-next/tree/master/docs/ROADMAP.md" target="_blank" rel="noopener noreferrer">Q3 roadmap</a> started with a pull request. We'll continue to create future roadmaps in the form of a PR, so feel free to chime in!</p><p>For the next 3 months, we'd like to focus on the following:</p><ul><li>Continue with the Q2 stories. e.g. <a href="https://github.com/strongloop/loopback-next/issues/3242" target="_blank" rel="noopener noreferrer">Authentication</a>, <a href="https://github.com/strongloop/loopback-next/issues/538" target="_blank" rel="noopener noreferrer">Authorization</a> and <a href="https://github.com/strongloop/loopback-next/issues/1352" target="_blank" rel="noopener noreferrer">Inclusion of related models</a>.</li><li>Feature parity gap. e.g. <a href="https://github.com/strongloop/loopback-next/issues/2036" target="_blank" rel="noopener noreferrer">Declarative support</a></li><li>Internal tooling/infrastructure: e.g. <a href="https://github.com/strongloop/loopback-next/issues/3072" target="_blank" rel="noopener noreferrer">support Node.js 12 in connectors</a>, <a href="https://github.com/strongloop/loopback-next/issues/3161" target="_blank" rel="noopener noreferrer">reduce build time</a>, etc.</li><li>Juggler-next: If time permits, we'd like to start looking into the infrastructure to prepare us to work on juggler-next.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="previous-milestone-blogs">Previous Milestone Blogs<a href="#previous-milestone-blogs" class="hash-link" aria-label="Direct link to Previous Milestone Blogs" title="Direct link to Previous Milestone Blogs">​</a></h2><p>There are too many features added and bug fixes that cannot be captured here. Check out our previously published monthly milestone blog posts in Q2 for more details: </p><ul><li><a href="https://strongloop.com/strongblog/april-2019-milestone/" target="_blank" rel="noopener noreferrer">April 2019</a></li><li><a href="https://strongloop.com/strongblog/may-2019-milestone/" target="_blank" rel="noopener noreferrer">May 2019</a></li><li><a href="https://strongloop.com/strongblog/loopback-june-2019-milestone/" target="_blank" rel="noopener noreferrer">June 2019</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-for-action">Call for Action<a href="#call-for-action" class="hash-link" aria-label="Direct link to Call for Action" title="Direct link to Call for Action">​</a></h2><p>LoopBack's future success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li></ul>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="Quarterly update" term="Quarterly update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 June 2019 Milestone Update]]></title>
        <id>https://loopback.io/blog/loopback-june-2019-milestone</id>
        <link href="https://loopback.io/blog/loopback-june-2019-milestone"/>
        <updated>2019-07-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>As the temperature gets warmer the LoopBack team is spending this summer releasing hot deliverables. In June we focused on various enhancements such as releasing version 2.0.0 of <code>@loopback/build</code>, replacing <code>strong-docs</code>, and improving <code>@loopback/testlab</code>. We also focused on authentication, inclusion of related models, and other improvements. You can see the <a href="https://github.com/strongloop/loopback-next/issues/3035" target="_blank" rel="noopener noreferrer">June milestone</a> for an overview of what we have worked on, and read on for more details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="version-200-of-loopbackbuild">Version 2.0.0 of <code>@loopback/build</code><a href="#version-200-of-loopbackbuild" class="hash-link" aria-label="Direct link to version-200-of-loopbackbuild" title="Direct link to version-200-of-loopbackbuild">​</a></h2><p>In the past months, we have significantly evolved our build tooling. The last major change was the switch from <code>tslint</code> to <code>eslint</code> for linting. We decided it's time to clean up the code, remove unused parts and release a new major version.</p><p>The release introduced the following breaking changes:</p><ul><li><code>lb-apidocs</code> helper is no longer available.</li><li><code>lb-tslint</code> helper is no longer available.</li><li><code>lb-tsc</code> is no longer choosing <code>outDir</code> for you, you have to specify it explicitly.</li><li>It is no longer possible to the specify compilation target via a non-option argument like <code>lb-tsc es2017</code>.</li></ul><p>See the <a href="https://github.com/strongloop/loopback-next/blob/master/packages/build/CHANGELOG.md#200-2019-06-17" target="_blank" rel="noopener noreferrer">release notes</a> for more details and instructions on migrating your existing projects.</p><p>As part of these changes, we removed vulnerable dependencies and thus <code>npm install</code> in newly scaffolded projects reports zero vulnerabilities 🎉.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="replacing-strong-docs-with-tsdocs">Replacing <code>strong-docs</code> with <code>tsdocs</code><a href="#replacing-strong-docs-with-tsdocs" class="hash-link" aria-label="Direct link to replacing-strong-docs-with-tsdocs" title="Direct link to replacing-strong-docs-with-tsdocs">​</a></h2><p>In <a href="https://github.com/strongloop/loopback-next/pull/3055" target="_blank" rel="noopener noreferrer">PR#3055</a>, we replaced <code>strong-docs</code> with <code>@loopback/tsdocs</code>. We use <code>@loopback/tsdocs</code> to generate markdown files on our website. With this change, we changed the home for our API docs; you can visit the <a href="https://loopback.io/doc/en/lb4/apidocs.index.html" target="_blank" rel="noopener noreferrer">new home</a> on our website to see the docs. </p><p>This change was a breaking change: as mentioned before, <code>lb-apidocs</code> is no longer available for use, as it was removed as part of this PR. For alternate solutions, you can use Microsoft's <a href="https://www.npmjs.com/package/@microsoft/api-extractor" target="_blank" rel="noopener noreferrer">api-extractor</a> and <a href="https://www.npmjs.com/package/@microsoft/api-documenter" target="_blank" rel="noopener noreferrer">api-documenter</a>.</p><p>On the brighter side, by removing <code>strong-docs</code> we also removed dependencies on 3rd party modules that have known security vulnerabilities but are no longer maintained.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="jest-and-loopbacktestlab">Jest and <code>@loopback/testlab</code><a href="#jest-and-loopbacktestlab" class="hash-link" aria-label="Direct link to jest-and-loopbacktestlab" title="Direct link to jest-and-loopbacktestlab">​</a></h2><p>We improved our testing helpers to support Jest testing framework.</p><ul><li><p><a href="https://github.com/strongloop/loopback-next/pull/3013" target="_blank" rel="noopener noreferrer">PR#3013</a> fixed typings for <code>itSkippedOnTravis</code> to remove an implicit dependency on Mocha typings, which was causing conflicts when using our testlab from Jest.</p></li><li><p><a href="https://github.com/strongloop/loopback-next/pull/3040" target="_blank" rel="noopener noreferrer">PR#3040</a> introduced a more generic helper <code>skipOnTravis</code> which supports any BDD verbs like <code>describe</code> and <code>it</code>.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">skipOnTravis</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">it</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'does something'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// the test code</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p><a href="https://github.com/strongloop/loopback-next/pull/3138" target="_blank" rel="noopener noreferrer">PR#3138</a> added even more generic helper <code>skipIf</code> that allows you to skip a test case or a test suite on arbitrary condition.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">skipIf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">someCondition</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> it</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'does something'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// the test code</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ul><p>We are also looking into ways to migrate our test suite from Mocha to Jest. Stay tuned for updates!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="authentication">Authentication<a href="#authentication" class="hash-link" aria-label="Direct link to Authentication" title="Direct link to Authentication">​</a></h2><p>In <a href="https://github.com/strongloop/loopback4-example-shopping/pull/120" target="_blank" rel="noopener noreferrer">PR#120</a>, the <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer">shopping cart application</a> was updated to utilize the latest authentication package <code>@loopback/authentication2.x</code>. You can read more about our latest authentication package in our blog <a href="https://strongloop.com/strongblog/loopback-4-authentication-updates/" target="_blank" rel="noopener noreferrer">What's New in LoopBack 4 Authentication 2.0</a>.</p><p>In <a href="https://github.com/strongloop/loopback-next/pull/2977" target="_blank" rel="noopener noreferrer">PR#2977</a>, we introduced some new documentation to the authentication package we've been updating these past few months. See <a href="https://loopback.io/doc/en/lb4/Loopback-component-authentication.html" target="_blank" rel="noopener noreferrer">Authentication</a> for details.</p><p>In <a href="https://github.com/strongloop/loopback-next/pull/3046" target="_blank" rel="noopener noreferrer">PR#3046</a>, a new authentication tutorial on <a href="https://loopback.io/doc/en/lb4/Authentication-Tutorial.html" target="_blank" rel="noopener noreferrer">How to secure your LoopBack 4 application with JWT authentication</a> was added.</p><p>We released the new adapter for passport-based strategies as <a href="https://www.npmjs.com/package/@loopback/authentication-passport" target="_blank" rel="noopener noreferrer"><code>@loopback/authentication-passport</code></a>; now you can follow the guide in <a href="https://loopback.io/doc/en/lb4/Loopback-component-authentication.html" target="_blank" rel="noopener noreferrer">Use Passport-based Strategies</a> to learn how to create and register a passport strategy and plug it into the authentication system.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="inclusion-of-related-models">Inclusion of Related Models<a href="#inclusion-of-related-models" class="hash-link" aria-label="Direct link to Inclusion of Related Models" title="Direct link to Inclusion of Related Models">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="getjsonschema-enhancement"><code>getJsonSchema</code> Enhancement<a href="#getjsonschema-enhancement" class="hash-link" aria-label="Direct link to getjsonschema-enhancement" title="Direct link to getjsonschema-enhancement">​</a></h3><p>A community user, <a href="https://github.com/samarpanB" target="_blank" rel="noopener noreferrer">@samarpanB</a>, has contributed <a href="https://github.com/strongloop/loopback-next/pull/2975" target="_blank" rel="noopener noreferrer">PR#2975</a> adding a new option <code>includeRelations</code> to the helper <code>getJsonSchema</code>. When the option is enabled, the helper adds navigational properties for inclusion of related models in the emitted model schema.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="navigation-properties-added-to-todolist-example">Navigation Properties Added to TodoList Example<a href="#navigation-properties-added-to-todolist-example" class="hash-link" aria-label="Direct link to Navigation Properties Added to TodoList Example" title="Direct link to Navigation Properties Added to TodoList Example">​</a></h3><p>As part of our <a href="https://github.com/strongloop/loopback-next/issues/1352" target="_blank" rel="noopener noreferrer">Inclusion of Related Models Epic</a>, we updated our <a href="https://github.com/strongloop/loopback-next/tree/master/examples/todo-list" target="_blank" rel="noopener noreferrer">TodoList example</a> to also include navigational properties. After the work done in <a href="https://github.com/strongloop/loopback-next/pull/3171" target="_blank" rel="noopener noreferrer">PR#3171</a>, now when getting a <code>Todo</code> with an inclusion filter, its included <code>TodoList</code> will be a part of the response and vice versa.</p><p>When you call <code>GET todos/2</code>, you get the following response:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"id"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"title"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Take over the galaxy"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"desc"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"MWAHAHAHAHAHAHAHAHAHAHAHAHAMWAHAHAHAHAHAHAHAHAHAHAHAHA"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"todoListId"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And now when you call <code>GET todos/2</code> with the filter <code>{include: [{relation: 'todo-lists'}]}</code>, you get the following response:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"id"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"title"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Take over the galaxy"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"desc"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"MWAHAHAHAHAHAHAHAHAHAHAHAHAMWAHAHAHAHAHAHAHAHAHAHAHAHA"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"todoListId"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"todoList"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"id"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"title"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Sith lord's check list"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can check out the new full example by calling <code>lb4 example todo-list</code>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="partial-updates-via-patch">Partial Updates via <code>PATCH</code><a href="#partial-updates-via-patch" class="hash-link" aria-label="Direct link to partial-updates-via-patch" title="Direct link to partial-updates-via-patch">​</a></h2><p>In <a href="https://github.com/strongloop/loopback-next/pull/3199" target="_blank" rel="noopener noreferrer">PR#3199</a>, we enabled added a <code>partial</code> option for <code>JsonSchemaOptions</code>. This addition allowed us to emit schema where all the model properties are optional. By doing this, this lets us to now do <code>PATCH</code> requests without having to include all required properties in the request body.</p><p>For example, before when trying to update a <code>Todo</code> from our <a href="https://github.com/strongloop/loopback-next/tree/master/examples/todo" target="_blank" rel="noopener noreferrer"><code>Todo</code> example</a>, you'd have to include the <code>title</code> property in the request body:</p><p><code>PATCH todos/1</code></p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token property" style="color:#36acaa">"title"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Take over the galaxy"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token property" style="color:#36acaa">"desc"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"get the resources ready"</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>But now even though <code>title</code> is still required, it is optional when doing a <code>PATCH</code> request. So now the following is a valid request body to pass to the following request:</p><p><code>PATCH todos/1</code></p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token property" style="color:#36acaa">"desc"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"get the resources ready"</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>All newly created projects generated through the CLI will allow partial updates through <code>PATCH</code>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-github-issue-templates">New GitHub Issue Templates<a href="#new-github-issue-templates" class="hash-link" aria-label="Direct link to New GitHub Issue Templates" title="Direct link to New GitHub Issue Templates">​</a></h2><p>In <a href="https://github.com/strongloop/loopback-next/pull/3202" target="_blank" rel="noopener noreferrer">PR#3202</a>, we updated the GitHub issues template, so that when you open a new issue, you're taken to <a href="https://github.com/strongloop/loopback-next/issues/new/choose" target="_blank" rel="noopener noreferrer">a page</a> (see image below) where you can choose the type of issue to open. The options we offer are: bug report, feature request, question, and security vulnerability. With these new more specific templates, it will be easier for the team to go through and understand new issues. </p><p><img loading="lazy" alt="Issue template" src="/blog/assets/images/issue-template-8b8bafaa4921091d611520948a0d42bb.png" width="1466" height="800" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="cli-improvement">CLI Improvement<a href="#cli-improvement" class="hash-link" aria-label="Direct link to CLI Improvement" title="Direct link to CLI Improvement">​</a></h2><p>In <a href="https://github.com/strongloop/loopback-next/pull/2989" target="_blank" rel="noopener noreferrer">PR#2989</a>, we made some improvements to the CLI:</p><ul><li>Changed/unified the naming convention to eliminate bugs causing by the input. See the <a href="https://loopback.io/doc/en/lb4/Command-line-interface.html#naming-convention" target="_blank" rel="noopener noreferrer">naming conventions</a> we follow in LoopBack 4.</li><li>Added a prompt message to warn/notify users the change to their inputs and file names in advance. For example:<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ lb4 controller</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Controller class name: todo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ Controller Todo will be created in src/controllers/todo.controller.ts</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ul><p>We also made some fixes to our <code>lb4 discover</code> command: </p><ul><li>In <a href="https://github.com/strongloop/loopback-next/pull/3127" target="_blank" rel="noopener noreferrer">PR#3127</a>, we fixed a bug so that the prompt exits properly when using the command.</li><li>In <a href="https://github.com/strongloop/loopback-next/pull/3015/" target="_blank" rel="noopener noreferrer">PR#3015</a>, community member <a href="https://github.com/samarpanB" target="_blank" rel="noopener noreferrer">@samarpanB</a> contributed a fix that would properly stringify <code>modelSettings</code> that go into the <code>@model</code> decorator.</li><li>In <a href="https://github.com/strongloop/loopback-next/pull/3115" target="_blank" rel="noopener noreferrer">PR#3115</a>, community member <a href="https://github.com/marvinirwin" target="_blank" rel="noopener noreferrer">@marvinirwin</a> contributed a fix that makes the <code>schema</code> field in <code>modelSettings</code> use the owner of the schema.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-team-member">New Team Member<a href="#new-team-member" class="hash-link" aria-label="Direct link to New Team Member" title="Direct link to New Team Member">​</a></h2><p>We have a new addition to our LoopBack team: Agnes (<a href="https://github.com/agnes512" target="_blank" rel="noopener noreferrer">@agnes512 on GitHub</a>) has joined the team as our intern for the next year. She has already contributed improvements to our documentation, our <a href="https://github.com/strongloop/loopback-connector-cloudant/" target="_blank" rel="noopener noreferrer"><code>cloudant</code> connector</a>, our CLI, and more. We're happy to have her on our team and look forward to see what she accomplishes in the future.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-changes">Other Changes<a href="#other-changes" class="hash-link" aria-label="Direct link to Other Changes" title="Direct link to Other Changes">​</a></h2><ul><li>We introduced a shared test suite that allows us to test any Repository implementation against any supported connector, e.g. <code>DefaultCrudRepository</code> against <code>loopback-connector-mongodb</code>. This suite will help us to catch database-specific problems that went undiscovered so far. See <a href="https://github.com/strongloop/loopback-next/pull/3079" target="_blank" rel="noopener noreferrer">PR#3097</a>.</li><li>We reworked the <code>cloudant</code> connector test setup so that both juggler versions 3.x and 4.x are triggered. So far connectors <code>mongodb</code>, <code>postgresql</code>, <code>kv-redis</code>, <code>cloudant</code> run the shared tests. See <a href="https://github.com/strongloop/loopback-connector-cloudant/pull/206" target="_blank" rel="noopener noreferrer">PR#206</a>.</li><li>We honoured the arguments for another two LoopBack 3 CLI commands: <code>lb remote-method</code> and <code>lb middleware</code>. See <a href="https://github.com/strongloop/generator-loopback/pull/410" target="_blank" rel="noopener noreferrer">PR#410</a>.</li><li>We deprecated the <code>@loopback/openapi-v3-types</code> package. See <a href="https://github.com/strongloop/loopback-next/pull/3220" target="_blank" rel="noopener noreferrer">PR#3220</a>.</li><li>We improved the documentation for our <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer">shopping cart application</a>. See <a href="https://github.com/strongloop/loopback4-example-shopping/pull/183" target="_blank" rel="noopener noreferrer">PR#183</a>.</li></ul><p>We have finished the migration from GreenKeeper to RenovateBot and added documentation for LoopBack developers describing how to work with RenovateBot's pull requests. Learn more in the new section <a href="https://loopback.io/doc/en/contrib/code-contrib-lb4.html#renovate-bot" target="_blank" rel="noopener noreferrer">Renovate bot</a> in our documentation for developers.</p><p>We have upgraded our eslint-related infrastructure to eslint version 6 and added few more rules to the default eslint config to catch even more programming errors:</p><ul><li><a href="https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-floating-promises.md" target="_blank" rel="noopener noreferrer">no-floating-promise</a> to detect &amp; reject usage of Promise-like values in statements without handling their errors appropriately. We used to have this rule enabled in our old tslint-based setup but had to switch it temporarily off because it was not available in typescript-eslint until recently.</li><li><a href="https://eslint.org/docs/rules/no-prototype-builtins" target="_blank" rel="noopener noreferrer">no-prototype-builtins</a> to detect code that can introduce Prototype Poisoning vulnerability. This rule was promoted to recommended rules in eslint version 6.</li><li><a href="https://eslint.org/docs/rules/require-atomic-updates" target="_blank" rel="noopener noreferrer">require-atomic-updates</a> to report assignments to variables or properties where a race condition may be introduced. This rule was promoted to recommended rules in eslint version 6.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="looking-for-user-references">Looking for User References<a href="#looking-for-user-references" class="hash-link" aria-label="Direct link to Looking for User References" title="Direct link to Looking for User References">​</a></h2><p>As you might be aware, the <a href="https://loopback.io/" target="_blank" rel="noopener noreferrer">loopback.io</a> website has a brand new look. We'd like to rebuild the "Who's using LoopBack" section and showcase our users and their use cases. If you would like to be a part of it, see the details in this <a href="https://github.com/strongloop/loopback-next/issues/3047" target="_blank" rel="noopener noreferrer">GitHub issue</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>If you're interested in what we're working on next, you can check out the <a href="https://github.com/strongloop/loopback-next/issues/3241" target="_blank" rel="noopener noreferrer">July milestone</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's future success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a> code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Joining</a> our user group.</li></ul>]]></content>
        <author>
            <name>Nora Abdelgadir</name>
            <uri>https://github.com/nabdelgadir</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[What's New in LoopBack 4 Authentication 2.0]]></title>
        <id>https://loopback.io/blog/loopback-4-authentication-updates</id>
        <link href="https://loopback.io/blog/loopback-4-authentication-updates"/>
        <updated>2019-07-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>We've refactored the authentication component to be more extensible and easier to use.</p><p>Now you can secure your endpoints with both <a href="http://www.passportjs.org/" target="_blank" rel="noopener noreferrer">passport-based</a>  and <code>LoopBack native</code> authentication strategies that implement the interface <a href="https://loopback.io/doc/en/lb4/apidocs.authentication.authenticationstrategy.html" target="_blank" rel="noopener noreferrer">AuthenticationStrategy</a>.</p><p>The new design greatly simplifies the effort of application developers and extension developers since they now only need to focus on binding strategies to the application without having to understand/modify the strategy resolver or the action provider.</p><p>The core of the authentication component is available in <a href="https://www.npmjs.com/package/@loopback/authentication" target="_blank" rel="noopener noreferrer">@loopback/authentication</a> version <code>2.x</code>, and the passport-based capabilities are now available in <a href="https://www.npmjs.com/package/@loopback/authentication-passport" target="_blank" rel="noopener noreferrer">@loopback/authentication-passport</a>.</p><p>Here is a <strong>high level</strong> overview of the authentication component.</p><p><img loading="lazy" src="https://loopback.io/pages/en/lb4/imgs/authentication_overview_highlevel.png" alt="authentication_overview_highlevel" class="img_ev3q"></p><ul><li>A decorator to express an authentication requirement on controller methods</li><li>A provider to access method-level authentication metadata</li><li>An action in the REST sequence to enforce authentication</li><li>An extension point to discover all authentication strategies and handle the delegation</li></ul><p>Detailed documentation about the design and usage of <code>@loopback/authentication@2.x</code> can be found <a href="https://loopback.io/doc/en/lb4/Loopback-component-authentication.html" target="_blank" rel="noopener noreferrer">here</a>.</p><p>As an <strong>application developer</strong>, you only need 3 steps to secure your endpoints:</p><ul><li>Decorate the endpoints of a controller with the <code>@authenticate(strategyName, options?)</code> decorator</li><li>Insert the authentication action in a custom sequence </li><li>Register the authentication strategy</li></ul><p>As an <strong>extension developer</strong>, you can <strong>contribute</strong> a <code>LoopBack native</code> authentication strategy by following the steps in <a href="https://loopback.io/doc/en/lb4/Loopback-component-authentication.html#creating-a-custom-authentication-strategy" target="_blank" rel="noopener noreferrer">Creating a Custom Authentication Strategy</a>, or a <code>passport-based</code> authentication strategy by following the steps in <a href="https://www.npmjs.com/package/@loopback/authentication-passport" target="_blank" rel="noopener noreferrer">Wrapping a Passport-based Strategy with the Passport Strategy Adapter</a>.</p><p>A tutorial and reference implementation on how to add JWT authentication to a LoopBack 4 application using <code>@loopback/authentication@2.x</code> can be found <a href="https://loopback.io/doc/en/lb4/Authentication-Tutorial.html" target="_blank" rel="noopener noreferrer">here</a>. It involves an updated version of the <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer">example shopping cart application</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="looking-for-user-references">Looking for User References<a href="#looking-for-user-references" class="hash-link" aria-label="Direct link to Looking for User References" title="Direct link to Looking for User References">​</a></h2><p>As you might be aware, our <a href="https://loopback.io/" target="_blank" rel="noopener noreferrer">loopback.io</a> web site has a brand new look. We're rebuilding the <code>"Who's using LoopBack"</code> section to showcase our users and the use cases. If you would like to be a part of it, see the details in <a href="https://github.com/strongloop/loopback-next/issues/3047" target="_blank" rel="noopener noreferrer">this GitHub issue</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's future success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a> code and documentation.</li><li>Opening a pull request on one of our <a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">"good first issues"</a>.</li><li>Joining our <a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">user group</a>.</li></ul>]]></content>
        <author>
            <name>Dominique Emond</name>
            <uri>https://github.com/emonddr</uri>
        </author>
        <category label="feature" term="feature"/>
        <category label="authentication" term="authentication"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building an Online Game With LoopBack 4 - User Authentication and Role-Based Access Control (Part 4)]]></title>
        <id>https://loopback.io/blog/building-an-online-game-with-loopback-4-pt4</id>
        <link href="https://loopback.io/blog/building-an-online-game-with-loopback-4-pt4"/>
        <updated>2019-06-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="part-4-user-authentication-and-role-based-access-control">Part 4: User Authentication and Role-Based Access Control<a href="#part-4-user-authentication-and-role-based-access-control" class="hash-link" aria-label="Direct link to Part 4: User Authentication and Role-Based Access Control" title="Direct link to Part 4: User Authentication and Role-Based Access Control">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="in-this-episode">In This Episode<a href="#in-this-episode" class="hash-link" aria-label="Direct link to In This Episode" title="Direct link to In This Episode">​</a></h3><p>We already have some APIs that allow users to customize their characters. However, a user should not get access to characters that belong to other users. With that in mind, we will add user authentication and role-based access control to this project.</p><p>You can check <a href="https://github.com/gobackhuoxing/first-web-game-lb4/tree/part4/firstgame" target="_blank" rel="noopener noreferrer">here</a> for this episode's code.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h3><p>In this series, I’m going to help you learn LoopBack 4 and how to use it to easily build your own API and web project. We’ll create a new project I’ve been working on: an online web text-based adventure game. In this game, you can create your own account to build characters, fight monsters and find treasures. You will be able to control your character to take a variety of actions: attacking enemies, casting spells, and getting loot. This game also allows multiple players to log in and play with their friends.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="previously-on-building-an-online-game-with-loopback-4">Previously on Building an Online Game With LoopBack 4<a href="#previously-on-building-an-online-game-with-loopback-4" class="hash-link" aria-label="Direct link to Previously on Building an Online Game With LoopBack 4" title="Direct link to Previously on Building an Online Game With LoopBack 4">​</a></h3><p>In the last episode, we created customized APIs to manage <code>weapon</code>, <code>armor</code>, and <code>skill</code> for <code>character</code>.</p><p>Here are the previous episodes:</p><ul><li><a href="https://strongloop.com/strongblog/building-online-game-with-loopback-4-pt1/" target="_blank" rel="noopener noreferrer">Part 1: Building a Simple LoopBack Project With MongoDB</a></li><li><a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt2/" target="_blank" rel="noopener noreferrer">Part 2: Generating Universally Unique ID and Managing Models Relationships</a></li><li><a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt3/" target="_blank" rel="noopener noreferrer">Part 3: Customizing APIs in Controller</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="basic-structure">Basic Structure<a href="#basic-structure" class="hash-link" aria-label="Direct link to Basic Structure" title="Direct link to Basic Structure">​</a></h3><p>LoopBack 4 provides us a built-in authentication package. This package includes an authentication system as the skeleton to verify the identity of a request. It invokes an authentication strategy provided by the developer to process the authentication information in the request and to then return the corresponding user profile.</p><p>In this episode, I will combine LoopBack authentication package with my self-defined authorization. This diagram shows the basic structure:</p><p><img loading="lazy" alt="structure" src="/blog/assets/images/building-online-game-pt4-auth-structure-c01949ae9fb34be90ee8d350e23b8abe.png" width="2688" height="1272" class="img_ev3q"></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="loopback-authentication-package">LoopBack Authentication Package<a href="#loopback-authentication-package" class="hash-link" aria-label="Direct link to LoopBack Authentication Package" title="Direct link to LoopBack Authentication Package">​</a></h4><p>The one in the middle is the <code>@loopback/authentication</code> package. It has three main components:</p><ul><li><p>Providers:</p><ul><li>AuthMetadataProvider: this reads the decorator metadata from the controller methods wherever the <code>@authenticate</code> decorator is used.</li><li>AuthenticateActionProvider: this provides the authentication action which uses AuthenticationStrategyProvider to obtain a registered authentication strategy (if one exists), calls the authenticate(request) method of the given authentication strategy, and places the user profile on the request context.</li><li>AuthenticationStrategyProvider: this is the extension point for you to add your own authentication strategies. I will show you how to do that later. It also has the job of finding a strategy of a given name (if existed), and returning it to AuthenticateActionProvider.</li></ul></li><li><p>Services: all services in this package are interfaces. You can create your own services as well.</p><ul><li>TokenService: an interface for generating and verifying an authentication token.</li><li>UserService: an interface for performing the login action in an authentication strategy, and for converting a User object into a UserProfile object. To keep this project as simple as possible, I am not going to use this interface. I will integrate this to the TokenService.</li></ul></li><li><p>Decorators: <code>@authenticate</code>. Annotate the APIs that need authentication with this decorator.</p></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="self-defined-authorization">Self-defined Authorization<a href="#self-defined-authorization" class="hash-link" aria-label="Direct link to Self-defined Authorization" title="Direct link to Self-defined Authorization">​</a></h4><p>The one in the bottom left is our self-defined authorization. It has three components:</p><ul><li><p>Providers:</p><ul><li>UserPermissionsProvider: this will check user's permission. We will create different user permissions for different users. This provider will be invoked in AuthorizationInterceptor.</li></ul></li><li><p>Strategies: this is where we add our own authentication strategies.</p><ul><li>JWTStrategy: we are going to create a custom authentication strategy based on <a href="https://jwt.io/" target="_blank" rel="noopener noreferrer">JSON Web Token</a>.</li></ul></li><li><p>Services:</p><ul><li>JWTService: a service associate with JWTStrategy to generate and verify JWT.</li></ul></li><li><p>Interceptors:</p><ul><li>AuthorizationInterceptor: a middle layer comes after authentication that use UserPermissionsProvider to verify user's permission. You can find more information about LoopBack 4 Interceptor at <a href="https://loopback.io/doc/en/lb4/Interceptors.html#order-of-invocation-for-interceptors" target="_blank" rel="noopener noreferrer">here</a>.</li></ul></li></ul><p>Here is a diagram to show you what will happen after an API call.</p><p><img loading="lazy" alt="structure" src="/blog/assets/images/building-online-game-pt4-auth-activity-flow-9b3ede8505a20674cb8a6a475f5728f5.png" width="2960" height="1414" class="img_ev3q"></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="applicationts-sequencets-and-controller"><code>application.ts</code>, <code>sequence.ts</code> and <code>controller</code><a href="#applicationts-sequencets-and-controller" class="hash-link" aria-label="Direct link to applicationts-sequencets-and-controller" title="Direct link to applicationts-sequencets-and-controller">​</a></h4><p>In order to use the all of above in our project, we have three more steps to complete:   </p><ul><li>Bind everything in <code>application.ts</code>. <code>application.ts</code> is like the main function of LoopBack project.</li><li>Add authenticate action into <code>sequence.ts</code>. A sequence contains a list of actions that is performed for each request.</li><li>Put <code>@authenticate</code> decorator above your APIs.</li></ul><p>You can check <a href="https://github.com/strongloop/loopback-next/blob/master/packages/authentication/docs/authentication-system.md" target="_blank" rel="noopener noreferrer">this tutorial</a> or <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer">this shopping example</a> for more information of LoopBack 4 Authentication package.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="install-loopbackauthentication">Install <code>@loopback/authentication</code><a href="#install-loopbackauthentication" class="hash-link" aria-label="Direct link to install-loopbackauthentication" title="Direct link to install-loopbackauthentication">​</a></h3><p>Simply run <code>npm install --save @loopback/authentication@latest</code> in your project root.</p><p>Reminder: We are using <code>@loopback/authentication@2.1.0</code> in this project. If you want to use other versions, you may need to change you code accordingly. You may also need to run <code>npm outdated</code> in your project root to see if other LoopBack packages need update.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="refactor-model">Refactor Model<a href="#refactor-model" class="hash-link" aria-label="Direct link to Refactor Model" title="Direct link to Refactor Model">​</a></h3><p>In previous episodes, we used UUIDs as our <code>character</code> IDs. But UUIDs are 36 digits string IDs. We can not let user use UUIDs to login. So we will use email instead of UUID.</p><p>To keep this project as simple as possible, a user can only own one character. So user and character are basically the same thing. <code>character</code> model holds all user information.</p><p>In <code>src/controllers/character.models</code>, remove id and add email and password properties.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'string'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  required</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">email</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'string'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  required</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">password</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Besides, we need to add user permission to <code>character</code> model.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">PermissionKey</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../authorization'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">array</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">String</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">permissions</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> PermissionKey</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>permissions</code> is an array of <code>PermissionKey</code>s. We will create <code>PermissionKey</code> later.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="self-defined-authorization-component">Self-Defined Authorization Component<a href="#self-defined-authorization-component" class="hash-link" aria-label="Direct link to Self-Defined Authorization Component" title="Direct link to Self-Defined Authorization Component">​</a></h3><p>First, let's create a folder 'authorization' in <code>src</code> to hold everything in this episode. This will be our self-defined authorization package.</p><p>I will show you how to create everything step by step. You can also check <a href="https://github.com/gobackhuoxing/first-web-game-lb4/tree/part4/firstgame/src/authorization" target="_blank" rel="noopener noreferrer">here</a> for my <code>authorization</code> folder.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="users-permissions">Users Permissions<a href="#users-permissions" class="hash-link" aria-label="Direct link to Users Permissions" title="Direct link to Users Permissions">​</a></h4><p>Let's create permissions for users. An API may have one or more required permissions. Users need to have all of the required permissions to access that API.</p><p>Create <code>permission-key.ts</code> in <code>src/authorization</code>.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">enum</span><span class="token plain"> PermissionKey </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// For accessing own (logged in user) profile</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ViewOwnUser </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ViewOwnUser'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// For creating a user</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  CreateUser </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'CreateUser'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// For updating own (logged in user) profile</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  UpdateOwnUser </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UpdateOwnUser'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// For deleting a user</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  DeleteOwnUser </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'DeleteOwnUser'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//admin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// For updating other users profile</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  UpdateAnyUser </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UpdateAnyUser'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// For accessing other users profile.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ViewAnyUser </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ViewAnyUser'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// For deleting a user</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  DeleteAnyUser </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'DeleteAnyUser'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This file holds all permissions. <code>ViewOwnUser</code>, <code>CreateUser</code>, <code>UpdateOwnUser</code>, <code>DeleteOwnUser</code> are for regular users. <code>UpdateAnyUser</code>, <code>ViewAnyUser</code>, <code>DeleteAnyUser</code> are for admins only.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="interfaces-and-types">Interfaces and Types<a href="#interfaces-and-types" class="hash-link" aria-label="Direct link to Interfaces and Types" title="Direct link to Interfaces and Types">​</a></h4><p>To make it easier to import, we will put all of useful interfaces, types, and schemas together.</p><p>Create <code>types.ts</code> in <code>src/authorization</code>.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">PermissionKey</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./permission-key'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">UserPermissionsFn</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    userPermissions</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> PermissionKey</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    requiredPermissions</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> RequiredPermissions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">boolean</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">MyUserProfile</span><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  email</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  permissions</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> PermissionKey</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">RequiredPermissions</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  required</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> PermissionKey</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> UserProfileSchema </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'object'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  required</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'email'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'password'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'name'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  properties</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    email</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'string'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      format</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'email'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    password</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'string'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      minLength</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'string'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> UserRequestBody </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'The input of create user function'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  required</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> UserProfileSchema</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">Credential</span><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  email</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  password</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  permissions</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> PermissionKey</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> CredentialsSchema </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'object'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  required</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'email'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'password'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  properties</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    email</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'string'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      format</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'email'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    password</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'string'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      minLength</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> CredentialsRequestBody </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'The input of login function'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  required</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> CredentialsSchema</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>MyUserProfile</code> is the format of our user profile. It is the information needed to perform authentication and authorization.</p><p><code>UserProfileSchema</code> and <code>CredentialsSchema</code> are the formats of request input. We use them to validate request input in <code>controller</code>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="binding-self-defined-authorization-component">Binding Self-Defined Authorization Component<a href="#binding-self-defined-authorization-component" class="hash-link" aria-label="Direct link to Binding Self-Defined Authorization Component" title="Direct link to Binding Self-Defined Authorization Component">​</a></h4><p>Create <code>keys.ts</code> in <code>src/authorization</code>. <code>MyAuthBindings</code> is the self-defined component that we need to bind to <code>application.ts</code>. <code>TokenServiceConstants</code> is the value we will use later in token service.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">BindingKey</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/context'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">UserPermissionsFn</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./types'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">TokenService</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/authentication'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * Binding keys used by this component.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">namespace</span><span class="token plain"> MyAuthBindings </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">USER_PERMISSIONS</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> BindingKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token generic-function function" style="color:#d73a49">create</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name">UserPermissionsFn</span><span class="token generic-function generic class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'userAuthorization.actions.userPermissions'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">TOKEN_SERVICE</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> BindingKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token generic-function function" style="color:#d73a49">create</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name">TokenService</span><span class="token generic-function generic class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'services.authentication.jwt.tokenservice'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">namespace</span><span class="token plain"> TokenServiceConstants </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">TOKEN_SECRET_VALUE</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'myjwts3cr3t'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">TOKEN_EXPIRES_IN_VALUE</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'600'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="providers">Providers<a href="#providers" class="hash-link" aria-label="Direct link to Providers" title="Direct link to Providers">​</a></h4><p>The LoopBack authorization package gives us three providers for authorization: strategies, action, and metadata. We need to customize our own provider for users permissions.</p><p>Create folder <code>providers</code> in <code>src</code>, then inside <code>providers</code>, create <code>user-permissions.provider.ts</code>.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Provider</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/context'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">PermissionKey</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../permission-key'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">UserPermissionsFn</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> RequiredPermissions</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../types'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">intersection</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'lodash'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">UserPermissionsProvider</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">implements</span><span class="token plain"> </span><span class="token class-name">Provider</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">UserPermissionsFn</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">value</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> UserPermissionsFn </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">userPermissions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> requiredPermissions</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">action</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">userPermissions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> requiredPermissions</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">action</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    userPermissions</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> PermissionKey</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    requiredPermissions</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> RequiredPermissions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">boolean</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">intersection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">userPermissions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> requiredPermissions</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">required</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> requiredPermissions</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">required</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It will compare a user's permissions and required permissions, and allow the user to get access if and only if this user has all of the required permissions.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="strategies">Strategies<a href="#strategies" class="hash-link" aria-label="Direct link to Strategies" title="Direct link to Strategies">​</a></h4><p>The <code>AuthenticationStrategyProvider</code> can find a registered strategy by its name. We will create our own custom authentication strategy and then specify its name in the <code>@authenticate</code> decorator. It will based on the <a href="https://jwt.io/" target="_blank" rel="noopener noreferrer">JSON Web Token</a>.</p><p>First, run <code>npm install jsonwebtoken --save</code> in your project root to install the JWT package.</p><p>Create a folder <code>strategies</code> in <code>src/authorization</code>. Then inside <code>strategies</code>, create a file named <code>JWT.strategy.ts</code>. This is our custom authentication strategy.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Request</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> HttpErrors</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/rest'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">inject</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/core'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">AuthenticationStrategy</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AuthenticationMetadata</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AuthenticationBindings</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        TokenService</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/authentication'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">MyUserProfile</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        UserPermissionsFn</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        RequiredPermissions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../types'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">MyAuthBindings</span><span class="token punctuation" style="color:#393A34">,</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../keys'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">JWTStrategy</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">implements</span><span class="token plain"> </span><span class="token class-name">AuthenticationStrategy</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'jwt'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">AuthenticationBindings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">METADATA</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> metadata</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> AuthenticationMetadata</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MyAuthBindings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">USER_PERMISSIONS</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">protected</span><span class="token plain"> checkPermissons</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> UserPermissionsFn</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MyAuthBindings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">TOKEN_SERVICE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">protected</span><span class="token plain"> tokenService</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> TokenService</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">authenticate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">request</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Request</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">MyUserProfile </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">undefined</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> token</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">extractCredentials</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">request</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">try</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> user</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> MyUserProfile </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">tokenService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">verifyToken</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">token</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> MyUserProfile</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> user</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">assign</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">code</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'INVALID_ACCESS_TOKEN'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> statusCode</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">401</span><span class="token punctuation" style="color:#393A34">,</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">extractCredentials</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">request</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Request</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">request</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">headers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">authorization</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpErrors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unauthorized</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Authorization header not found.</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> authHeaderValue </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> request</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">headers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">authorization</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">authHeaderValue</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">startsWith</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'Bearer'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpErrors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unauthorized</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Authorization header is not of type 'Bearer'.</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> parts </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> authHeaderValue</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">split</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">' '</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">parts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpErrors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unauthorized</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Authorization header value has too many parts. It must follow the pattern: 'Bearer xx.yy.zz' where xx.yy.zz is a valid JWT token.</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> token </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> parts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> token</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can even use multiple strategies in one project, if needed.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="interceptor">Interceptor<a href="#interceptor" class="hash-link" aria-label="Direct link to Interceptor" title="Direct link to Interceptor">​</a></h4><p>Interceptor is a middle layer comes after authentication. After the authentication strategy verified user's access token, interceptor will verify use's permission.</p><p>Run <code>lb4 interceptor</code> in your project root.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">? Interceptor name: authorize</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Is it a global interceptor? Yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Global interceptors are sorted by the order of an array of group names bound to ContextBindings.GLOBAL_INTERCEPTOR_ORDERED_GROUPS. See https://loopback.io/doc/en/lb4/Interceptors.html#order-of-invocation-for-interceptors.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Group name for the global interceptor: ('')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   create src/interceptors/authorize.interceptor.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   update src/interceptors/index.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Interceptor authorize was created in src/interceptors/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then change <code>src/interceptors/authorize.interceptor.ts</code> to this:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  inject</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  globalInterceptor</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Interceptor</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  InvocationContext</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  InvocationResult</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Provider</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ValueOrPromise</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/context'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Getter</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/core'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">HttpErrors</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/rest'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">MyUserProfile</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        MyAuthBindings</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        UserPermissionsFn</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        RequiredPermissions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../authorization'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">AuthenticationMetadata</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">AuthenticationBindings</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/authentication'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * This class will be bound to the application as an `Interceptor` during</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * `boot`</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">globalInterceptor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">''</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">tags</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'authorize'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">AuthorizationInterceptor</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">implements</span><span class="token plain"> </span><span class="token class-name">Provider</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">Interceptor</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">AuthenticationBindings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">METADATA</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> metadata</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> AuthenticationMetadata</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MyAuthBindings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">USER_PERMISSIONS</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">protected</span><span class="token plain"> checkPermissons</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> UserPermissionsFn</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">AuthenticationBindings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">CURRENT_USER</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> getCurrentUser</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Getter</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">MyUserProfile</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   * This method is used by LoopBack context to produce an interceptor function</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   * for the binding.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   *</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   * @returns An interceptor function</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">value</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">intercept</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   * The logic to intercept an invocation</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   * @param invocationCtx - Invocation context</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   * @param next - A function to invoke next interceptor or the target method</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">intercept</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    invocationCtx</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> InvocationContext</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function-variable function" style="color:#d73a49">next</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> ValueOrPromise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">InvocationResult</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">next</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">next</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> requiredPermissions </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">options </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> RequiredPermissions</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> user </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getCurrentUser</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">checkPermissons</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">user</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">permissions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> requiredPermissions</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpErrors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Forbidden</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'INVALID_ACCESS_PERMISSION'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>A global interceptor will be automatically applied to all methods in controllers.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="services">Services<a href="#services" class="hash-link" aria-label="Direct link to Services" title="Direct link to Services">​</a></h4><p>Create a folder <code>services</code> in <code>src/authorization</code>, then inside <code>services</code>, create a file named <code>JWT.service.ts</code>. This is a service that generates and verifies JWT tokens, and will be used by JWTStrategy.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">inject</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/context'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">HttpErrors</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/rest'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">promisify</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'util'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">TokenService</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/authentication'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">TokenServiceConstants</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../keys'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">MyUserProfile</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Credential</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../types'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">repository</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/repository'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">CharacterRepository</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../../repositories'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> _ </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'lodash'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">toJSON</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/testlab'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> jwt </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'jsonwebtoken'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> signAsync </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">promisify</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">jwt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sign</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> verifyAsync </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">promisify</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">jwt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">verify</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">JWTService</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">implements</span><span class="token plain"> </span><span class="token class-name">TokenService</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">repository</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CharacterRepository</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> characterRepository</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> CharacterRepository</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">verifyToken</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">token</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">MyUserProfile</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">token</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpErrors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unauthorized</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Error verifying token : 'token' is null</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> decryptedToken </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">verifyAsync</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">token</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> TokenServiceConstants</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">TOKEN_SECRET_VALUE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> userProfile </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> _</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">pick</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">decryptedToken</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'email'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'name'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">permissions</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> userProfile</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">generateToken</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">userProfile</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> MyUserProfile</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token builtin">string</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> token </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">signAsync</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">userProfile</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> TokenServiceConstants</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">TOKEN_SECRET_VALUE</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      expiresIn</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> TokenServiceConstants</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">TOKEN_EXPIRES_IN_VALUE</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> token</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getToken</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">credential</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Credential</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token builtin">string</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> foundUser </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findOne</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      where</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">email</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> credential</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">email</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">foundUser</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpErrors</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'NotFound'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">User with email </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">credential</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">email</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c"> not found.</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">credential</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">password </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> foundUser</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">password</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpErrors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unauthorized</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'The credentials are not correct.'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> currentUser</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> MyUserProfile </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> _</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">pick</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">toJSON</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">foundUser</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'email'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'name'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'permissions'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> MyUserProfile</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> token </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">generateToken</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">currentUser</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> token</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can also create your own authentication services, like Hash Password service in <a href="https://github.com/strongloop/loopback4-example-shopping/blob/master/packages/shopping/src/services/hash.password.bcryptjs.ts" target="_blank" rel="noopener noreferrer">the shopping example</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="putting-everything-together">Putting Everything Together<a href="#putting-everything-together" class="hash-link" aria-label="Direct link to Putting Everything Together" title="Direct link to Putting Everything Together">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="binding-all-the-pieces-in-applicationts">Binding all the Pieces in <code>application.ts</code><a href="#binding-all-the-pieces-in-applicationts" class="hash-link" aria-label="Direct link to binding-all-the-pieces-in-applicationts" title="Direct link to binding-all-the-pieces-in-applicationts">​</a></h4><p>Open <code>src/application.ts</code>, and add the following imports.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">asGlobalInterceptor</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/context'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">MyAuthBindings</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        JWTService</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        JWTStrategy</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        UserPermissionsProvider</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./authorization'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">AuthorizationInterceptor</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./interceptors'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">AuthenticationComponent</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       registerAuthenticationStrategy</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/authentication'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then, add the following lines in the constructor.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">options</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ApplicationConfig </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">options</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//add</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Bind authentication component related elements</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">component</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">AuthenticationComponent</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Bind JWT &amp; permission authentication strategy related elements</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">registerAuthenticationStrategy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> JWTStrategy</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MyAuthBindings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">TOKEN_SERVICE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toClass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">JWTService</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MyAuthBindings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">USER_PERMISSIONS</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toProvider</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">UserPermissionsProvider</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If you have more authentication strategies, add them in this way:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">registerAuthenticationStrategy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> NewStrategy</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="specifying-the-authentication-action-in-sequencets">Specifying the Authentication Action in <code>sequence.ts</code><a href="#specifying-the-authentication-action-in-sequencets" class="hash-link" aria-label="Direct link to specifying-the-authentication-action-in-sequencets" title="Direct link to specifying-the-authentication-action-in-sequencets">​</a></h4><p>In <code>src/sequence.ts</code>, add the following imports.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  AuthenticationBindings</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  AuthenticateFn</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/authentication'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then add those lines in the <code>handle</code> function.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">handle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">context</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> RequestContext</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">request</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> response</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> context</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> route </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findRoute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">request</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> args </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">parseParams</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">request</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> route</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//add authentication actions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">authenticateRequest</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">request</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">invoke</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">route</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">send</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">response</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      err</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">code </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AUTHENTICATION_STRATEGY_NOT_FOUND'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      err</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">code </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'USER_PROFILE_NOT_FOUND'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">assign</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">statusCode</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">401</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/* Unauthorized */</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">reject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This will check for authentication for every request.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="authenticate-apis">Authenticate APIs<a href="#authenticate-apis" class="hash-link" aria-label="Direct link to Authenticate APIs" title="Direct link to Authenticate APIs">​</a></h3><p>Our Authentication and Authorization components are ready to use. Now we can apply their decorators to our REST API endpoints.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="charactercontroller">CharacterController<a href="#charactercontroller" class="hash-link" aria-label="Direct link to CharacterController" title="Direct link to CharacterController">​</a></h4><p>Open <code>src/controllers/character.controller.ts</code>, add the following imports.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  MyUserProfile</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Credential</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  MyAuthBindings</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  PermissionKey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  CredentialsRequestBody</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  UserRequestBody</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  UserProfileSchema</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  JWTService</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../authorization'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">authenticate</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        TokenService</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AuthenticationBindings</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/authentication'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Inject <code>TOKEN_SERVICE</code> and <code>CURRENT_USER</code> in the constructor.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MyAuthBindings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">TOKEN_SERVICE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> jwtService</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> JWTService</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">AuthenticationBindings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">CURRENT_USER</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> getCurrentUser</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Getter</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">MyUserProfile</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then let's make some changes to the <code>@post /characters</code> API.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">post</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/characters'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">'200'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Character model instance'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">'x-ts-type'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Character</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">requestBody</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">UserRequestBody</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> character</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Character</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Character</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    character</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">permissions </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">PermissionKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ViewOwnUser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                             PermissionKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CreateUser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                             PermissionKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UpdateOwnUser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                             PermissionKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DeleteOwnUser</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">exists</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">character</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">email</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpErrors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">BadRequest</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">This email already exists</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> savedCharacter </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">character</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">delete</span><span class="token plain"> savedCharacter</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">password</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> savedCharacter</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Put <code>UserRequestBody</code> in <code>@requestBody</code> decorator to specify the format of request body. That is how we validate the format of email and password fields.</p><p>Because this API is used to create a regular character, we will assign <code>ViewOwnUser</code>, <code>CreateUser</code>, <code>UpdateOwnUser</code>, and <code>DeleteOwnUser</code> permissions to the new character.</p><p>We also need to create an API for login.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">post</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/characters/login'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">'200'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Token'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">login</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">requestBody</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CredentialsRequestBody</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> credential</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Credential</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">token</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> token </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">jwtService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getToken</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">credential</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">token</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This API will use <code>JWTService</code> to verify user email and password, and then generate a JWT based on necessary credential information, like email, password and permissions.</p><p>The next API we need is <code>@get /characters/me</code>. It will show the user current logged in.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/characters/me'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">'200'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'The current user profile'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> UserProfileSchema</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">authenticate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'jwt'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">"required"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">PermissionKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ViewOwnUser</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printCurrentUser</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">MyUserProfile</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getCurrentUser</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We will authenticate this API with <code>@authenticate('jwt', {"required": [PermissionKey.ViewOwnUser]})</code>. The first parameter <code>jwt</code> specify which authentication strategy you want to use for this API. If you have more than one strategy, make your choice here. The second parameter is an object which has one field <code>required</code> (array of <code>PermissionKey</code>). It specifies which permissions are required to access this API. In this case, the only required permission is <code>ViewOwnUser</code>. Because this API only shows current logged-in user information. You can customize permissions based on your APIs.</p><p>To get current logged-in user information, simply call <code>this.getCurrentUser()</code>.</p><p>The above three APIs show you most of the use cases. You should now have enough knowledge on how to apply LoopBack 4 authentication to your APIs.</p><p>Let me show you one more example before we're done.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="admincontroller">AdminController<a href="#admincontroller" class="hash-link" aria-label="Direct link to AdminController" title="Direct link to AdminController">​</a></h4><p>Let's create another controller for admins. Admins should have privilege to view, update, and delete any user.</p><p>Here is how we create an admin.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">post</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/admin'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">'200'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'create admin'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">'x-ts-type'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Character</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">query</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'admin_code'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> admin_code</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">requestBody</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> character</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Character</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Character</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">admin_code </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'901029'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpErrors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Forbidden</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'WRONG_ADMIN_CODE'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    character</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">permissions </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">PermissionKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ViewOwnUser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                             PermissionKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CreateUser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                             PermissionKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UpdateOwnUser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                             PermissionKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DeleteOwnUser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                             PermissionKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UpdateAnyUser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                             PermissionKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ViewAnyUser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                             PermissionKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DeleteAnyUser</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">exists</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">character</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">email</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpErrors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">BadRequest</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">This email already exists</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> savedCharacter </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">character</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">delete</span><span class="token plain"> savedCharacter</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">password</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> savedCharacter</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It is very similar to the <code>@post /characters</code> API. The difference is it requires an <code>admin_code</code> to create an admin with three more permissions: <code>UpdateAnyUser</code>, <code>ViewAnyUser</code>, and <code>DeleteAnyUser</code>.</p><p>This is an API to show the information of all users that match the filter criteria.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/admin/characters'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">'200'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Array of Character model instances'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'array'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> items</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">'x-ts-type'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Character</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">authenticate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'jwt'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">"required"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">PermissionKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ViewAnyUser</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">query</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'filter'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getFilterSchemaFor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Character</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> filter</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Filter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Character</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">filter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As you can see, this requires <code>ViewAnyUser</code> permission.</p><p>You can check my controllers <a href="https://github.com/gobackhuoxing/first-web-game-lb4/tree/part4/firstgame/src/controllers" target="_blank" rel="noopener noreferrer">here</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="applying-this-to-your-own-project">Applying This to Your Own Project<a href="#applying-this-to-your-own-project" class="hash-link" aria-label="Direct link to Applying This to Your Own Project" title="Direct link to Applying This to Your Own Project">​</a></h3><p>In this episode, we covered how to combine your self-defined authorization strategies and services with <code>@loopback/authentication</code> and how to apply it to your API.</p><p>You can always design your own strategies and services based on your project needs. For example, you may want to have a password hashing service, so that you don't directly save a user's raw password in the database. <a href="https://github.com/strongloop/loopback4-example-shopping/blob/master/packages/shopping/src/services/hash.password.bcryptjs.ts" target="_blank" rel="noopener noreferrer">Here</a> is an example of how to implement a password hashing service.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h3><p>Next episode, we will deploy this project to cloud. In the meantime, you can learn more about LoopBack in <a href="https://strongloop.com/strongblog/tag_LoopBack.html" target="_blank" rel="noopener noreferrer">past blogs</a>.</p>]]></content>
        <author>
            <name>Wen Bo</name>
            <uri>https://github.com/gobackhuoxing</uri>
        </author>
        <category label="how-to" term="how-to"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Migrating from LoopBack 3 to LoopBack 4]]></title>
        <id>https://loopback.io/blog/migrate-from-loopback-3-to-loopback-4</id>
        <link href="https://loopback.io/blog/migrate-from-loopback-3-to-loopback-4"/>
        <updated>2019-06-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Following the announcement of LoopBack 4 GA in October, LoopBack 3 entered Active Long Term Support (LTS). In March, we  announced that <a href="https://strongloop.com/strongblog/lb3-extended-lts/" target="_blank" rel="noopener noreferrer">LoopBack 3 will receive extended LTS</a> until December 2019. We made this choice to provide LoopBack 3 users more time to move to LoopBack 4 and for us to improve the migration experience. In order to incrementally migrate from LoopBack 3 to LoopBack 4, we have since introduced a way to mount your LoopBack 3 applications in a LoopBack 4 project.</p><p><a href="https://strongloop.com/authors/Miroslav_Bajto%C5%A1/" target="_blank" rel="noopener noreferrer">Miroslav</a> investigated different approaches for migration which you can see in the <a href="https://github.com/strongloop/loopback-next/issues/1849" target="_blank" rel="noopener noreferrer">Migration epic</a>. He settled on mounting the LoopBack 3 application in a LoopBack 4 project as part of incremental migration (see the <a href="https://github.com/strongloop/loopback-next/pull/2318" target="_blank" rel="noopener noreferrer">PoC</a> here). In this approach, the entire LoopBack 3 application is mounted, including its runtime dependencies. The LoopBack 3 Swagger spec is also converted to LoopBack 4 OpenAPI v3 and a unified spec is created.</p><p>If you are a current LoopBack 3 user who wants to migrate to LoopBack 4, learn all the steps needed to mount your application in this <a href="https://loopback.io/doc/en/lb4/Migrating-from-LoopBack-3.html" target="_blank" rel="noopener noreferrer">Migrating from LoopBack 3</a> doc.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's future success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Joining</a> our user group.</li></ul>]]></content>
        <author>
            <name>Nora Abdelgadir</name>
            <uri>https://github.com/nabdelgadir</uri>
        </author>
        <category label="migration" term="migration"/>
        <category label="LoopBack 3" term="LoopBack 3"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 May 2019 Milestone Update]]></title>
        <id>https://loopback.io/blog/may-2019-milestone</id>
        <link href="https://loopback.io/blog/may-2019-milestone"/>
        <updated>2019-06-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>As the weather starts to warm up for summer, the LoopBack team has turned up the heat on the milestone tasks we planned for the month of May and beyond. We worked on areas such as:</p><ul><li>Improving our documentation pages and API documentation.</li><li>Giving users unified website experience on <code>loopback.io</code>.</li><li>Making CI green across connector repositories and being able to test juggler 3.x and 4.x with connectors.</li><li>Implementation of Interceptors in the LoopBack framework.</li><li>Authentication extension point, refactoring authentication action, and using the new features in shopping example repository.</li><li>Inclusion of related models in model relations.</li><li>Testing out ways to roll out experimental features.</li></ul><p>These are just the tip of the iceberg. Read on to find out more on what the LoopBack team accomplished this month.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="method-interceptor-support">Method Interceptor Support<a href="#method-interceptor-support" class="hash-link" aria-label="Direct link to Method Interceptor Support" title="Direct link to Method Interceptor Support">​</a></h2><p>Interceptors are reusable functions to provide aspect-oriented logic around method invocations. There are many use cases for interceptors, such as:</p><ul><li>Add extra logic before / after method invocation. For example, logging or measuring method invocations.</li><li>Validate/transform arguments.</li><li>Validate/transform return values.</li><li>Catch/transform errors. For example, normalize error objects.</li><li>Override the method invocation. For example, return from cache.</li></ul><p>See <a href="https://github.com/strongloop/loopback-next/pull/2687" target="_blank" rel="noopener noreferrer">PR#2687</a> for more details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="binding-configuration">Binding Configuration<a href="#binding-configuration" class="hash-link" aria-label="Direct link to Binding Configuration" title="Direct link to Binding Configuration">​</a></h2><p>To allow bound items in the context to be configured, we introduced some conventions and corresponding APIs to make it simple and consistent in <a href="https://github.com/strongloop/loopback-next/pull/2259" target="_blank" rel="noopener noreferrer">PR#2259</a>.</p><p>We treat configurations for bound items in the context as dependencies, which can be resolved and injected in the same way of other forms of dependencies. For example, the <code>RestServer</code> can be configured with <code>RestServerConfig</code>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-mounted-loopback-3-application-in-loopback-4-example">New Mounted LoopBack 3 Application in LoopBack 4 Example<a href="#new-mounted-loopback-3-application-in-loopback-4-example" class="hash-link" aria-label="Direct link to New Mounted LoopBack 3 Application in LoopBack 4 Example" title="Direct link to New Mounted LoopBack 3 Application in LoopBack 4 Example">​</a></h2><p>We introduced a <a href="https://github.com/strongloop/loopback-next/tree/master/examples/lb3-application" target="_blank" rel="noopener noreferrer">new example</a> that illustrates mounting an existing LoopBack 3 application in a LoopBack 4 project. We took the <a href="https://github.com/strongloop/loopback-getting-started" target="_blank" rel="noopener noreferrer"><code>CoffeeShop</code> application</a> from loopback-getting-started and mounted it in a new LoopBack 4 project. The endpoints, including the OpenAPI spec, have also been mounted in the project. You can check out the example by running <code>lb4 example lb3-application</code>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="model-definitions-reference-in-operation-spec">Model Definitions Reference in Operation Spec<a href="#model-definitions-reference-in-operation-spec" class="hash-link" aria-label="Direct link to Model Definitions Reference in Operation Spec" title="Direct link to Model Definitions Reference in Operation Spec">​</a></h2><p>Controller methods can now reference model definitions through OpenAPI spec. This replaces the need to use <code>x-ts-type</code> extension to reference model schema. In addition, if an operation defines the model, another operation can reference that model without defining it.</p><p>For example, in the following code snippet, since the <code>Todo</code> model definition is provided by <code>@get('/todos')</code>, <code>@get('/todos/{id')</code> can now also reference it without defining it.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyController</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/todos'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">'200'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Array of Category model instances'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              $ref</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#/definitions/Todo'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              definitions</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Todo</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  title</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Todo'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  properties</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    title</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'string'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">object</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">/* … */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/todos/{id}'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">'200'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Todo model instance'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              $ref</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#/components/schemas/Todo'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">object</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/* … */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>To make model references even easier to use, we have also introduced a new helper <code>getModelSchemaRef</code> which builds a <code>$ref</code> entry with accompanied schema in <code>definitions</code> from the given model instance. See <a href="https://github.com/strongloop/loopback-next/pull/2971" target="_blank" rel="noopener noreferrer">PR#2971</a>.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyController</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/todos'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">'200'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Array of Category model instances'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getModelSchemaRef</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Todo</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">object</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">/* … */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/todos/{id}'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">'200'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Todo model instance'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getModelSchemaRef</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Todo</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">object</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/* … */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In the near future, we would like to leverage this new mechanism to emit different model schema for different API endpoints:</p><ul><li>Response schema of <code>find</code> and <code>findById</code> endpoints should include navigational properties for related models.</li><li>Response schema of <code>create</code> endpoint should exclude <code>id</code> and any other database-generated properties (e.g. <code>_rev</code> in CouchDB/Cloudant).</li><li>Response schema of <code>updateById</code> and <code>updateAll</code> endpoints should mark all model properties as optional.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="better-formatting-of-model-settings-object-in-scaffolded-files">Better Formatting of Model Settings Object in Scaffolded Files<a href="#better-formatting-of-model-settings-object-in-scaffolded-files" class="hash-link" aria-label="Direct link to Better Formatting of Model Settings Object in Scaffolded Files" title="Direct link to Better Formatting of Model Settings Object in Scaffolded Files">​</a></h2><p><a href="https://github.com/strongloop/loopback-next/pull/2843" target="_blank" rel="noopener noreferrer">PR#2843</a> improved the way how our CLI tool serialized model settings to TypeScript code.</p><p>Before this change, model settings object was converted to JSON, which produced non-idiomatic TypeScript code. For example:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> settings</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">"mongodb"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">"collection"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"clients"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyModel</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Entity</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now we convert the object into TypeScript object definition. See below for an example:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  settings</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mongodb</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">collection</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'clients'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyModel</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Entity</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="datatype-objectid-for-mongodb-connector">dataType: 'ObjectID' for MongoDB Connector<a href="#datatype-objectid-for-mongodb-connector" class="hash-link" aria-label="Direct link to dataType: 'ObjectID' for MongoDB Connector" title="Direct link to dataType: 'ObjectID' for MongoDB Connector">​</a></h2><p>You can set a model property's <code>mongodb</code> property definition <code>dataType</code> to "ObjectID" to enforce ObjectID coercion irrespective of the <code>strictObjectIDCoercion</code> setting.</p><p>In the following example, the <code>id</code> and <code>xid</code> will be coerced to <code>ObjectID</code> even if <code>strictObjectIDCoercion</code> is set to true.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token maybe-class-name">User</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ds</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">createModel</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">'user'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token known-class-name class-name">String</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">mongodb</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">dataType</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ObjectID'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">xid</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token known-class-name class-name">String</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">mongodb</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">dataType</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ObjectID'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">strictObjectIDCoercion</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>For more details, see <a href="https://github.com/strongloop/loopback-connector-mongodb/pull/517" target="_blank" rel="noopener noreferrer">PR#517</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="authentication">Authentication<a href="#authentication" class="hash-link" aria-label="Direct link to Authentication" title="Direct link to Authentication">​</a></h2><p>This month we implemented <a href="https://github.com/strongloop/loopback-next/pull/2822" target="_blank" rel="noopener noreferrer">a PoC PR</a> to illustrate plugging in the passport strategy in the new published <code>@loopback/autthentication</code> module. The PR proves the new authentication action is able to verify a request with both passport based and non passport based strategy. Therefore we just deprecated the old passport adapter in story <a href="https://github.com/strongloop/loopback-next/issues/2467" target="_blank" rel="noopener noreferrer">2467</a>, and focus on the new adapter creation in story <a href="https://github.com/strongloop/loopback-next/issues/2311" target="_blank" rel="noopener noreferrer">2311</a>. </p><p>The initial proposal for the new adapter is wrapping each configured strategy instance so that it fits the <code>AuthenticationStrategy</code> interface. Raymond suggested exploring another approach which applies a wrapper to the <code>passport</code> module itself. And since the team is discussing the work flow of incrementally adding a new feature, Miroslav suggested moving the new passport adapter to a standalone experimental module along with the comparison between two proposals. Eventually the adapter will be a component that can be plugged into <code>@loopback/authentication</code>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="experimental-feature-development">Experimental Feature Development<a href="#experimental-feature-development" class="hash-link" aria-label="Direct link to Experimental Feature Development" title="Direct link to Experimental Feature Development">​</a></h2><p>We've introduced experimental features to achieve a balance between the high code quality and the development speed.</p><p>At first we tried keeping the lab packages in a mirror repository <code>loopback-labs</code> for the purpose of isolation, then graduate the features into <code>loopback-next</code> when they are production ready. During the spike, we realized a better way to isolate each feature: create and release each feature from its own branch, so that features are independent from each other and have their own life cycle. The releasing process is also simpler since it only targets on one package. With this in mind, and considering the synchronization effort between two repositories, we decided to keep lab packages stay in <code>loopback-next</code>.</p><p>The work flow of adding an experimental package is documented in <a href="https://github.com/strongloop/loopback-next/blob/labs/base/LABS.md" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/blob/labs/base/LABS.md</a>. It explains how to create your experimental feature branch, incrementally improve the code and graduate the package.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation">Documentation<a href="#documentation" class="hash-link" aria-label="Direct link to Documentation" title="Direct link to Documentation">​</a></h2><p>We took some time to rework outdated sections of our documentation pages in May. First of all, we updated docs on how to <a href="https://loopback.io/doc/en/lb4/Testing-your-application.html#create-a-stub-service" target="_blank" rel="noopener noreferrer">create stub services</a> for controller unit tests. At the same time, we updated the status of auto-generated smoke test section and top-down application building. See <a href="https://github.com/strongloop/loopback-next/pull/2879" target="_blank" rel="noopener noreferrer">PR#2879</a> for more details. Moreover, our <a href="https://loopback.io/doc/en/lb4/hasOne-relation.html" target="_blank" rel="noopener noreferrer">hasOne relation</a> page also had some typos and errors and we were able to address them in <a href="https://github.com/strongloop/loopback-next/pull/2959" target="_blank" rel="noopener noreferrer">PR#2959</a>.</p><p>In <a href="https://github.com/strongloop/loopback-next/pull/2994" target="_blank" rel="noopener noreferrer">PR#2944</a>, we revamped the <a href="https://loopback.io/doc/en/lb4/Sequence.html" target="_blank" rel="noopener noreferrer">Sequences</a> documentation page with information on what happens behind the scenes for some of the sequence actions like <code>invoke</code> and <code>send</code>. We also added details on how to retrieve query string parameters.</p><p>We added a new <a href="https://loopback.io/doc/en/lb4/Components.html" target="_blank" rel="noopener noreferrer">Components</a> page to explain the shape and concept of components for extensibility as well as how they contribute artifacts to a LoopBack 4 application. For more details, check
out <a href="https://github.com/strongloop/loopback-next/pull/2702" target="_blank" rel="noopener noreferrer">PR#2702</a> and <a href="https://github.com/strongloop/loopback-next/pull/2361" target="_blank" rel="noopener noreferrer">PR#2361</a>.</p><p>In <a href="https://github.com/strongloop/loopback-next/pull/2834" target="_blank" rel="noopener noreferrer">PR#2834</a>, we introduced <a href="https://github.com/strongloop/loopback-next/tree/master/packages/tsdocs" target="_blank" rel="noopener noreferrer"><code>@loopback/tsdocs</code></a> package which provides API Docs for the rest of the LB4 packages in our <code>loopback-next</code> monorepo using Microsoft's <code>api-extractor</code> and <code>api-documenter</code> tools. It also integrates the generated API Docs for consumption in <code>loopback.io</code>. You can see them live <a href="https://loopback.io/doc/en/lb4/apidocs.index.html" target="_blank" rel="noopener noreferrer">here</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="examples-for-new-loopback-4-artifacts-concepts">Examples for New LoopBack 4 Artifacts/ Concepts<a href="#examples-for-new-loopback-4-artifacts-concepts" class="hash-link" aria-label="Direct link to Examples for New LoopBack 4 Artifacts/ Concepts" title="Direct link to Examples for New LoopBack 4 Artifacts/ Concepts">​</a></h2><p>We added a new <a href="https://github.com/strongloop/loopback-next/tree/master/examples/greeting-app" target="_blank" rel="noopener noreferrer">greeting-app</a> that shows how to compose an application from component and controllers, interceptors, and observers. The application is built on top of <a href="https://github.com/strongloop/loopback-next/tree/master/examples/greeter-extension" target="_blank" rel="noopener noreferrer">example-greeter-extension</a> and can greet users in different languages. It has a caching interceptor to handle multiple requests for the same payload (name and language) within a specific time. See <a href="https://github.com/strongloop/loopback-next/pull/2941" target="_blank" rel="noopener noreferrer">PR#2941</a> for more details.</p><p>On the same note, we added <a href="https://github.com/strongloop/loopback-next/tree/master/examples/context" target="_blank" rel="noopener noreferrer">standalone examples</a> for <code>@loopback/context</code> showing how to use the module as an Inversion of Control (IoC) and Dependency Injection (DI) container. We covered a wide array of usages for the utilities provided by the module such as context chaining, binding types, and customizing injection decorators/resolvers.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="unified-web-site-experience-on-loopbackio">Unified Web Site Experience on loopback.io<a href="#unified-web-site-experience-on-loopbackio" class="hash-link" aria-label="Direct link to Unified Web Site Experience on loopback.io" title="Direct link to Unified Web Site Experience on loopback.io">​</a></h2><p>We created the dedicated <a href="/blog/v4.loopback.io">web site for LoopBack 4</a> last year. Now that LoopBack 4 has become the active release, we are moving the LoopBack 4 pages back to loopback.io web site.</p><p>In the meantime, we're actively attempting to rebuild the “Who’s using LoopBack” section to showcase our users and the use cases. If you would like to be a part of it, please sign up <a href="https://github.com/strongloop/loopback-next/issues/3047" target="_blank" rel="noopener noreferrer">here</a>! </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-changes">Other Changes<a href="#other-changes" class="hash-link" aria-label="Direct link to Other Changes" title="Direct link to Other Changes">​</a></h2><ul><li><p><a href="https://github.com/strongloop/loopback-next/pull/2856" target="_blank" rel="noopener noreferrer">PR#2856</a> fixed REST API Explorer to correctly handle both <code>basePath</code> configuration specified at LoopBack application/server level and <code>mountPath</code> provided by Express when the LB app is mounted on an Express application.</p></li><li><p><a href="https://github.com/strongloop/loopback-next/pull/2823" target="_blank" rel="noopener noreferrer">PR#2823</a> improved the OpenAPI spec emitted for LoopBack 3 models when the entire LB3 application is mounted in LB4 project. In particular, the schema for request bodies of "create" requests now excludes <code>id</code> (primary key) properties when the model is configured with <code>forceId: true</code> (which is the default).</p></li><li><p>Keeping dependencies up-to-date is time consuming, especially in monorepos. Originally, we were used <a href="https://greenkeeper.io" target="_blank" rel="noopener noreferrer">GreenKeeper</a> to automate the task. Unfortunately, GreenKeeper does not support the combination of lerna
monorepos with package-locks enabled (see <a href="https://github.com/greenkeeperio/greenkeeper/issues/1080" target="_blank" rel="noopener noreferrer">greenkeeper#1080</a>).</p></li><li><p>In May, we migrated our <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer">Shopping example app</a> to <a href="https://renovatebot.com" target="_blank" rel="noopener noreferrer">RenovateBot</a>. The migration went well, and we are now migrating the main <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer">loopback-next</a> monorepo too.</p></li><li><p><a href="https://github.com/strongloop/loopback-next/pull/3013" target="_blank" rel="noopener noreferrer">PR#3013</a> removed implicit dependency of <code>@loopback/testlab</code> on <code>@types/mocha</code>. This dependency was preventing LoopBack projects to use Jest test framework instead of Mocha. Now that the fix was landed and published to npm registry, <code>@loopback/testlab</code> should work with any test framework that provides <code>it</code> and <code>it.skip</code> APIs.</p></li><li><p><a href="https://github.com/strongloop/loopback-next/pull/2996" target="_blank" rel="noopener noreferrer">PR#2996</a> makes sure we stay current with TypeScript and upgrades our project to use version <code>3.5.1</code>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="loopback-3">LoopBack 3<a href="#loopback-3" class="hash-link" aria-label="Direct link to LoopBack 3" title="Direct link to LoopBack 3">​</a></h2><p>Node.js 6 went end-of-life at the end of April. We are incrementally removing it from our CI build configurations and updating our <code>package.json</code> files to bump up the minimum supported version to Node.js 8.</p><p>When we introduced version 4 of loopback-datasource-juggler back in 2018, we did not update connector repositories to run tests against this new juggler version too. As a result, we were encountering failed builds when back-porting pull requests from juggler 4.x to 3.x. We looked into different ways how to address this problem and decided to go with a solution where a single connector run shared tests from multiple loopback-datasource-juggler versions. Some of the connectors have been already updated, we will be updating the rest in the next months.</p><p>Additional changes:</p><ul><li><code>generator-loopback</code>: The version of the Node.js engine is updated to &gt;= 8 because Node.js 6 entered EOF in April 2019.</li><li><code>generator-loopback</code>: We fixed two regression bugs to honour the name argument of command <code>lb swagger</code> and <code>lb boot-script</code>.</li><li><code>loopback-passport-component</code>: We landed a community PR to support user ldap profile configuration with group search for Microsoft active directory, you can check the details in PR <a href="https://github.com/strongloop/loopback-component-passport/pull/272" target="_blank" rel="noopener noreferrer">#267</a>.</li><li><code>loopback-connector-cloudant</code>: The CI failures are fixed after upgrading the dependency version to <code>loopback-connector-couchdb2@1.4.0</code>.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's future success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Joining</a> our user group.</li></ul>]]></content>
        <author>
            <name>Biniam Admikew</name>
            <uri>https://github.com/b-admike</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building an Online Game With LoopBack 4 - Customizing APIs in Controller (Part 3)]]></title>
        <id>https://loopback.io/blog/building-an-online-game-with-loopback-4-pt3</id>
        <link href="https://loopback.io/blog/building-an-online-game-with-loopback-4-pt3"/>
        <updated>2019-05-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="part-3-customizing-apis-in-controller">Part 3: Customizing APIs in Controller<a href="#part-3-customizing-apis-in-controller" class="hash-link" aria-label="Direct link to Part 3: Customizing APIs in Controller" title="Direct link to Part 3: Customizing APIs in Controller">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h3><p>In this series, I’m going to help you learn LoopBack 4 and how to use it to easily build your own API and web project. We’ll create a new project I’ve been working on: an online web text-based adventure game. In this game, you can create your own account to build characters, fight monsters and find treasures. You will be able to control your character to take a variety of actions: attacking enemies, casting spells, and getting loot. This game also allows multiple players to log in and play with their friends.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="previously-on-building-an-online-game-with-loopback-4">Previously on Building an Online Game With LoopBack 4<a href="#previously-on-building-an-online-game-with-loopback-4" class="hash-link" aria-label="Direct link to Previously on Building an Online Game With LoopBack 4" title="Direct link to Previously on Building an Online Game With LoopBack 4">​</a></h3><p>In the last episode, we used a third-party library to generate UUID and built relations between <code>character</code>, <code>weapon</code>, <code>armor</code>, and <code>skill</code>.</p><p>Here are the previous episodes:</p><ul><li><a href="https://strongloop.com/strongblog/building-online-game-with-loopback-4-pt1/" target="_blank" rel="noopener noreferrer">Part 1: Building a Simple LoopBack Project With MongoDB</a></li><li><a href="https://strongloop.com/strongblog/building-an-online-game-with-loopback-4-pt2/" target="_blank" rel="noopener noreferrer">Part 2: Generating Universally Unique ID and Managing Models Relationships</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="in-this-episode">In This Episode<a href="#in-this-episode" class="hash-link" aria-label="Direct link to In This Episode" title="Direct link to In This Episode">​</a></h3><p>We already have some simple APIs in our project. They are all default CRUD (Create, Read, Update, and Delete) APIs that auto-generated by LoopBack 4. In this episode, we will create our own APIs to achieve the following functions for character updating:</p><p><img loading="lazy" alt="models" src="/blog/assets/images/my-first-api-p2-models-f5854d7c955356bd60e51ef60dbc2ba1.png" width="1206" height="826" class="img_ev3q"></p><ul><li>The ability for users to equip their character with weapon, armor, and skill. This function should also be able to allow users to change weapon, armor, and skill for their character. In any of these cases, we should update <code>defence</code> and <code>attack</code> accordingly.</li><li>The ability for users to unequip their character. We also need to update <code>defence</code> and <code>attack</code>.</li><li>The ability to level up a character when it gets enough experience. We should update <code>currentExp</code>, <code>nextLevelExp</code>, <code>level</code>, <code>maxHealth</code>, <code>currentHealth</code>, <code>maxMana</code>, <code>currentMana</code>, <code>attack</code>, and <code>defence</code>.</li><li>The ability to check a character's <code>weapon</code>, <code>armor</code>, and <code>skill</code> information.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="create-controller">Create Controller<a href="#create-controller" class="hash-link" aria-label="Direct link to Create Controller" title="Direct link to Create Controller">​</a></h3><p>First, let's create a controller for updating your character. Run <code>lb4 controller</code> in your project root.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">wenbo:firstgame wenbo$ lb4 controller</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Controller class name: UpdateCharacter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? What kind of controller would you like to generate? REST Controller with CRUD functions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? What is the name of the model to use with this CRUD repository? Character</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? What is the name of your CRUD repository? CharacterRepository</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? What is the type of your ID? string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? What is the base HTTP path name of the CRUD operations? /updatecharacter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   create src/controllers/update-character.controller.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   update src/controllers/index.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Controller UpdateCharacter was created in src/controllers/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Open <code>/src/controllers/update-character.controller.ts</code>. Add the following imports because this controller is
associated with <code>Armor</code>, <code>Weapon</code>, <code>skill</code> as well.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Armor</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Weapon</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Skill</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../models'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">WeaponRepository</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ArmorRepository</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> SkillRepository </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../repositories'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then add the following lines into constructor:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">repository</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CharacterRepository</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> characterRepository </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> CharacterRepository</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//add following lines</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">repository</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">WeaponRepository</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> weaponRepository </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> WeaponRepository</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">repository</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ArmorRepository</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> armorRepository </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ArmorRepository</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">repository</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">SkillRepository</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> skillRepository </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> SkillRepository</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This will connect this controller with <code>Armor</code>, <code>Weapon</code>, and <code>skill</code>. You can now delete all those default APIs since we don't need them anymore.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="equip-character">Equip Character<a href="#equip-character" class="hash-link" aria-label="Direct link to Equip Character" title="Direct link to Equip Character">​</a></h3><p>The first API we need is <code>@patch '/updatecharacter/{id}/weapon'</code>. In this game, a character can only have one weapon. With that in mind, this API's job is to equip characters with a weapon and unequip the old weapon if there is one.</p><p>Here is code for this API:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">patch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/updatecharacter/{id}/weapon'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">'200'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'update weapon'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Weapon</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">updateWeapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">requestBody</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> weapon</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Weapon</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Weapon</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//equip new weapon</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> char</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Character </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">attack</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> weapon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">attack</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">defence</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> weapon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">defence</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//unequip old weapon</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> filter</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Filter </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">where</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">"characterId"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">weaponRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">filter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">undefined</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> oldWeapon</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Weapon </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">weapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">attack</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> oldWeapon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">attack</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">defence</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> oldWeapon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">defence</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">weapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">updateById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> char</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">weapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">weapon</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Let's go over it line by line.</p><p>This is the function signature. It means this API expects to get a character ID from URL and weapon entity from body.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">updateWeapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">requestBody</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> weapon</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Weapon</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Weapon</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The following lines will find the character entity from our database. Then we will update this character's <code>attack</code> and <code>defence</code>. The <code>!</code> after <code>attack</code> and <code>defence</code> tells the compiler we guarantee those variables are not undefined. Otherwise, we will get a compile error. In the <code>weapon</code> model, <code>attack</code> and <code>defence</code> are both required, so these cannot be empty.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">//equip new weapon</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> char</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Character </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">attack</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> weapon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">attack</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">defence</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> weapon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">defence</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This block will check if this character already has a weapon. If so, it will update the character's <code>attack</code> and <code>defence</code> and remove the old weapon from database.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">//unequip old weapon</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> filter</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Filter </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">where</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">"characterId"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">weaponRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">filter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">undefined</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> oldWeapon</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Weapon </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">weapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">attack</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> oldWeapon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">attack</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">defence</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> oldWeapon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">defence</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">weapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Those two lines will update the update character information in our database and put the new weapon into it.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">updateById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> char</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">weapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">weapon</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We need to handle <code>armor</code> exactly the same. But <code>skill</code> is a little bit different, because in this game <code>skill</code> will not influence <code>attack</code> and <code>defence</code>. We just need to update our new skill and delete the old skill.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">patch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/updatecharacter/{id}/skill'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">'200'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'update skill'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Skill</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">updateSkill</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">requestBody</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> skill</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Skill</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Skill</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">skill</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">skill</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">skill</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>When we delete a character, we also need to delete its <code>weapon</code>, <code>armor</code>, and <code>skill</code>. To do this, open <code>/src/controllers/character.controller.ts</code> and add the following lines in <code>del '/characters/{id}</code> API.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">del</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/characters/{id}'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">'204'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Character DELETE success'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">deleteById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">void</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//delete weapon, armor, and skill</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">weapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">armor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">skill</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">deleteById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="unequip-character">Unequip Character<a href="#unequip-character" class="hash-link" aria-label="Direct link to Unequip Character" title="Direct link to Unequip Character">​</a></h3><p>Unequipping the character is very easy.</p><p>For <code>weapon</code> and <code>armor</code>, simply remove them from database and update <code>attack</code> and <code>defence</code>.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">del</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/updatecharacter/{id}/weapon'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">'204'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'DELETE Weapon'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">deleteWeapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">void</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//unequip old weapon</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> filter</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Filter </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">where</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">"characterId"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">weaponRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">filter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">undefined</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> oldWeapon</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Weapon </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">weapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> char</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Character </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">attack</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> oldWeapon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">attack</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">defence</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> oldWeapon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">defence</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">weapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">updateById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> char</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>For <code>skill</code>, just remove it from database.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">del</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/updatecharacter/{id}/skill'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">'204'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'DELETE Skill'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">deleteSkill</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">void</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">skill</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="levelling-up-a-character">Levelling Up a Character<a href="#levelling-up-a-character" class="hash-link" aria-label="Direct link to Levelling Up a Character" title="Direct link to Levelling Up a Character">​</a></h3><p>When a character has enough experience, we reward it by levelling up. In <code>/src/controllers/update-character.controller.ts</code>:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">patch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/updatecharacter/{id}/levelup'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">'200'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'level up'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Character</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">levelUp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Character</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> char</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Character </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> levels</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">while</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">currentExp</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">nextLevelExp</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      levels</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">currentExp</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">nextLevelExp</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">nextLevelExp</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">level</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> levels</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">maxHealth</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> levels</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">currentHealth</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">maxHealth</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">maxMana</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> levels</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">currentMana</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">maxMana</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">attack</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> levels</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">defence</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> levels</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">updateById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> char</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> char</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Let's go over this line by line.</p><p>If a character just beat a very strong enemy and gained a lot of experience, it could level up more than once. So the first thing we need to do is figure out how many times we need to level up.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> levels</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">while</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">currentExp</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">nextLevelExp</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  levels</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">currentExp</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">nextLevelExp</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">nextLevelExp</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then we can update everything accordingly.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">level</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> levels</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">maxHealth</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> levels</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">currentHealth</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">maxHealth</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">maxMana</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> levels</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">currentMana</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">maxMana</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">attack</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> levels</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">defence</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> levels</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Lastly, we update this character in database.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">updateById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> char</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="check-character-information">Check Character Information<a href="#check-character-information" class="hash-link" aria-label="Direct link to Check Character Information" title="Direct link to Check Character Information">​</a></h3><p>The last function we need to achieve is the ability to check character information.</p><p>Here is the code for this API:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/updatecharacter/{id}'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">'200'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'armor, weapon, and skill info'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token builtin">any</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> res</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">any</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'no weapon'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'no armor'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'no skill'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> filter</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Filter </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">where</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">"characterId"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">weaponRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">filter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">undefined</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    res</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">weapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">armorRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">filter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">undefined</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    res</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">armor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">skillRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">filter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">undefined</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    res</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">skill</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> res</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We first create an array contains three elements: 'no weapon', 'no armor', 'no skill'.</p><p>Then we will check our database. For example, if this character has a weapon, we will replace <code>no weapon</code> with the weapon information. Lastly, we return the array as result.</p><p>That is all we want to achieve in this episode. If you can follow all those steps, you should be able to try those API at <a href="http://%5B::1%5D:3000" target="_blank" rel="noopener noreferrer">http://[::1]:3000</a></p><p>You can check <a href="https://github.com/gobackhuoxing/first-web-game-lb4/tree/part3/firstgame" target="_blank" rel="noopener noreferrer">here</a> for the code of this episode.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="applying-this-to-your-own-project">Applying This to Your Own Project<a href="#applying-this-to-your-own-project" class="hash-link" aria-label="Direct link to Applying This to Your Own Project" title="Direct link to Applying This to Your Own Project">​</a></h3><p>In this episode, we covered the how to customize APIs. You can always implement your own amazing idea in your LoopBack 4 project.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h3><p>In next episode, we will add user authentication and role-based access control to this project.</p><p>In the meantime, you can learn more about LoopBack in <a href="https://strongloop.com/strongblog/tag_LoopBack.html" target="_blank" rel="noopener noreferrer">past blogs</a>.</p>]]></content>
        <author>
            <name>Wen Bo</name>
            <uri>https://github.com/gobackhuoxing</uri>
        </author>
        <category label="how-to" term="how-to"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building an Online Game With LoopBack 4, Part 2 - Generating Universally Unique ID and Managing Models Relationships]]></title>
        <id>https://loopback.io/blog/building-an-online-game-with-loopback-4-pt2</id>
        <link href="https://loopback.io/blog/building-an-online-game-with-loopback-4-pt2"/>
        <updated>2019-05-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="part-2-generating-universally-unique-id-and-managing-models-relationships">Part 2: Generating Universally Unique ID and Managing Models Relationships<a href="#part-2-generating-universally-unique-id-and-managing-models-relationships" class="hash-link" aria-label="Direct link to Part 2: Generating Universally Unique ID and Managing Models Relationships" title="Direct link to Part 2: Generating Universally Unique ID and Managing Models Relationships">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h3><p>In this series, I’m going to help you learn LoopBack 4 and how to use it to easily build your own API and web project. We’ll create a new project I’ve been working on: an online web text-based adventure game. In this game, you can create your own account to build characters, fight monsters and find treasures. You will be able to control your character to take a variety of actions: attacking enemies, casting spells, and getting loot. This game also allows multiple players to log in and play with their friends.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="previously-on-building-an-online-game-with-loopback-4">Previously on Building an Online Game With LoopBack 4<a href="#previously-on-building-an-online-game-with-loopback-4" class="hash-link" aria-label="Direct link to Previously on Building an Online Game With LoopBack 4" title="Direct link to Previously on Building an Online Game With LoopBack 4">​</a></h3><p>In the previous episode, we created a foundation for our project. Now we have some basic APIs to create, edit, and delete a character.</p><p>Here is the previous episode:</p><ul><li><a href="https://strongloop.com/strongblog/building-online-game-with-loopback-4-pt1/" target="_blank" rel="noopener noreferrer">Part 1: Building a Simple LoopBack Project With MongoDB</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="in-this-episode">In This Episode<a href="#in-this-episode" class="hash-link" aria-label="Direct link to In This Episode" title="Direct link to In This Episode">​</a></h3><p>First, we will use a third-party library in our LoopBack 4 project to generate unique character IDs. Then we will create <code>weapon</code>, <code>armor</code>, and <code>skill</code> models and build relationships between those models.</p><p>Loopback 4 supports three relations for now:</p><ul><li><a href="https://loopback.io/doc/en/lb4/HasMany-relation.html" target="_blank" rel="noopener noreferrer">HasMany</a></li><li><a href="https://loopback.io/doc/en/lb4/BelongsTo-relation.html" target="_blank" rel="noopener noreferrer">BelongsTo</a></li><li><a href="https://loopback.io/doc/en/lb4/hasOne-relation.html" target="_blank" rel="noopener noreferrer">HasOne</a></li></ul><p>We will use <code>HasOne</code> in this episode.</p><p>You can check <a href="https://github.com/gobackhuoxing/first-web-game-lb4/tree/part2" target="_blank" rel="noopener noreferrer">here</a> for the code of this episode.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="universally-unique-id-uuid">Universally Unique ID (UUID)<a href="#universally-unique-id-uuid" class="hash-link" aria-label="Direct link to Universally Unique ID (UUID)" title="Direct link to Universally Unique ID (UUID)">​</a></h3><p>In the last episode, we used a while loop to generate continuous character IDs. However, that could be disaster in a real world application. Because fetching data from database is expensive. We don't want to do that hundreds times to just find a unique character ID. On the other hand, we don't really need continuous IDs, just unique IDs to distinguish characters. So we will use a better approach to generate universally unique IDs (UUID).</p><p>MongoDB can generate unique IDs for us. You can check more details <a href="https://github.com/strongloop/loopback-next/issues/1875" target="_blank" rel="noopener noreferrer">here</a> for how to do that. However, this approach may result in changing a lot of code.</p><p>So, we are going to use a third-party library called <a href="https://www.npmjs.com/package/uuid" target="_blank" rel="noopener noreferrer">uuid</a>. It's very easy to use and I think it's a good idea to show you how to use a third-party library in LoopBack 4 project. Run <code>npm install --save @types/uuid</code> at your project root to install it.</p><p>Then go back to <code>src/models/character.model.ts</code> and change the type of <code>id</code> to string. Because <a href="https://www.npmjs.com/package/uuid" target="_blank" rel="noopener noreferrer">uuid</a> can only generate string IDs.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//type: 'number',</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'string'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//id?: number;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Go to <code>src/controllers/character.controller.ts</code>. In the <code>get /characters/{id}</code> API, change the type of <code>id</code> to <code>string</code>.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/characters/{id}'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">'200'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Character model instance'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">'x-ts-type'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Character</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//@param.path.number('id') id: number</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">param</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Character</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then do the same thing for <code>patch /characters/{id}</code>, <code>put /characters/{id}</code>, and <code>del /characters/{id}</code> APIs.</p><p>The <a href="https://www.npmjs.com/package/uuid" target="_blank" rel="noopener noreferrer">uuid</a> can generate 36 digits string IDs. The implementation of uuid library is using some high distinction values (like DNS, local time, IP address etc) as the seed to randomly generate strings to reduce the chance of duplication. We can simply call the function <code>uuid()</code> to use this library.</p><p>Remember how we generated a character ID in the last episode? We can do it in a very elegant way by using <code>default</code> keyword in <code>model</code>.</p><p>Open <code>src/controllers/character.controller.ts</code> and remove following code from <code>post /characters</code> API:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">post</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/characters'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">'200'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Character model instance'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">'x-ts-type'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Character</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">requestBody</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> character</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Character</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Character</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">/**remove this</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">  let characterId = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">  while(await this.characterRepository.exists(characterId)){</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">    characterId ++;</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">  character.id = characterId;</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">  */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">character</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Open <code>src/models/character.model.ts</code>, and add the following import. This will import <code>uuid</code> so we can use it in our code.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">v4 </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> uuid</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'uuid'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Add the following line to generate character ID as <code>default</code>:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'string'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//add this line</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function-variable function" style="color:#d73a49">default</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">uuid</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>That is how we generate UUID for <code>character</code>. We will use the same way to generate UUID for other models later.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="model-relations">Model Relations<a href="#model-relations" class="hash-link" aria-label="Direct link to Model Relations" title="Direct link to Model Relations">​</a></h3><p>We will create <code>weapon</code>, <code>armor</code>, and <code>skill</code> models. Each <code>character</code> may have one <code>weapon</code>, one <code>armor</code>, and one <code>skill</code>. It is a <a href="https://loopback.io/doc/en/lb4/hasOne-relation.html" target="_blank" rel="noopener noreferrer">HasOne</a> relationship.</p><p><img loading="lazy" alt="Models" src="/blog/assets/images/my-first-api-p2-models-f5854d7c955356bd60e51ef60dbc2ba1.png" width="1206" height="826" class="img_ev3q"></p><p>Last episode, we built APIs for <code>character</code> in the order of model, datasource, repository, and controller. Now we will do it in the same way for <code>weapon</code>, <code>armor</code>, and <code>skill</code>. Note that we are not going to cover controller today, because I will have a whole episode focused on the work required (and there is a lot!).</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="model">Model<a href="#model" class="hash-link" aria-label="Direct link to Model" title="Direct link to Model">​</a></h4><p>First, we need to create <code>weapon</code> model. It's very similar to what we did in last episode. Run <code>lb4 model</code> at project root.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">wenbo:firstgame wenbo$ lb4 model</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Model class name: weapon</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please select the model base class Entity (A persisted model with an ID)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Allow additional (free-form) properties? No</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Let's add a property to Weapon</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter an empty property name when done</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Enter the property name: id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Property type: string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Is id the ID property? Yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Is it required?: No</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Default value [leave blank for none]:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Let's add another property to Weapon</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter an empty property name when done</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Enter the property name: name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Property type: string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Is it required?: Yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Default value [leave blank for none]:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Let's add another property to Weapon</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter an empty property name when done</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Enter the property name: attack</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Property type: number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Is it required?: Yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Default value [leave blank for none]:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Let's add another property to Weapon</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter an empty property name when done</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Enter the property name: defence</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Property type: number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Is it required?: Yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Default value [leave blank for none]:</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Do the same thing for <code>armor</code> and <code>skill</code>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="defining-hasone-model-relation-in-model">Defining <code>hasOne</code> Model Relation in Model<a href="#defining-hasone-model-relation-in-model" class="hash-link" aria-label="Direct link to defining-hasone-model-relation-in-model" title="Direct link to defining-hasone-model-relation-in-model">​</a></h4><p>Now let's add relationships to <code>character</code> model to indicate that a <code>character</code> has one <code>weapon</code>, <code>armor</code>, and <code>skill</code>. You can check <a href="https://loopback.io/doc/en/lb4/Relations.html" target="_blank" rel="noopener noreferrer">here</a> for more details on model relationship. You can also take a look at the <a href="https://loopback.io/doc/en/lb4/todo-list-tutorial-model.html" target="_blank" rel="noopener noreferrer">TodoList tutorial</a> to see how it handles a relationship.</p><p>Add the following imports to the head of <code>character.model.ts</code>.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Armor</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./armor.model'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Weapon</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./weapon.model'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Skill</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./skill.model'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then add the following code into <code>character.model.ts</code> after those auto-generated properties. That means each <code>character</code> may have one <code>weapon</code>, <code>armor</code>, and <code>skill</code>.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">hasOne</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> Armor</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  armor</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Armor</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">hasOne</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> Weapon</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  weapon</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Weapon</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">hasOne</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> Skill</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  skill</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Skill</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Next, we need to add a relationship for <code>weapon.model.ts</code> as well. Add the following imports to the head.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Character</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./character.model'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">v4 </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> uuid</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'uuid'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then add this code after those auto-generated properties.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">belongsTo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> Character</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    characterId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This gives <code>weapon</code> another property <code>characterId</code> means identifies the character this weapon belongs to. It's similar to the foreign key in a relational database.</p><p>Don't forget to generate UUID for <code>weapon</code>:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'string'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//add this line</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function-variable function" style="color:#d73a49">default</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">uuid</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">id</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Do the same thing for <code>armor.model.ts</code> and <code>skill.model.ts</code>. Now our models are all set.</p><p>You can check my code for all models at <a href="https://github.com/gobackhuoxing/first-web-game-lb4/tree/part2/firstgame/src/models" target="_blank" rel="noopener noreferrer">here</a>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="datasource">Datasource<a href="#datasource" class="hash-link" aria-label="Direct link to Datasource" title="Direct link to Datasource">​</a></h4><p>There is no need to create new datasource. We can use the MongoDB we created in last episode.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="repository">Repository<a href="#repository" class="hash-link" aria-label="Direct link to Repository" title="Direct link to Repository">​</a></h4><p>Run <code>lb4 repository</code> at your project root.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">? Please select the datasource MongoDatasource</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Select the model(s) you want to generate a repository Weapon</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please select the repository base class DefaultCrudRepository (Legacy juggler bridge)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   create src/repositories/weapon.repository.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   update src/repositories/index.ts</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then create repositories for <code>armor</code> and <code>skill</code> in the same way.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="defining-hasone-model-relation-in-repository">Defining <code>hasOne</code> Model Relation in Repository<a href="#defining-hasone-model-relation-in-repository" class="hash-link" aria-label="Direct link to defining-hasone-model-relation-in-repository" title="Direct link to defining-hasone-model-relation-in-repository">​</a></h4><p>Let's add relations for <code>character.repository.ts</code> first. Add following imports:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">HasOneRepositoryFactory</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> juggler</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> repository</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/repository'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Armor</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Weapon</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Skill</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../models'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Getter</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/core'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ArmorRepository</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./armor.repository'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">WeaponRepository</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./weapon.repository'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">SkillRepository</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./skill.repository'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Add the following code before the constructor:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> armor</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> HasOneRepositoryFactory</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Armor</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">typeof</span><span class="token plain"> Character</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> weapon</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> HasOneRepositoryFactory</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Weapon</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">typeof</span><span class="token plain"> Character</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> skill</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> HasOneRepositoryFactory</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Skill</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">typeof</span><span class="token plain"> Character</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This means <code>character</code> may have one <code>weapon</code>, <code>armor</code>, and <code>skill</code> ID. Then we are able to find the correct entity by that ID.</p><p>Then change the constructor to this:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'datasources.mongo'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> dataSource</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> MongoDataSource</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">repository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ArmorRepository</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">protected</span><span class="token plain"> armorRepositoryGetter</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Getter</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">ArmorRepository</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">repository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">WeaponRepository</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">protected</span><span class="token plain"> weaponRepositoryGetter</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Getter</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">WeaponRepository</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">repository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">SkillRepository</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">protected</span><span class="token plain"> skillRepositoryGetter</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Getter</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">SkillRepository</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Character</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dataSource</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">armor </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">createHasOneRepositoryFactoryFor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'armor'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> armorRepositoryGetter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">weapon </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">createHasOneRepositoryFactoryFor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'weapon'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> weaponRepositoryGetter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">skill </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">createHasOneRepositoryFactoryFor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'skill'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> skillRepositoryGetter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This can help you to assign <code>weapon</code>, <code>armor</code>, and <code>skill</code> to <code>character.</code></p><p>On the other hand, what we need to do for the <code>weapon.repository.ts</code> is kind of the same. Instead of <code>HasOneRepositoryFactory</code>, we add <code>BelongsToAccessor</code> before constructor.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">readonly</span><span class="token plain"> character</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> BelongsToAccessor</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Character</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">typeof</span><span class="token plain"> Weapon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And change the constructor to this:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">inject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'datasources.mongo'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> dataSource</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> MongoDataSource</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">repository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'CharacterRepository'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">protected</span><span class="token plain"> characterRepositoryGetter</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Getter</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">CharacterRepository</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Weapon</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dataSource</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">character </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">createBelongsToAccessorFor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'character'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">characterRepositoryGetter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Don't forget to add imports at the head of <code>weapon.repository.ts</code>.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">BelongsToAccessor</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> juggler</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> repository</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/repository'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Character</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../models'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">inject</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@loopback/core'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">CharacterRepository</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./character.repository'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then do the same thing for <code>armor.repository.ts</code> and <code>skill.repository.ts</code>. And our repositories are all set.</p><p>You can check my code for all repositories at <a href="https://github.com/gobackhuoxing/first-web-game-lb4/tree/part2/firstgame/src/repositories" target="_blank" rel="noopener noreferrer">here</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="applying-this-to-your-own-project">Applying This to Your Own Project<a href="#applying-this-to-your-own-project" class="hash-link" aria-label="Direct link to Applying This to Your Own Project" title="Direct link to Applying This to Your Own Project">​</a></h3><p>In this episode, we used a third-party library to generate UUID. You can easily use any external library in you LoopBack 4 project.</p><p>We also built relations between <code>character</code>, <code>weapon</code>, <code>aromr</code>, and <code>skill</code>. In a real world application, most of entities have relationships between each other. You can use LoopBack 4 to easily manage that in your project.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h3><p>In our next episode, we will do a lot of coding in <code>controller</code> to create <code>weapon</code>, <code>armor</code>, <code>skill</code> and equip a character with them. Controller is where you achieve most of your project functions and business logic. I am sure we will have a lot of fun in next episode.</p><p>In the meantime, you can learn more about LoopBack in <a href="https://strongloop.com/strongblog/tag_LoopBack.html" target="_blank" rel="noopener noreferrer">past blogs</a>.</p>]]></content>
        <author>
            <name>Wen Bo</name>
            <uri>https://github.com/gobackhuoxing</uri>
        </author>
        <category label="how-to" term="how-to"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 April 2019 Milestone Update]]></title>
        <id>https://loopback.io/blog/april-2019-milestone</id>
        <link href="https://loopback.io/blog/april-2019-milestone"/>
        <updated>2019-05-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>April was a very productive month for the LoopBack team! We focused on the following areas:</p><ul><li>Strong referential integrity for relations</li><li>Model discovery</li><li>Basic Life Cycle Support</li><li>Adding more architectural patterns to support extensions</li><li>Authentication</li><li>Node 12 is now officially supported by LoopBack 4</li><li>Exposing LoopBack 3 applications in LoopBack 4 projects</li></ul><p>Besides the items above, we landed several additional improvements. Keep reading to learn more details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="spike-on-unique-and-foreign-key-constraints">Spike on UNIQUE and FOREIGN KEY Constraints<a href="#spike-on-unique-and-foreign-key-constraints" class="hash-link" aria-label="Direct link to Spike on UNIQUE and FOREIGN KEY Constraints" title="Direct link to Spike on UNIQUE and FOREIGN KEY Constraints">​</a></h2><p>Relations like HasMany, HasOne and BelongsTo depend on the underlying database to enforce integrity and referential constraints. At the moment, LoopBack assumes those constraints are either already defined (when working with existing database schema) or created manually by the user (when creating schema from LoopBack models). This manual step is very cumbersome. Secondly, the database migration provided by LoopBack does not provide any information about such steps and thus it's easy for inexperienced users to unknowingly create database schema allowing race conditions and creating room for inconsistency in the stored data.</p><p>Ideally, we want developers to include any additional constraints in the definition of models and properties, and have our connectors translate these constraints to database-specific setup instruction as part of schema migration.</p><p>Historically, LoopBack did provide some level of support for indexes and foreign keys. Unfortunately, this was implemented at connector level and each connector provided a slightly different flavor.</p><p>To improve this situation, we started with some research on the current status of support in different connectors and proposed a new definition syntax that will become a new standard for LoopBack models.</p><p>For example, a HasOne relation needs to define a UNIQUE index and a FOREIGN KEY constraint for the property storing relational link. The proposed syntax makes this very easy to express directly in your TypeScript source code:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">TodoListImage</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Entity</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">belongsTo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> TodoList</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      unique</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      references</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function-variable function" style="color:#d73a49">model</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> TodoList</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        property</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        onUpdate</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'RESTRICT'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        onDelete</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'CASCADE'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  todoListId</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// other properties, etc.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Please refer to <a href="https://github.com/strongloop/loopback-next/pull/2712" target="_blank" rel="noopener noreferrer">PR#2712</a> to learn more about the proposed syntax and for a list of follow-up stories created to implement the proposed functionality.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="hasmanybelongstohasone-relation-limitations-for-nosql-databases">HasMany/BelongsTo/HasOne Relation Limitations for NoSQL Databases<a href="#hasmanybelongstohasone-relation-limitations-for-nosql-databases" class="hash-link" aria-label="Direct link to HasMany/BelongsTo/HasOne Relation Limitations for NoSQL Databases" title="Direct link to HasMany/BelongsTo/HasOne Relation Limitations for NoSQL Databases">​</a></h2><p>These relations work best with relational databases that support foreign key and unique constraints and attempting to use them with NoSQL databases will lead to unexpected behaviour. Our model relation documentation has been updated to reflect these limitations. See <a href="https://loopback.io/doc/en/lb4/HasMany-relation.html" target="_blank" rel="noopener noreferrer">HasMany Relation</a>, <a href="https://loopback.io/doc/en/lb4/BelongsTo-relation.html" target="_blank" rel="noopener noreferrer">BelongsTo Relation</a>, and <a href="https://loopback.io/doc/en/lb4/hasOne-relation.html" target="_blank" rel="noopener noreferrer">HasOne Relation</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="model-discovery">Model Discovery<a href="#model-discovery" class="hash-link" aria-label="Direct link to Model Discovery" title="Direct link to Model Discovery">​</a></h2><p>Models can now be discovered from a supported datasource by running the <code>lb4 discover</code> command. See <a href="https://loopback.io/doc/en/lb4/Discovering-models.html" target="_blank" rel="noopener noreferrer">Discovering models from relational databases</a>. This new feature was contributed by the community.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="basic-life-cycle-support">Basic Life Cycle Support<a href="#basic-life-cycle-support" class="hash-link" aria-label="Direct link to Basic Life Cycle Support" title="Direct link to Basic Life Cycle Support">​</a></h2><p>It's often desirable for various types of artifacts to participate in certain life cycles events and perform some related processing. Basic life cycle support introduces these capabilities:</p><ul><li>Registration of life cycle observers and actions using context bindings.</li><li>An <code>lb4 observer</code> command to generate life cycle scripts.</li><li>Discover and boot life cycle scripts.</li></ul><p>See <a href="https://loopback.io/doc/en/lb4/Life-cycle.html" target="_blank" rel="noopener noreferrer">Life cycle events and observers</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="added-injectbinding-and-improved-injectsetter">Added @inject.binding and Improved @inject.setter<a href="#added-injectbinding-and-improved-injectsetter" class="hash-link" aria-label="Direct link to Added @inject.binding and Improved @inject.setter" title="Direct link to Added @inject.binding and Improved @inject.setter">​</a></h2><p><a href="https://github.com/strongloop/loopback-next/pull/2657" target="_blank" rel="noopener noreferrer">PR#2657</a> improves <code>@inject.setter</code> to allow binding creation policy. It also adds <code>@inject.binding</code> to resolve/configure a binding via dependency injection.</p><p>See <a href="https://loopback.io/doc/en/lb4/Decorators_inject.html#injectsetter" target="_blank" rel="noopener noreferrer">@inject.setter</a> and <a href="https://loopback.io/doc/en/lb4/Decorators_inject.html#injectbinding" target="_blank" rel="noopener noreferrer">@inject.binding</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="decoratorhelper-functions-for-extension-pointextensions">Decorator/Helper Functions for Extension Point/Extensions<a href="#decoratorhelper-functions-for-extension-pointextensions" class="hash-link" aria-label="Direct link to Decorator/Helper Functions for Extension Point/Extensions" title="Direct link to Decorator/Helper Functions for Extension Point/Extensions">​</a></h2><p><a href="https://wiki.eclipse.org/FAQ_What_are_extensions_and_extension_points%3F" target="_blank" rel="noopener noreferrer">Extension Point/extension</a> is a very powerful design pattern that promotes loose coupling and offers great extensibility. There are many use cases in LoopBack 4 that fit into design pattern. For example:</p><ul><li><code>@loopback/boot</code> uses <code>BootStrapper</code> that delegates to <code>Booters</code> to handle different types of artifacts.</li><li><code>@loopback/rest</code> uses <code>RequestBodyParser</code> that finds the corresponding <code>BodyParsers</code> to parse request body encoded in different media types.</li><li><code>@loopback/core</code> uses <code>LifeCycleObserver</code> to observe <code>start</code> and <code>stop</code> events of the application life cycles.</li></ul><p>To add a feature to the framework and allow it to be extended, we divide the responsibility into two roles:</p><ul><li><p>Extension point: it represents a <strong>common</strong> functionality that the framework depends on and interacts with. Examples include booting the application, parsing http request bodies, and handling life cycle events. Meanwhile, the extension point also defines contracts for its extensions to follow so that it can discover corresponding extensions and delegate control to them without having to hard code such dependencies.</p></li><li><p>Extensions: they are implementations of <strong>specific</strong> logic for an extension point, such as, a booter for controllers, a body parser for xml, and a life cycle observer to load some data when the application is started. Extensions must conform to the contracts defined by the extension point.</p></li></ul><p>See <a href="https://loopback.io/doc/en/lb4/Extension-point-and-extensions.html" target="_blank" rel="noopener noreferrer">Extension point and extensions</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="authentication">Authentication<a href="#authentication" class="hash-link" aria-label="Direct link to Authentication" title="Direct link to Authentication">​</a></h2><p>To support multiple authentication strategies in the revised <a href="https://github.com/strongloop/loopback-next/blob/master/packages/authentication/docs/authentication-system.md" target="_blank" rel="noopener noreferrer">authentication system</a> in <code>@loopback/authentication</code> that we started last month, we introduced:</p><ul><li>An authentication strategy interface that contributed authentication strategies must implement.</li><li>An authentication strategy extension point to which contributed authentication strategies must register themselves as an extension.</li><li>Documentation demonstrating how a contributed authentication strategy implements the authentication strategy interface and registers itself as an extension of the extension point.</li><li>Documentation demonstrating how a custom sequence is defined to introduce the authentication action,.</li><li>Documentation demonstrating how the authentication action calls the authentication strategy provider to resolve a strategy by name.</li><li>Documentation demonstrating how a controller method is decorated with the <code>@authenticate('strategy_name')</code> decorator to define an endpoint the requires authentication.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="nodejs-12">Node.js 12<a href="#nodejs-12" class="hash-link" aria-label="Direct link to Node.js 12" title="Direct link to Node.js 12">​</a></h2><p>With Node.js 12.0.0 officially released (see <a href="https://medium.com/@nodejs/introducing-node-js-12-76c41a1b3f3f" target="_blank" rel="noopener noreferrer">Introducing Node.js 12</a>), we are investigating effort required to support this new Node.js version.</p><p>LoopBack 4 has been already updated for Node.js 12.0.0. We had to tweak few places in <code>loopback-datasource-juggler</code> to make our test suite pass on the new runtime version, which you can learn more about in <a href="https://github.com/strongloop/loopback-datasource-juggler/pull/1728" target="_blank" rel="noopener noreferrer">PR#1728</a>.</p><p>LoopBack 3 core packages <code>loopback</code> and <code>strong-remoting</code> work on Node.js 12.0.0 out of the box, <code>loopback-datasource-juggler</code> version 3 was fixed <a href="https://github.com/strongloop/loopback-datasource-juggler/pull/1729" target="_blank" rel="noopener noreferrer">PR#1729</a>.</p><p>In the next weeks and months, we are going to check our connectors and other LoopBack 3 packages like <code>loopback-cli</code>. If all goes well, then all LoopBack components and connectors will support Node.js 12 by the time it enters LTS mode in October this year.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="working-with-express-middleware">Working with Express Middleware<a href="#working-with-express-middleware" class="hash-link" aria-label="Direct link to Working with Express Middleware" title="Direct link to Working with Express Middleware">​</a></h2><p>We added a new section called <a href="https://loopback.io/doc/en/lb4/Sequence.html#working-with-express-middleware" target="_blank" rel="noopener noreferrer">Working with Express middleware</a>. This describes the differences between LoopBack REST layer and Express middleware and explains how to map different kinds of Express middleware to LoopBack concepts and APIs.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="migration-from-loopback-3-to-loopback-4">Migration from LoopBack 3 to LoopBack 4<a href="#migration-from-loopback-3-to-loopback-4" class="hash-link" aria-label="Direct link to Migration from LoopBack 3 to LoopBack 4" title="Direct link to Migration from LoopBack 3 to LoopBack 4">​</a></h2><p>After we implemented <a href="https://loopback.io/doc/en/lb4/Routes.html#mounting-an-express-router" target="_blank" rel="noopener noreferrer"><code>mountExpressRouter</code></a>, we continued on the <a href="https://github.com/strongloop/loopback-next/issues/2479" target="_blank" rel="noopener noreferrer">Migration epic</a> and implemented a booter component for booting LoopBack 3 applications on a LoopBack 4 project. <code>Lb3AppBooterComponent</code> can be used to boot the LoopBack 3 application, convert its Swagger spec into OpenAPI version 3, and mount the LoopBack 3 application on the LoopBack 4 project. </p><p>The component offers two modes to mount your LoopBack 3 application: the full application or only the REST router. By default, it will mount the full application, but you have the option to modify it to only the REST routes along with the base path the routes are mounted on top of. </p><p>To see how to use the component, see <a href="https://loopback.io/doc/en/lb4/Boot-and-Mount-a-LoopBack-3-application.html" target="_blank" rel="noopener noreferrer">Boot and Mount a LoopBack 3 application</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="build-tools">Build Tools<a href="#build-tools" class="hash-link" aria-label="Direct link to Build Tools" title="Direct link to Build Tools">​</a></h2><ul><li>To allow the TypeScript compiler to catch even more bugs for us, we have enabled the following additional checks: <code>noImplicitThis</code>, <code>alwaysStrict</code> and <code>strictFunctionTypes</code>, see <a href="https://github.com/strongloop/loopback-next/pull/2704" target="_blank" rel="noopener noreferrer">PR#2704</a>. This exercise discovered few problems in our current codebase, the non-trivial ones were fixed by standalone pull requests <a href="https://github.com/strongloop/loopback-next/pull/2733" target="_blank" rel="noopener noreferrer">PR#2733</a>, <a href="https://github.com/strongloop/loopback-next/pull/2711" target="_blank" rel="noopener noreferrer">PR#2711</a> and <a href="https://github.com/strongloop/loopback-next/pull/2728" target="_blank" rel="noopener noreferrer">PR#2728</a>.</li></ul><p>Please note that projects scaffolded by our <code>lb4</code> tool are using <code>@loopback/build</code> and our shared <code>tsconfig.json</code> by default. As a result, these projects may start failing to compile if they are violating any of the newly enabled checks.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="bug-fixes--improvements">Bug Fixes / Improvements<a href="#bug-fixes--improvements" class="hash-link" aria-label="Direct link to Bug Fixes / Improvements" title="Direct link to Bug Fixes / Improvements">​</a></h2><ul><li><p>We have relaxed the relation constraint checks to allow requests that include the constrained property as long as they provide the same property value as the one imposed by the constraint. See <a href="https://github.com/strongloop/loopback-next/pull/2754" target="_blank" rel="noopener noreferrer">PR#2754</a>.</p></li><li><p>In the spike of the inclusion filter, we realized the importance of supporting cyclic references. </p></li></ul><p>For example: </p><p>Model <code>CategoryWithRelations</code> has a property <code>products</code> containing an array of model <code>ProductWithRelations</code>. <code>ProductWithRelations</code> has a property <code>category</code> containing <code>CategoryWithRelations</code>.</p><p>In April we fixed generating the JSON schema for models with circular dependencies as the pre-work of the inclusion filter. Given the following model definitions:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Category</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">array</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> Product</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  products</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Product</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Product</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">property</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> Category</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  category</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Category</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now you can call <code>getJsonSchema(Category)</code> and <code>getJsonSchema(Product)</code> to get the JSON schemas without running into an infinite reference error.</p><ul><li><p>OpenAPI code generation for naming and typing was improved. See <a href="https://github.com/strongloop/loopback-next/pull/2722" target="_blank" rel="noopener noreferrer">PR#2722</a>.</p></li><li><p>Allow '-' to be used in in path template variable names. See <a href="https://github.com/strongloop/loopback-next/pull/2724" target="_blank" rel="noopener noreferrer">PR#2724</a>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="connector-bug-fixesimprovements">Connector Bug Fixes/Improvements<a href="#connector-bug-fixesimprovements" class="hash-link" aria-label="Direct link to Connector Bug Fixes/Improvements" title="Direct link to Connector Bug Fixes/Improvements">​</a></h2><ul><li><p>When using protocol mongodb+srv, the port must not be set in the connection url. See <a href="https://github.com/strongloop/loopback-connector-mongodb/pull/497" target="_blank" rel="noopener noreferrer">PR#497</a> provided by the community.</p></li><li><p>We now support the <code>fields</code> filter in the <code>loopback-connector-couchdb2</code>, you can retrieve the data in the Couchdb 2.0 database with specified fields. Check out the syntax of the filter in our <a href="https://loopback.io/doc/en/lb3/Fields-filter.html" target="_blank" rel="noopener noreferrer">documentation</a>.</p></li><li><p>Add possibility to configure the foreign key constraint with 2 optional triggers for mysql : onUpdate and onDelete. See <a href="https://github.com/strongloop/loopback-connector-mysql/pull/370" target="_blank" rel="noopener noreferrer">PR#370</a> provided by the community.</p></li><li><p>We fixed our CI failing tests in Cloudant and MongoDB connectors to have green builds on master. The Cloudant fixes required changes in <a href="https://github.com/strongloop/loopback-datasource-juggler/pull/1720" target="_blank" rel="noopener noreferrer">Juggler</a> and <a href="https://github.com/strongloop/loopback-connector-couchdb2/pull/59" target="_blank" rel="noopener noreferrer">Cloudant</a> for Cloudant/CouchDB connectors. See <a href="https://github.com/strongloop/loopback-connector-mongodb/pull/505" target="_blank" rel="noopener noreferrer">PR#505</a> for the MongoDB fix. We aim to remove unneccessary MongoDB downstream builds in <a href="https://github.com/strongloop/loopback-connector-mongodb/issues/509" target="_blank" rel="noopener noreferrer">Issue#509</a>.</p></li><li><p>We've made some fixes in both Juggler and MongoDB connector to address coercion of deeply nested primitive datatypes (Number, Date etc.) as well as <code>Decimal128</code> MongoDB type, These changes address coercion of the nested properties on Create and Update operations. See <a href="https://github.com/strongloop/loopback-connector-mongodb/pull/501" target="_blank" rel="noopener noreferrer">PR#501</a> and <a href="https://github.com/strongloop/loopback-datasource-juggler/pull/1702" target="_blank" rel="noopener noreferrer">PR#1702</a> for the details. Unfortunately, a regression was introduced with Juggler <a href="https://github.com/strongloop/loopback-datasource-juggler/pull/1702" target="_blank" rel="noopener noreferrer">PR#1702</a>, and <a href="https://github.com/strongloop/loopback-datasource-juggler/pull/1726" target="_blank" rel="noopener noreferrer">PR#1726</a> aims to fix it.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="loopback-2x-reached-end-of-life">LoopBack 2.x Reached End of Life<a href="#loopback-2x-reached-end-of-life" class="hash-link" aria-label="Direct link to LoopBack 2.x Reached End of Life" title="Direct link to LoopBack 2.x Reached End of Life">​</a></h2><p>After almost 5 years since the initial release, LoopBack version 2 has reached end of life and will not receive any new bug fixes. Specifically, no security vulnerabilities will be fixed in this version going forward. If you haven't done so yet, then you should migrate all projects running on LoopBack 2 to a newer framework version as soon as possible. See <a href="https://strongloop.com/strongblog/lb3-extended-lts/" target="_blank" rel="noopener noreferrer">LoopBack 3 Receives Extended Long Term Support</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's future success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Joining</a> our user group.</li></ul>]]></content>
        <author>
            <name>Dominique Emond</name>
            <uri>https://github.com/emonddr</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building an Online Game With LoopBack 4 (Part 1)]]></title>
        <id>https://loopback.io/blog/building-online-game-with-loopback-4-pt1</id>
        <link href="https://loopback.io/blog/building-online-game-with-loopback-4-pt1"/>
        <updated>2019-04-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="part-1-building-a-simple-loopback-project-with-mongodb">Part 1: Building a Simple LoopBack Project With MongoDB<a href="#part-1-building-a-simple-loopback-project-with-mongodb" class="hash-link" aria-label="Direct link to Part 1: Building a Simple LoopBack Project With MongoDB" title="Direct link to Part 1: Building a Simple LoopBack Project With MongoDB">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h3><p>"Ready to build amazing things?" asks the LoopBack 4 homepage before encouraging you to try the open source framework.</p><p>"Try LoopBack 4 now."</p><p>In this series, I'm going to do exactly that! Join me as I create an API web game using LoopBack 4.</p><p>The main purpose of this series is to help you learn LoopBack 4 and how to use it to easily build your own API and web project. We'll do so by creating a new project I'm working on: an online web text-based adventure game. In this game, you can create your own account to build characters, fight monsters and find treasures. You will be able to control your character to take a variety of actions: attacking enemies, casting spells, and getting loot. This game should also allow multiple players to log in and play with their friends.</p><p>Some brief background on myself, first. I graduated from college last year. I don't have any background on web or game development. I am sure most of you have better understanding than me on those fields. If I can do this, you can do it too - perhaps even better!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="why-loopback-4">Why LoopBack 4?<a href="#why-loopback-4" class="hash-link" aria-label="Direct link to Why LoopBack 4?" title="Direct link to Why LoopBack 4?">​</a></h3><p>LoopBack 4 is an open source framework that can help you build REST API. You can use LB4 to automatically generate simple APIs in couple of minutes without any coding. You can even easily connect your project to many popular databases. For this project, I will use MongoDB as my database. I don't even need to know how to use MongoDB as LB4 will handle everyting for me. Isn't this like magic?</p><p>Another great advantage of LB4 is that it is extensible. LoopBack artifacts can be managed by types. New artifact types can be introduced. Instances for a given type can be added, removed, or replaced. Organizing artifacts in a hierarchy of extension points/extensions decouples providers and consumers. You can write your own extensions to augment the framework.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="project-plan">Project Plan<a href="#project-plan" class="hash-link" aria-label="Direct link to Project Plan" title="Direct link to Project Plan">​</a></h3><p>In this series, my goals are to build the following functionality into the game:</p><ul><li>The ability for users to create their own character and customize their character.</li><li>The ability for users to equip their character with weapon, armor, and skill.</li><li>Establish basic functionality for the game: attack, defend, and cast spells.</li><li>User authorization and role-based access control.</li><li>The ability for multiple users login and play at the same time.</li><li>User Interface (UI).</li><li>Deploying to the cloud, such as IBM cloud, AWS, Google Cloud or Azure.</li></ul><p>This is a diagram for the relationships between <code>character</code>, <code>weapon</code>, <code>armor</code>, and <code>skill</code>.</p><p><img loading="lazy" alt="relations" src="/blog/assets/images/my-first-api-p1-models-b3e446a5ff537982e84dfa6634b9d66b.png" width="1224" height="810" class="img_ev3q"></p><p>In this first part of the series, we will cover <code>character</code> model.</p><p>You can check my code <a href="https://github.com/gobackhuoxing/first-web-game-lb4/tree/part1" target="_blank" rel="noopener noreferrer">here</a> for this episode.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="in-this-episode">In this Episode<a href="#in-this-episode" class="hash-link" aria-label="Direct link to In this Episode" title="Direct link to In this Episode">​</a></h3><p>To begin things, I will start with the easiest task: auto-generate APIs for users to create their character and connect to MongoDB.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="before-we-start">Before We Start<a href="#before-we-start" class="hash-link" aria-label="Direct link to Before We Start" title="Direct link to Before We Start">​</a></h3><p>There are some prerequisites you may want to catch up on before we start.</p><ul><li><p>Basic concepts of <a href="https://www.typescriptlang.org/docs/home.html" target="_blank" rel="noopener noreferrer">TypeScript</a>, <a href="https://www.w3schools.com/js/" target="_blank" rel="noopener noreferrer">Javascript</a> and <a href="https://www.w3schools.com/nodejs/nodejs_intro.asp" target="_blank" rel="noopener noreferrer">Node.js</a>.</p></li><li><p><a href="https://loopback.io/doc/en/lb4/Getting-started.html" target="_blank" rel="noopener noreferrer">Install LoopBack 4</a>.</p></li></ul><p>I also highly recommend you to check these two examples:</p><ul><li><a href="https://loopback.io/doc/en/lb4/todo-tutorial.html" target="_blank" rel="noopener noreferrer">Todo tutorial</a>.</li><li><a href="https://loopback.io/doc/en/lb4/todo-list-tutorial.html" target="_blank" rel="noopener noreferrer">TodoList tutorial</a>.</li></ul><p>This episode is based on those examples. You don't have to understand how they work, just keep in mind what function we can achieve. We will dig deep into that later.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="initializing-scaffolding">Initializing Scaffolding<a href="#initializing-scaffolding" class="hash-link" aria-label="Direct link to Initializing Scaffolding" title="Direct link to Initializing Scaffolding">​</a></h3><p>LoopBack 4 provides a CLI (command line interface) to help create your project.</p><p>Simply run <code>lb4 app</code> in a folder you want to use the CLI. Disable "Docker" when it asks you to "Select features to enable in the project"</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">wenbo:firstgameDemo wenbo$ lb4 app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Project name: firstgame</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Project description: firstgameDemo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Project root directory: firstgame</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Application class name: FirstgameApplication</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Select features to enable in the project Enable tslint, Enable prettier,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enable mocha, Enable loopbackBuild, Enable vscode, Enable repositories, Ena</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ble services</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>There are four important components in a LB4 project: Model, Datasource, Repository, and Controller. Let's create them one by one.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="model">Model<a href="#model" class="hash-link" aria-label="Direct link to Model" title="Direct link to Model">​</a></h3><p>A model is like the class in Java or a table in relational database. It is an entity with one or more properties. A model may also have relationships with other models. For example, a <code>student</code> model could have properties like <code>studentID</code>, <code>name</code>, and <code>GPA</code>. It may also have one or more entity of <code>course</code> model and belong to a <code>school</code> model.</p><p>We will delve more deeply into the model relationship in next blog. In this episode let's simply create a <code>character</code> model first. The <code>character</code> model has following properties:</p><ul><li>id: number (id property)</li><li>name: string (required)</li><li>level: number (1)</li><li>nextLevelExp: number (100)</li><li>currentExp: number (0)</li><li>maxHealth: number (100)</li><li>currentHealth: number (100)</li><li>maxMana: number (50)</li><li>currentMana: number (50)</li><li>attack: number (20)</li><li>defence: number (5)</li></ul><p>Run <code>lb4 model</code> in the project folder we just created by using CLI (run <code>cd firstgame</code> first).</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">? Model class name: character</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please select the model base class Entity (A persisted model with an ID)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Allow additional (free-form) properties? No</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Let's add a property to Character</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter an empty property name when done</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Enter the property name: id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Property type: number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Is id the ID property? Yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Is it required?: No</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Default value [leave blank for none]:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Let's add another property to Character</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter an empty property name when done</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Enter the property name: name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Property type: string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Is it required?: Yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Default value [leave blank for none]:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Let's add another property to Character</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter an empty property name when done</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Enter the property name: level</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Property type: number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Is it required?: No</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Default value [leave blank for none]: 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The first property is <code>id</code>. It's like the primary key in relational database. We don't need to specify <code>id</code> as we will auto generate <code>id</code>.</p><p>The second property is <code>name</code>. That is the only thing we need to specify.</p><p>All of other properties like <code>level</code>, <code>attack</code> and <code>defence</code> are default. We will not need to provide specifics.</p><p>If you go to <code>/src/models</code>, you will see <code>character.model.ts</code>. We don't need to do anything about it at this point. We will come back in following episode.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="datasource">DataSource<a href="#datasource" class="hash-link" aria-label="Direct link to DataSource" title="Direct link to DataSource">​</a></h3><p>We connect to the database in LB4 using datasource. LB4 supports almost all of the popular databases. In this project and series I will use <a href="https://www.mongodb.com/" target="_blank" rel="noopener noreferrer">MongoDB</a>. If you don't know how to use MongoDB, don't worry! LB4 will take care everything for you. You only need to <a href="https://docs.mongodb.com/manual/administration/install-community" target="_blank" rel="noopener noreferrer">install mongoDB</a> first.</p><p>After installation, run <code>lb4 datasource</code> in your project root.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">wenbo:firstgame wenbo$ lb4 datasource</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Datasource name: mongo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Select the connector for mongo: MongoDB (supported by StrongLoop)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Connection String url to override other settings (eg: mongodb://username:password@hostna</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">me:port/database):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? host: localhost</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? port: 27017</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? user:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? password: [hidden]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? database: mongo</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Fill <code>host</code> with <code>localhost</code> and <code>port</code> with <code>27017</code>.</p><p>This will build a connection between your project and MongoDB.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="repository">Repository<a href="#repository" class="hash-link" aria-label="Direct link to Repository" title="Direct link to Repository">​</a></h3><p>The repository is like a connecter between the datasource and models. One of its jobs is to act like database injecter and extracter: when you want to create or fetch an entity of a model, repository will help you inject data into database or extract data from database.</p><p>Run <code>lb4 repository</code> in your project root.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">wenbo:firstgame wenbo$ lb4 repository</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please select the datasource MongoDatasource</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Select the model(s) you want to generate a repository Character</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please select the repository base class DefaultCrudRepository (Legacy juggler bridge)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   create src/repositories/character.repository.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   update src/repositories/index.ts</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You will find <code>character.repository.ts</code> in <code>src/repositories</code>. It's all we need at this point.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="controller">Controller<a href="#controller" class="hash-link" aria-label="Direct link to Controller" title="Direct link to Controller">​</a></h3><p>Controller is the most important component. It contains the code for all of your project functions and handles all business logic. In this series We will spend the majority of our time on controller.</p><p>Run <code>lb4 controller</code> in your project root to create default controller.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">wenbo:firstgame wenbo$ lb4 controller</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Controller class name: character</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? What kind of controller would you like to generate? REST Controller with CRUD functions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? What is the name of the model to use with this CRUD repository? Character</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? What is the name of your CRUD repository? CharacterRepository</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? What is the type of your ID? number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? What is the base HTTP path name of the CRUD operations? /characters</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   create src/controllers/character.controller.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   update src/controllers/index.ts</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This will generate all basic APIs for <code>character</code>, including <code>post</code>, <code>get</code>, <code>patch</code>, <code>put</code>, and <code>delete</code>.</p><p>If you have tried the <a href="https://loopback.io/doc/en/lb4/todo-tutorial.html" target="_blank" rel="noopener noreferrer">Todo tutorial</a>, you probably already noticed the auto increment id feature. When you call the <code>post</code> API multiple times (leave <code>id</code> blank), the <code>id</code> increased by 1 every time. This feature is supported by the in-memory database. But we are using MongoDB in this project. If we want to have that feature, we need to do that programmatically.</p><p>Go to <code>src/controllers</code> and open <code>character.controller.ts</code> with your favourite editor.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">post</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/characters'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">'200'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Character model instance'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">'x-ts-type'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Character</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">requestBody</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> character</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Character</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Character</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//add following lines</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> characterId </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">while</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">exists</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">characterId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      characterId </span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    character</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> characterId</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//add above lines</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characterRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">character</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Add those lines into the <code>post /character</code>. That will traverse your database to find a unique character id. Since this is a very bad programing practice, we will try to improve it in next episode.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="api-explorer">API Explorer<a href="#api-explorer" class="hash-link" aria-label="Direct link to API Explorer" title="Direct link to API Explorer">​</a></h3><p>LoopBack 4 has a build-in API explorer for you to play and test your API.</p><p>To start your project, run <code>npm start</code> in the project root.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">wenbo:firstgame wenbo$ npm start</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; firstgame@1.0.0 prestart /Users/xiaocase/Documents/learnlb/MyAPI/firstgameDemo/firstgame</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; npm run build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; firstgame@1.0.0 build /Users/xiaocase/Documents/learnlb/MyAPI/firstgameDemo/firstgame</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; lb-tsc es2017 --outDir dist</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; firstgame@1.0.0 start /Users/xiaocase/Documents/learnlb/MyAPI/firstgameDemo/firstgame</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; node .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Server is running at http://[::1]:3000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Try http://[::1]:3000/ping</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Go to <a href="http://%5B::1%5D:3000" target="_blank" rel="noopener noreferrer">http://[::1]:3000</a> and open explorer. You will see this:</p><p><img loading="lazy" alt="explorer" src="/blog/assets/images/my-first-api-p1-api-explorer-9e424b5f5ae7e6759d69953f6dfd4ec8.png" width="2942" height="1028" class="img_ev3q"></p><p>This shows the basic APIs we just created.</p><p>Now let's try to create a character. Open <code>post /character</code> and click "try it out". You only need to input a name for character, so you can leave the others blank.</p><p><img loading="lazy" alt="post" src="/blog/assets/images/my-first-api-p1-post-character-c498905ff7cafdf0c9959fbaae58f1fc.png" width="2874" height="1402" class="img_ev3q"></p><p>Then we can try to get information for the character. Open <code>get /character/{id}</code> and click "try it out". Input "1" as character Id.</p><p><img loading="lazy" alt="get" src="/blog/assets/images/my-first-api-p1-get-character-ff4ed17c91f7f13d0b9030a8a223d0ef.png" width="2858" height="1160" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="applying-this-to-your-own-project">Applying This to Your Own Project<a href="#applying-this-to-your-own-project" class="hash-link" aria-label="Direct link to Applying This to Your Own Project" title="Direct link to Applying This to Your Own Project">​</a></h3><p>In this episode, we covered the how to create simple APIs. You can do the same to create a start point for your own project, for example, a student registration system which has a <code>student</code> model with properties like <code>studentId</code>, <code>name</code>, <code>major</code>, and <code>course</code>.</p><p>On the other hand, you have the freedom to choose any database you want. LB4 supports most databases very well. <a href="https://loopback.io/doc/en/lb4/soap-calculator-tutorial-add-datasource.html" target="_blank" rel="noopener noreferrer">Here</a> is an example that uses SOAP webservices as datasource.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h3><p>In next episode, we will add <code>weapon</code>, <code>armor</code>, <code>skill</code> model and handle the relationship between models.</p><p>In the meantime, you can learn more about LoopBack in <a href="https://strongloop.com/strongblog/tag_LoopBack.html" target="_blank" rel="noopener noreferrer">past blogs</a>.</p>]]></content>
        <author>
            <name>Wen Bo</name>
            <uri>https://github.com/gobackhuoxing</uri>
        </author>
        <category label="how-to" term="how-to"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 2019 Q1 Overview]]></title>
        <id>https://loopback.io/blog/loopback-4-2019-q1-overview</id>
        <link href="https://loopback.io/blog/loopback-4-2019-q1-overview"/>
        <updated>2019-04-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>When the LoopBack team released <a href="https://strongloop.com/strongblog/loopback-4-ga" target="_blank" rel="noopener noreferrer">LoopBack 4 GA version</a> last October, they didn't stop to rest on their laurels. The team has been busy enhancing the framework, closing feature parity gaps, and helping community onboard with LoopBack 4.</p><p>Since GA, we have been focusing on implementing/enhancing the following major areas:</p><ul><li><a href="#authentication">Authentication</a></li><li><a href="#model-relations">Model relations</a></li><li><a href="#migration">Migration</a></li><li><a href="#extensibility">Extensibility</a></li></ul><p>Many thanks to your support and contributions! We are seeing more than double in our monthly download numbers in <a href="https://www.npmjs.com/" target="_blank" rel="noopener noreferrer">npmjs.com</a> since GA. We are also seeing an increase in activities from the community, in terms of answering others' questions and submitting pull requests. For the last 3 months, more than 15% of the merged pull requests are coming from the community. Want to help but new to open source contribution? Don't worry, this <a href="https://loopback.io/doc/en/lb4/submitting_a_pr.html" target="_blank" rel="noopener noreferrer">step by step guide</a> will guide you through the contribution process.</p><p>Let's take a closer look at each epic.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="authentication">Authentication<a href="#authentication" class="hash-link" aria-label="Direct link to Authentication" title="Direct link to Authentication">​</a></h3><p>As part of the scenario-driven approach, we have added a reference implementation using JWT authentication in the <a href="https://github.com/strongloop/loopback4-example-shopping" target="_blank" rel="noopener noreferrer">shopping example</a>. We have also worked on a more <a href="https://github.com/strongloop/loopback-next/tree/master/packages/authentication/docs" target="_blank" rel="noopener noreferrer">detailed design</a> and started the implementation to enable extension points for plugging in different authentication strategies.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="model-relations">Model Relations<a href="#model-relations" class="hash-link" aria-label="Direct link to Model Relations" title="Direct link to Model Relations">​</a></h3><p>Besides <code>hasMany</code> and <code>belongsTo</code>, we have added one more relation type:</p><p><a href="https://loopback.io/doc/en/lb4/hasOne-relation.html" target="_blank" rel="noopener noreferrer"><code>hasOne</code></a>. </p><p>We received lots of interests around other relation types, such as <code>hasManyThrough</code>. Some of you are implementing the command line interface for creating model relations (<code>lb4 relation</code>). It's on the way!</p><p>Inclusion of related model when querying data is a popular feature that is not available in LoopBack 4 yet. The initial research was concluded with a need to better investigate how to represent navigational properties used to include data of related models. We have explored multiple alternatives and came up with a solution that not only nicely addresses both TypeScript types and OpenAPI schema, but is also flexible enough to support other use cases like partial updates and exclusion of auto-generated properties when creating new model instances. You can learn more in our <a href="https://strongloop.com/strongblog/march-2019-milestone/" target="_blank" rel="noopener noreferrer">March milestone blog post</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="migration">Migration<a href="#migration" class="hash-link" aria-label="Direct link to Migration" title="Direct link to Migration">​</a></h3><p>Earlier this year, we have made the announcement to extend the long term support for LoopBack 3. If you're using an older LoopBack version, don't miss <a href="https://strongloop.com/strongblog/lb3-extended-lts/" target="_blank" rel="noopener noreferrer">the announcement blog post</a>.</p><p>Meanwhile, we did a lot of investigation to improve the developer experience for migrating LoopBack 3 applications to LoopBack 4. One of the goals is to allow you to migrate your application incrementally. We have investigated on how to <a href="https://github.com/strongloop/loopback-next/issues/2389" target="_blank" rel="noopener noreferrer">mount Express router with OpenAPI spec</a> and completed a spike for <a href="https://github.com/strongloop/loopback-next/issues/2318" target="_blank" rel="noopener noreferrer">mounting an LoopBack 3 app and include its REST API in OpenAPI spec</a>.</p><p>In the coming weeks and months, we are going to implement stories identified by the spike and grouped in the epic <a href="https://github.com/strongloop/loopback-next/issues/2479" target="_blank" rel="noopener noreferrer">Mount LB3 app in LB4</a>. Stay tuned!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="extensibility">Extensibility<a href="#extensibility" class="hash-link" aria-label="Direct link to Extensibility" title="Direct link to Extensibility">​</a></h3><p>One of our goals for LoopBack 4 is to build a minimal core while enabling everything else to be implemented via extensions. We continued to enhance the extensibility of the framework. We have introduced <code>context.view</code> and related events and added a <code>greeter-extension</code> <a href="https://github.com/strongloop/loopback-next/tree/master/examples/greeter-extension" target="_blank" rel="noopener noreferrer">example</a>. Lifecycle support and binding configuration/injection are coming soon.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="user-adoption">User Adoption<a href="#user-adoption" class="hash-link" aria-label="Direct link to User Adoption" title="Direct link to User Adoption">​</a></h3><p>As LoopBack is a Node.js framework, we've looked at the common use cases for Node.js developers to think of ways to make your adoption to LoopBack easier. Receiving feedback from various sources, we have:</p><ul><li><p>Investigated the possibility to use JavaScript when developing LoopBack 4 applications. Check out our recent <a href="https://strongloop.com/strongblog/loopback4-javascript-experience/" target="_blank" rel="noopener noreferrer">blog post</a> for details.</p></li><li><p>Added <a href="https://github.com/strongloop/loopback-next/tree/master/examples/express-composition" target="_blank" rel="noopener noreferrer">an example</a> on how to mount Express middleware to a LoopBack application.</p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="experimental">Experimental<a href="#experimental" class="hash-link" aria-label="Direct link to Experimental" title="Direct link to Experimental">​</a></h3><p>On top of the features mentioned in the above stories, we are always looking to use and/or integrate with popular technologies. Here is a list of experimental features we're working on:</p><ul><li><a href="https://github.com/strongloop/loopback4-example-kafka" target="_blank" rel="noopener noreferrer">Kafka</a></li><li><a href="https://github.com/strongloop/loopback-next/pull/2648" target="_blank" rel="noopener noreferrer">Socket.io</a></li><li><a href="https://github.com/strongloop/loopback-next/pull/2670" target="_blank" rel="noopener noreferrer">Native support of GraphQL</a></li><li><a href="https://github.com/strongloop/loopback-connector-openapi/pull/2" target="_blank" rel="noopener noreferrer">OpenAPI connector</a></li><li><a href="https://github.com/strongloop/loopback4-extension-grpc" target="_blank" rel="noopener noreferrer">gRPC extension</a></li><li><a href="https://github.com/strongloop/loopback-next/pull/2687" target="_blank" rel="noopener noreferrer">Support for method interceptors</a></li></ul><p>While we want to make sure high quality of code goes into our codebase which may take multiple iterations, we're looking for ways to release experimental features so that our users can take a peek earlier and give early feedback. We are looking for your feedback on how we can roll out the experimental features in GitHub <a href="https://github.com/strongloop/loopback-next/issues/2676" target="_blank" rel="noopener noreferrer">issue #2676</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>Going forward, we will continue to improve the migration experience, close feature parity gaps and bring compelling features to you. Please see the <a href="https://github.com/strongloop/loopback-next/issues/2692" target="_blank" rel="noopener noreferrer">Q2 roadmap</a> for our plan.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="previous-milestone-blogs">Previous Milestone Blogs<a href="#previous-milestone-blogs" class="hash-link" aria-label="Direct link to Previous Milestone Blogs" title="Direct link to Previous Milestone Blogs">​</a></h2><p>If you have been following our blog, you probably notice that we have monthly milestone blogs to update our users on the progress that we're making. Here are the previous monthly milestone blogs if you want more details:</p><ul><li><a href="https://strongloop.com/strongblog/loopback-4-october-2018-milestone/" target="_blank" rel="noopener noreferrer">October 2018</a></li><li><a href="https://strongloop.com/strongblog/november-2018-milestone/" target="_blank" rel="noopener noreferrer">November 2018</a></li><li><a href="https://strongloop.com/strongblog/december-2018-milestone/" target="_blank" rel="noopener noreferrer">December 2018</a></li><li><a href="https://strongloop.com/strongblog/january-2019-milestone/" target="_blank" rel="noopener noreferrer">January 2019</a></li><li><a href="https://strongloop.com/strongblog/february-2019-milestone/" target="_blank" rel="noopener noreferrer">February 2019</a></li><li><a href="https://strongloop.com/strongblog/march-2019-milestone/" target="_blank" rel="noopener noreferrer">March 2019</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-for-actions">Call for Actions<a href="#call-for-actions" class="hash-link" aria-label="Direct link to Call for Actions" title="Direct link to Call for Actions">​</a></h2><p>LoopBack's future success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li></ul>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <category label="Quarterly update" term="Quarterly update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 March 2019 Milestone Update]]></title>
        <id>https://loopback.io/blog/march-2019-milestone</id>
        <link href="https://loopback.io/blog/march-2019-milestone"/>
        <updated>2019-04-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>We landed an outstanding number of code contributions in March, making for a very productive month! We merged 63 PRs in total, and 10 out of them are from the community. Cheers!</p><p>The team was able to make good progress of the epics we are focusing on, like LB3 to LB4 migration, adding <code>@loopback/context</code> features, JavaScript experience, the authentication system, and describing model properties to be more flexible. Read more to see the details of our achievements in March.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="migration-from-loopback-3-to-loopback-4">Migration from LoopBack 3 to LoopBack 4<a href="#migration-from-loopback-3-to-loopback-4" class="hash-link" aria-label="Direct link to Migration from LoopBack 3 to LoopBack 4" title="Direct link to Migration from LoopBack 3 to LoopBack 4">​</a></h2><p>We started to incrementally work on the migration stories created from the <a href="https://github.com/strongloop/loopback-next/pull/2318" target="_blank" rel="noopener noreferrer">PoC PR</a>. This month we implemented the Express router to allow LoopBack 4 app developers to add arbitrary set of Express routes and provide OpenAPI specifications. You can call <code>mountExpressRouter</code> on either the app level or the rest server level to mount external routes. For details please check the <a href="https://loopback.io/doc/en/lb4/Routes.html#mounting-an-express-router" target="_blank" rel="noopener noreferrer">router's documentation</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="extension-pattern-example">Extension Pattern Example<a href="#extension-pattern-example" class="hash-link" aria-label="Direct link to Extension Pattern Example" title="Direct link to Extension Pattern Example">​</a></h2><p>As a framework built on top of the IoC (Inversion of Control) and DI (Dependency Injection), the <a href="https://wiki.eclipse.org/FAQ_What_are_extensions_and_extension_points%3F" target="_blank" rel="noopener noreferrer">extension point</a> is commonly used in LoopBack 4 to declare contracts for extension contributors to plug-in components. The existing usages of extension point include the request body parser and the boot strapper. It is also needed for supporting multiple authentication strategies. Check out the <a href="https://github.com/strongloop/loopback-next/tree/master/examples/greeter-extension" target="_blank" rel="noopener noreferrer">greeter extension point</a> to learn the best practice of registering an extension point along with its extensions. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="context-improvement">Context Improvement<a href="#context-improvement" class="hash-link" aria-label="Direct link to Context Improvement" title="Direct link to Context Improvement">​</a></h2><p>The discussion and review of a series of context enhancement PRs keeps moving. This month we landed the PR that implemented the context view feature. A context view is created to track artifacts and is able to watch the come and go bindings. More details can be found in the <a href="https://loopback.io/doc/en/lb4/Context.html#context-view" target="_blank" rel="noopener noreferrer">Context document</a>.</p><p>We have also enforced the dependency injection for bindings with the <code>SINGLETON</code> scope to make sure their dependencies can only be resolved from the owner context and its ancestors, but <strong>NOT</strong> from any of the child contexts. This is required as the value for a singleton binding is shared in the subtree rooted at the context where the binding is contained. Dependencies for a singleton cannot be resolved from a child context which is not visible and it may be recycled. See <a href="https://loopback.io/doc/en/lb4/Dependency-injection.html#dependency-injection-for-bindings-with-different-scopes" target="_blank" rel="noopener noreferrer">the Dependency Injection documentations</a> for more details.</p><p>Now users can specify the scope in the <code>@bind</code> decorator when annotating an artifact class with <code>@bind</code>. The application level bindings are improved by honoring more configurations in the <code>@bind</code> decorator. Now users could specify the binding scope and the namespace of tags as the inputs of <code>@bind</code>. Details can be found in <a href="https://loopback.io/doc/en/lb4/Binding.html#configure-binding-attributes-for-a-class" target="_blank" rel="noopener noreferrer">the binding document</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="relations">Relations<a href="#relations" class="hash-link" aria-label="Direct link to Relations" title="Direct link to Relations">​</a></h2><p>We solved the self relation issue and created corresponding test cases as the reference usage. You can check <a href="https://loopback.io/doc/en/lb4/BelongsTo-relation.html#handling-recursive-relations" target="_blank" rel="noopener noreferrer">the documentation for handling recursive relations</a> to learn how to create a <code>hasMany</code> and <code>belongsTo</code> relation to the same entity.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="authentication-and-authorization">Authentication and Authorization<a href="#authentication-and-authorization" class="hash-link" aria-label="Direct link to Authentication and Authorization" title="Direct link to Authentication and Authorization">​</a></h2><p>Before writing the extension point for plugging in different authentication strategies, we decided to do some investigation of the popular authentication mechanisms and adopted the user scenario driven development. This is to make sure the abstractions for services are common enough. The design documents for our authentication system can be found <a href="https://github.com/strongloop/loopback-next/blob/master/packages/authentication/docs/authentication-system.md" target="_blank" rel="noopener noreferrer">here</a>. The document begins with illustrating a LoopBack 4 application that supports multiple authentication approaches and finally divides the responsibilities among different artifacts. The abstractions we created in March are two interfaces for the user service and the token service in <code>@loopback/authentication</code>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="inclusion-of-related-models">Inclusion of Related Models<a href="#inclusion-of-related-models" class="hash-link" aria-label="Direct link to Inclusion of Related Models" title="Direct link to Inclusion of Related Models">​</a></h2><p>The initial inclusion spike left us a question: how to distinguish the navigational property from the normal model properties? This month we had a PoC to demonstrate describing the navigational model properties with a new interface along with how to generate the corresponding OpenAPI schema.</p><p>The proposed solution has two major parts:</p><ol><li><p>At TypeScript level, we will introduce a new interface to describe navigational properties and a new type to describe data object holding both own properties and navigational properties. For example, when a <code>Category</code> model has many <code>Product</code> instances:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Navigation properties of the Category model.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">CategoryRelations</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  products</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ProductWithRelations</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Category's own properties and navigation properties.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> </span><span class="token class-name">CategoryWithRelations</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Category </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> CategoryRelations</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>When decorating controller methods with OpenAPI metadata, we need to include navigational properties in the schema generated from the model definition. This will be achieved by replacing <code>x-ts-type</code> extension with a call of a new helper function <code>getModelSchemaRef</code> with a new flag <code>includeRelations</code>:</p><div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">schema: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">  type: 'array',</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">   items: {'x-ts-type': Category},</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">   items: getModelSchemaRef(Category, {includeRelations: true})</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ol><p>Under the hood, <code>getModelSchemaRef</code> will create a new OpenAPI Schema describing both own and navigational properties of the given model and give the schema a unique title so that we can reference it from multiple places.</p><p>Please check <a href="https://github.com/strongloop/loopback-next/pull/2592" target="_blank" rel="noopener noreferrer">PR 2592</a> for more details and the discussions we had. And the <a href="https://github.com/strongloop/loopback-next/issues/2152#issuecomment-475575548" target="_blank" rel="noopener noreferrer">follow-up stories</a> are created as our next target.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="partial-update">Partial Update<a href="#partial-update" class="hash-link" aria-label="Direct link to Partial Update" title="Direct link to Partial Update">​</a></h2><p>While researching options for describing navigational model properties, Miroslav realized that the proposed solution is easy to extend to support other kinds of schema generated from model.</p><ol><li><p>To describe request body of a <code>PATCH</code> request, we can introduce a new <code>getModelSchemaRef</code> flag called <code>partial</code>:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getModelSchemaRef</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Category</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">partial</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>At TypeScript level, such data object can be described using TypeScript's <code>Partial</code> type:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">obj</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Partial</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Category</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>To exclude certain properties from <code>POST</code> request (e.g. <code>id</code> that will be generated by the database), we can introduce another new flag called <code>exclude</code>:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getModelSchemaRef</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">TodoList</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">exclude</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>At TypeScript level, such data object can be described using <code>Pick</code> and <code>Exclude</code> types:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">obj</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Pick</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">TodoList</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Exclude</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">keyof</span><span class="token plain"> Category</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'id'</span><span class="token operator" style="color:#393A34">&gt;&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ol><p>Once these two new flags are implemented, we will be able to fix validation of request bodies to correctly enforce required properties for operations like <code>POST</code> &amp; <code>PUT</code>, and treat all properties as optional for <code>PATCH</code> operations.</p><p>You can find more details in <a href="https://github.com/strongloop/loopback-next/pull/2646" target="_blank" rel="noopener noreferrer">PR 2646</a>, and the follow-up stories are outlined <a href="https://github.com/strongloop/loopback-next/pull/2646#issuecomment-477503186" target="_blank" rel="noopener noreferrer">here</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="javascript-experience">JavaScript Experience<a href="#javascript-experience" class="hash-link" aria-label="Direct link to JavaScript Experience" title="Direct link to JavaScript Experience">​</a></h2><p>After a thorough exploration and discussion of writing the LoopBack 4 application in Javascript this month, we summarized our findings and achievements in our <a href="https://strongloop.com/strongblog/loopback4-javascript-experience/" target="_blank" rel="noopener noreferrer">"Experimenting with Plain JavaScript Programming in LoopBack 4"</a> blog post. It talks about the LoopBack 4 artifacts that we are able to create in JavaScript and also the limitations. A plan of subsequent stories is included in the blog.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-updates">Other Updates<a href="#other-updates" class="hash-link" aria-label="Direct link to Other Updates" title="Direct link to Other Updates">​</a></h2><ul><li><p>LoopBack 3 improvement: Now we allow people to define a model property called <code>type</code> instead of having <code>type</code> as a preserved word. <a href="https://github.com/strongloop/loopback/issues/4131" target="_blank" rel="noopener noreferrer">Link</a></p></li><li><p>We added the steps to call SOAP services by running <code>lb4 service</code>, see the <a href="https://loopback.io/doc/en/lb4/Calling-other-APIs-and-web-services.html" target="_blank" rel="noopener noreferrer">document for calling other APIs</a>. </p></li><li><p>There have been several conference and meet-up events happened over the last year, so we added a new section "Presentations" in the <a href="https://v4.loopback.io/resources.html" target="_blank" rel="noopener noreferrer">resources page</a> to display the videos.</p></li><li><p>Add operationId based on the controller and method names. <a href="https://github.com/strongloop/loopback-next/pull/2533" target="_blank" rel="noopener noreferrer">Link</a></p></li><li><p>Make sure the <code>basePath</code> is included in the url of <code>RestServer</code>. <a href="https://github.com/strongloop/loopback-next/pull/2560" target="_blank" rel="noopener noreferrer">Link</a></p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="community-contributions">Community Contributions<a href="#community-contributions" class="hash-link" aria-label="Direct link to Community Contributions" title="Direct link to Community Contributions">​</a></h2><p>Here is a summary of the contributions from our community in March. We appreciate all your attention and help!</p><ul><li><p>Added the <code>PATCH</code> and <code>DELETE</code> method for the <code>HasOne</code> relation. <a href="https://github.com/strongloop/loopback-next/commit/5936fb9c7224a024f7d406e8f05894cce460a4d4" target="_blank" rel="noopener noreferrer">Link</a></p></li><li><p>Support specifying the type of nested properties as a model. <a href="https://github.com/strongloop/loopback-next/commit/d298ec898f3c52224a1844c5e41f0d52cd7ff569" target="_blank" rel="noopener noreferrer">Link</a></p></li><li><p>Allow the model's id property to be a number for supporting the composed key. <a href="https://github.com/strongloop/loopback-next/commit/71292e9ac1b3d89ebfe284a659264cbb83dbe814" target="_blank" rel="noopener noreferrer">Link</a></p></li><li><p>Update the mocha configuration in <code>@loopback/build</code>. <a href="https://github.com/strongloop/loopback-next/commit/c3d800700b253e97316fd0871641ea80fcb457f3" target="_blank" rel="noopener noreferrer">Link</a></p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's future success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Joining</a> our user group.</li></ul>]]></content>
        <author>
            <name>Janny Hou</name>
            <uri>https://github.com/jannyhou</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Experimenting with Plain JavaScript Programming in LoopBack 4]]></title>
        <id>https://loopback.io/blog/loopback4-javascript-experience</id>
        <link href="https://loopback.io/blog/loopback4-javascript-experience"/>
        <updated>2019-03-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>LoopBack is a popular open source Node.js framework. Its latest version (4) is written in TypeScript, while the older version were written in JavaScript. We chose to write LoopBack 4 to make it <a href="https://loopback.io/doc/en/lb4/FAQ.html#why-typescript" target="_blank" rel="noopener noreferrer">more extensible, scalable, and sustainable</a>. TypeScript features made it easy for us to build dependency injection in the framework and leverage it for controllers, models, and other constructs using TypeScript decorators.</p><p>We believe that TypeScript is the right move and it will help you and us in the long run. However, some developers are constrained to use plain JavaScript at the moment for various reasons. We didn't want to leave our JavaScript users behind and decided to explore the possibilities of creating a JavaScript interface to LoopBack 4. This blog post is about what we did in that regard and what we will be doing next.</p><p>We worked on a spike to enable <a href="https://github.com/strongloop/loopback-next/issues/1978" target="_blank" rel="noopener noreferrer">LoopBack 4 development using JavaScript</a>. You can take a look at a <a href="https://github.com/strongloop/loopback4-example-javascript/tree/class-factory/server" target="_blank" rel="noopener noreferrer">proof of concept</a> LoopBack 4 app which uses the JavaScript API we have experimented with.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="our-findings">Our Findings<a href="#our-findings" class="hash-link" aria-label="Direct link to Our Findings" title="Direct link to Our Findings">​</a></h2><p>A typical LoopBack 4 app is composed of several elements: </p><ul><li>A controller to define the endpoints.</li><li>A sequence to customize and contain the request-response process.</li><li>Models for defining the data.</li><li>A datasource to connect to database.</li><li>A repository to link the model to the datasource.</li><li>The application class which brings all of these together.</li></ul><p>The application also supports the ability to create custom routes to define non-REST enpoints.</p><p>The proof of concept listed above demonstrates how writing LoopBack 4 applications in JavaScript would enable all the above features.</p><p><strong>What was Achieved</strong></p><ol><li><p>Ability to create <a href="https://github.com/strongloop/loopback4-example-javascript/blob/class-factory/server/application.js" target="_blank" rel="noopener noreferrer">application class</a> in JavaScript.</p></li><li><p>Ability to create <a href="https://github.com/strongloop/loopback4-example-javascript/blob/class-factory/server/application.js#L15" target="_blank" rel="noopener noreferrer">route</a> in JavaScript.</p></li><li><p>Ability to create <a href="https://github.com/strongloop/loopback4-example-javascript/blob/class-factory/server/sequence.js" target="_blank" rel="noopener noreferrer">custom sequence</a> in JavaScript.</p></li><li><p>Ability to create <a href="https://github.com/strongloop/loopback4-example-javascript/blob/class-factory/server/controllers/color.controller.js" target="_blank" rel="noopener noreferrer">CRUD controller</a> in JavaScript.</p></li><li><p>Ability to create <a href="https://github.com/strongloop/loopback4-example-javascript/blob/class-factory/server/controllers/ping.controller.js" target="_blank" rel="noopener noreferrer">custom controller</a> in JavaScript.</p></li><li><p>Ability to create <a href="https://github.com/strongloop/loopback4-example-javascript/blob/class-factory/server/datasources/memory.datasource.js" target="_blank" rel="noopener noreferrer">datasource</a> in JavaScript.</p></li><li><p>Ability to create <a href="https://github.com/strongloop/loopback4-example-javascript/blob/class-factory/server/models/color.model.js" target="_blank" rel="noopener noreferrer">model</a> in JavaScript.</p></li><li><p>Ability to create <a href="https://github.com/strongloop/loopback4-example-javascript/blob/class-factory/server/repositories/color.repository.js" target="_blank" rel="noopener noreferrer">repository</a> in JavaScript.</p></li></ol><p>Although it allows the creation of some simple apps, it is pretty limited and inflexible in what it can do.</p><p><strong>Limitations</strong></p><ol><li><p>The class factory pattern is not idiomatic ES6. Ideally, we should be able to use classes like in TypeScript. Making this possible is not easy, since we have to come up with a good interface and developer experience for dependency injection. This will be possible when <a href="https://github.com/tc39/proposal-decorators" target="_blank" rel="noopener noreferrer">decorators for ES6 classes</a> becomes a JavaScript feature.</p></li><li><p>Routes are limited to simple responses and has no access to the LoopBack request object, which contains a lot of additional information.</p></li><li><p>Controller methods are hard-coded in the helper library and leave no room for customization.</p></li><li><p>Models are defined using a JSON files, instead of JavaScript classes.</p></li></ol><p>The TypeScript LoopBack 4 API has a very neat and intuitve developer experience when it comes to customization and extension because of the in-built dependecny injection capability. Replicating this capability in JavaScript is the biggest hurdle in creating the JavaScript API for LoopBack 4.</p><p>We realized that creating a parallel LoopBack 4 JavaScript framework would be lot of work in terms of development and maintenace. A better approach to providing a JavaScript API for LoopBack 4 would be to identify most practical use cases and then try to come up with appropriate solutions.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="next-steps">Next Steps<a href="#next-steps" class="hash-link" aria-label="Direct link to Next Steps" title="Direct link to Next Steps">​</a></h2><p>To help decide our approach to creating the usecase-specific JavaScript LoopBack 4 API, instead of porting the whole framework to JavaScript, we identified <a href="https://github.com/strongloop/loopback-next/issues/2567" target="_blank" rel="noopener noreferrer">several personas</a> and went through each of them and considered their use cases.</p><p>The personas we identified are:</p><ol><li><p>Large scale application developer. Since large scale application are best developed with TypeScript, we concluded that this persona should be using the TypeScript version of LoopBack 4.</p></li><li><p>Extension developer. This persona wants to extend the capabilities of LoopBack 4 by writing custom extensions. Being technical enough, this persona should also be comfortable using TypeScript.</p></li><li><p>API developer. This persona is understands the importance of OpenAPI support and the ORM capabilities provided by LoopBack 4, has only a few endpoints to expose, and prefers a simpler JavaScript API to interact with, instead of having to create controllers and classes.</p></li><li><p>Plain Express developer. This persona primarily uses Express for application development, and is interested in using the features provided by LoopBack 4, using JavaScript.</p></li></ol><p>We combined personas 3 and 4 to a single one - a developer who likes the simplicity of JavaScript and wants to use LoopBack 4 APIs in Express-style routes.</p><p>So instead of porting the TypeScript LoopBack 4 to JavaScript, we have decided to cater to this specific usecase. Developers will be able to setup and customize their routes using <a href="https://swagger.io/specification/" target="_blank" rel="noopener noreferrer">OpenAPI specifications</a> and will have access to the LoopBack 4 request object. Apart from providing access to other metadata added by LoopBack 4, such as authentication details, this object is the link to the LoopBack 4 internals. Via this object, developers can access  repositories, datasources, models, and context.</p><p>We have started work on porting the <a href="https://github.com/strongloop/loopback-next/issues/2501" target="_blank" rel="noopener noreferrer">Todo example</a> to JavaScript. This port will show how to create LoopBack 4 <a href="https://github.com/strongloop/loopback-next/issues/2474" target="_blank" rel="noopener noreferrer">routes</a> and <a href="https://github.com/strongloop/loopback-next/issues/2557" target="_blank" rel="noopener noreferrer">datasources</a> in JavaScript.</p><p>We would like to hear from you what you think of JavaScript experience in LoopBack 4. Is it required? What are your expectations?</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's future success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Joining</a> our user group.</li></ul>]]></content>
        <author>
            <name>Yaapa Hage</name>
            <uri>https://github.com/hacksparrow</uri>
        </author>
        <category label="javascript" term="javascript"/>
        <category label="experiment" term="experiment"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 3 Receives Extended Long Term Support]]></title>
        <id>https://loopback.io/blog/lb3-extended-lts</id>
        <link href="https://loopback.io/blog/lb3-extended-lts"/>
        <updated>2019-03-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>This past October, we announced LoopBack 4 GA is ready for production use and updated the Long Term Support (LTS) schedule in our <a href="https://loopback.io/doc/en/contrib/Long-term-support.html" target="_blank" rel="noopener noreferrer">LTS page</a>. Due to popular requests, LoopBack 3 now receives an extended long term support with updated timeline as shown in the table below.</p><table><thead><tr><th>Version</th><th>Status</th><th>Published</th><th>Active LTS Start</th><th>Maintenance LTS Start</th><th>End-of-life</th></tr></thead><tbody><tr><td>LoopBack 4</td><td>Current</td><td>Oct 2018</td><td>--</td><td>--</td><td>Apr 2021(minimum)</td></tr><tr><td>LoopBack 3</td><td>Active LTS</td><td>Dec 2016</td><td>Oct 2018</td><td>Dec 2019 (revised)</td><td>Dec 2020 (revised)</td></tr><tr><td>LoopBack 2</td><td>Maintenance LTS</td><td>Jul 2014</td><td>Dec 2016</td><td>Oct 2018</td><td>Apr 2019</td></tr></tbody></table><p>The extended period gives more time for our users to move to the new version which is a different programming model and language. It also allows us to improve the migration experience and migration guide.</p><p>Below are a few questions that our users frequently asked about different versions of LoopBack. </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="if-im-starting-a-new-project-what-should-i-do">If I'm starting a new project, what should I do?<a href="#if-im-starting-a-new-project-what-should-i-do" class="hash-link" aria-label="Direct link to If I'm starting a new project, what should I do?" title="Direct link to If I'm starting a new project, what should I do?">​</a></h3><p>If you're considering using LoopBack for your next project, our recommendation is to first create a proof-of-concept application using LoopBack 4 (LB4). You may want to check if there are any features that your application requires that LB4 does not provide out of the box yet. Search <a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">LB4 GitHub issues</a> to find any existing discussions around those missing features, as there may be 3rd-party extensions or workaround available. If you run into a missing feature that's not discussed in our issue tracker yet, then please <a href="https://github.com/strongloop/loopback-next/issues/new" target="_blank" rel="noopener noreferrer">open a new issue</a> to let us know! </p><p>Hopefully, you will find a way how to implement all major requirements in your PoC application and can thus build your project on LB4. </p><p>If some of your requirements cannot be feasibly implemented in LB4, then you have two options:</p><ol><li><p>You can work with the LoopBack team and contribute the missing parts yourself. It will cost you time to implement framework features, but you will save time on migrating your project from LB3 to LB4 later on. </p></li><li><p>Alternatively, if LB3 provides all what your project needs, then you can save upfront investment and build your project on LB3 now, preparing to pay the migration costs later in the future.</p></li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="if-im-a-loopback-3-user-what-should-i-do">If I'm a LoopBack 3 user, what should I do?<a href="#if-im-a-loopback-3-user-what-should-i-do" class="hash-link" aria-label="Direct link to If I'm a LoopBack 3 user, what should I do?" title="Direct link to If I'm a LoopBack 3 user, what should I do?">​</a></h3><p>If you already have LoopBack 3 applications running in production, it is a good time for you to review the <a href="https://loopback.io/doc/en/lb4/LoopBack-3.x.html" target="_blank" rel="noopener noreferrer">difference between LoopBack 3 and LoopBack 4</a>. Even with the extended end-of-life date for LoopBack 3, it is never too early to start migrating your LoopBack 3 application to LoopBack 4. Please also note  the <a href="https://github.com/strongloop/loopback-next/issues/1920" target="_blank" rel="noopener noreferrer">feature parity gap we had identified</a>. Your feedback is always appreciated! </p><p>We're actively working on improving the migration story! Please check out <a href="https://github.com/strongloop/loopback-next/issues/1849" target="_blank" rel="noopener noreferrer">GitHub issue #1849</a> for discussions and progress. <a href="https://strongloop.com/authors/Miroslav_Bajto%C5%A1/" target="_blank" rel="noopener noreferrer">Miroslav</a> is currently investigating different approaches of having a compatibility layer between LoopBack 3 and LoopBack 4 artifacts. The first step is to allow developers to mount their LoopBack 3 applications in a new LoopBack 4 project. You can follow the progress of this work in <a href="https://github.com/strongloop/loopback-next/issues/2479" target="_blank" rel="noopener noreferrer">GitHub issue #2479</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="if-im-a-loopback-2-user-what-should-i-do">If I'm a LoopBack 2 user, what should I do?<a href="#if-im-a-loopback-2-user-what-should-i-do" class="hash-link" aria-label="Direct link to If I'm a LoopBack 2 user, what should I do?" title="Direct link to If I'm a LoopBack 2 user, what should I do?">​</a></h3><p>If you're a LoopBack 2 user, you should at least migrate your LoopBack 2 applications to LoopBack 3. The effort should be minimal and the process should be smooth. You can read more details in the <a href="https://loopback.io/doc/en/lb3/Migrating-to-3.0.html" target="_blank" rel="noopener noreferrer">3.0 migration guide</a>. When LB2 goes end of life (EOL), you should not be using LB2 in production because there will be no security fixes.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's future success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li></ul>]]></content>
        <author>
            <name>Diana Lau</name>
            <uri>https://github.com/dhmlau</uri>
        </author>
        <author>
            <name>Miroslav Bajtoš</name>
            <uri>http://github.com/bajtos</uri>
        </author>
        <category label="community" term="community"/>
        <category label="news" term="news"/>
        <category label="LoopBack 3" term="LoopBack 3"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 February 2019 Milestone Update]]></title>
        <id>https://loopback.io/blog/february-2019-milestone</id>
        <link href="https://loopback.io/blog/february-2019-milestone"/>
        <updated>2019-03-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>It feels like 2019 just started, but we are somehow already in March. February flew by, but while the month was short, the list of things the LoopBack team accomplished in the month was the opposite. In February, we tackled authentication and authorization, spikes on migration from LoopBack 3 to LoopBack 4, preparation for events, and others. You can see the <a href="https://github.com/strongloop/loopback-next/issues/2313" target="_blank" rel="noopener noreferrer">February milestone</a> and see the <a href="https://github.com/strongloop/loopback-next/issues/2516" target="_blank" rel="noopener noreferrer">March milestone</a> to see what we are working on next. Read more to see the details of our progress in February.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="authentication-and-authorization">Authentication and Authorization<a href="#authentication-and-authorization" class="hash-link" aria-label="Direct link to Authentication and Authorization" title="Direct link to Authentication and Authorization">​</a></h2><p>We refactored the JWT authentication strategy in <code>loopback4-example-shopping</code> to be more modular and leveraged functions from <code>jsonwebtoken</code> to perform a more robust password hashing and comparison. The token based utilities are refactored into a token service, so that it can be injected into the controller and strategy classes using Dependency Injection. The <code>bcrypt</code> password hasher service is created similarly.</p><p>Our next step is to write a guide for plugging in different authentication strategies and depicting the API flow of authenticating the endpoints. In the meantime, we will be adding more abstractions to shape the authentication system as the groundwork before opening the extension points for the authentication system. You could check the subsequent stories in <a href="https://github.com/strongloop/loopback-next/issues/1035" target="_blank" rel="noopener noreferrer">issue #1035</a> and track our progress there.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="migration-from-loopback-3-to-loopback-4">Migration from LoopBack 3 to LoopBack 4<a href="#migration-from-loopback-3-to-loopback-4" class="hash-link" aria-label="Direct link to Migration from LoopBack 3 to LoopBack 4" title="Direct link to Migration from LoopBack 3 to LoopBack 4">​</a></h2><p>LoopBack has a guide on <a href="https://loopback.io/doc/en/lb3/Migrating-to-3.0.html" target="_blank" rel="noopener noreferrer">migrating</a> applications from LoopBack 2 to LoopBack 3, and it's only fitting that we include a guide on migrating applications from LoopBack 3 to LoopBack 4 as they reach feature parity. However, the latter's transition is more complicated than the former's transition. We have an <a href="https://github.com/strongloop/loopback-next/issues/1849" target="_blank" rel="noopener noreferrer">epic</a>, if you would like to see more details. </p><p>This month, we did two spikes to work on this transition. We started with a proof of concept demonstrating how to take LoopBack 3 model definition files (e.g. <code>common/models/product.json</code> and <code>common/models/product.js</code>) and drop them without any modifications into a LoopBack 4 project. You can find the original idea in <a href="https://github.com/strongloop/loopback-next/issues/2224" target="_blank" rel="noopener noreferrer">issue #2224</a> and the working code in <a href="https://github.com/strongloop/loopback-next/pull/2274" target="_blank" rel="noopener noreferrer">pull request #2274</a>.</p><p>Unfortunately, this approach turned out to be too expensive to implement and maintain, and we decided to abandon it.</p><p>Not all is lost, though! While discussing the proof of concept, we realized there is a simpler way how to build a bridge between LoopBack 3 and LoopBack 4: mount the entire LoopBack 3 application as a REST component of the LoopBack 4 project.</p><p>The <a href="https://github.com/strongloop/loopback-next/pull/2318" target="_blank" rel="noopener noreferrer">pull request #2318</a> presents a proof of concept that we will use to drive the actual implementation tracked by <a href="https://github.com/strongloop/loopback-next/issues/2479" target="_blank" rel="noopener noreferrer">Epic #2479</a>.</p><p>We have also identified few new stories to bridge the gap preventing LoopBack 3 applications to be migrated to LoopBack 4, see the following <a href="https://github.com/strongloop/loopback-next/issues/1849#issuecomment-467471409" target="_blank" rel="noopener noreferrer">GitHub comment</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="generate-docker-files-through-the-cli">Generate Docker Files through the CLI<a href="#generate-docker-files-through-the-cli" class="hash-link" aria-label="Direct link to Generate Docker Files through the CLI" title="Direct link to Generate Docker Files through the CLI">​</a></h2><p>We added a new feature to the CLI: the <a href="https://www.docker.com/" target="_blank" rel="noopener noreferrer"><code>--docker</code></a> option when generating a LoopBack application. This option generates <code>Dockerfile</code>, <code>.dockerignore</code>, and two Docker scripts: <code>docker:build</code> and <code>docker:run</code>. See <a href="https://loopback.io/doc/en/lb4/Application-generator.html" target="_blank" rel="noopener noreferrer">Application generator</a> to see how to generate an application with <code>--docker</code>. </p><p>Following this feature, we added a <a href="https://github.com/strongloop/loopback-next/pull/2433" target="_blank" rel="noopener noreferrer">fix</a> that forces the test host to be <code>HOST</code> environment variable or IPv4 interface, which makes it easier to run LoopBack 4 application tests inside a Docker container.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation-on-submitting-a-pull-request">Documentation on Submitting a Pull Request<a href="#documentation-on-submitting-a-pull-request" class="hash-link" aria-label="Direct link to Documentation on Submitting a Pull Request" title="Direct link to Documentation on Submitting a Pull Request">​</a></h2><p>We introduced a detailed list of steps to follow if you want to submit a pull request for LoopBack 4. This <a href="https://loopback.io/doc/en/lb4/submitting_a_pr.html" target="_blank" rel="noopener noreferrer">guide</a> includes steps for <a href="https://loopback.io/doc/en/lb4/submitting_a_pr.html#beginner-instructions" target="_blank" rel="noopener noreferrer">beginners</a> and for <a href="https://loopback.io/doc/en/lb4/submitting_a_pr.html#expert-instructions" target="_blank" rel="noopener noreferrer">experienced</a> users. It took a lot of <a href="https://github.com/strongloop/loopback-next/pull/2364" target="_blank" rel="noopener noreferrer">discussion</a> to finally nail a balanced read that was both concise and informative. You can now follow this handy resource if you would like to submit a PR to <a href="https://github.com/strongloop/loopback-next" target="_blank" rel="noopener noreferrer"><code>loopback-next</code></a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="tutorial-on-mounting-loopback-rest-api-on-an-express-application">Tutorial on Mounting LoopBack REST API on an Express Application<a href="#tutorial-on-mounting-loopback-rest-api-on-an-express-application" class="hash-link" aria-label="Direct link to Tutorial on Mounting LoopBack REST API on an Express Application" title="Direct link to Tutorial on Mounting LoopBack REST API on an Express Application">​</a></h2><p>We added a new tutorial demonstrating how to mount LoopBack 4's REST API on an Express application. Users can now mix both the Express and LoopBack 4 frameworks in order to best match their own use cases. In this tutorial, we mounted a <code>Note</code> application created by the LoopBack 4 CLI on top of a simple Express server and served a static file. You can follow the <a href="https://loopback.io/doc/en/lb4/express-with-lb4-rest-tutorial.html" target="_blank" rel="noopener noreferrer">tutorial</a> or see the completed example by using the command <code>lb4 example express-composition</code>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-layout-for-test-files">New Layout for Test Files<a href="#new-layout-for-test-files" class="hash-link" aria-label="Direct link to New Layout for Test Files" title="Direct link to New Layout for Test Files">​</a></h2><p>In a series of incremental pull requests, we reworked our project layout, moved all test files from <code>test</code> to <code>src/__tests__</code> directory and updated TypeScript build configuration to place files directly to <code>dist</code> folder, instead of <code>dist/src</code> and <code>dist/test</code>. This change simplifies the build setup and unifies file references between TypeScript sources and JavaScript runtime. It allows us to further improve our project infrastructure, for example start using TypeScript <a href="https://www.typescriptlang.org/docs/handbook/project-references.html" target="_blank" rel="noopener noreferrer">Project References</a>.</p><p>LoopBack 4 projects scaffolded with recent versions of <code>lb4</code> tool will use the new layout too. </p><p>Existing projects can be updated with a bit of manual work:</p><ul><li>Move your test files from <code>test</code> to <code>src/__tests__</code>.</li><li>Edit script in <code>package.json</code> to use the new test location.</li><li>Change <code>tsconfig.json</code>: set <code>rootDir</code> to <code>"src"</code>, remove <code>"index.ts"</code> and <code>"test"</code> entries from the <code>include</code> field.</li><li>Fix any broken <code>import</code> statements.</li></ul><p>The <a href="https://github.com/strongloop/loopback-next/pull/2316/files" target="_blank" rel="noopener noreferrer">pull request #2316</a> shows how we updated our example applications; you can use it as a reference guide. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-updates">Other Updates<a href="#other-updates" class="hash-link" aria-label="Direct link to Other Updates" title="Direct link to Other Updates">​</a></h2><ul><li><p>You can now disable the OpenAPI spec endpoints (e.g. <code>/openapi.json</code>) which will also disable the <code>/explorer</code> endpoint by setting your rest's <code>openApiSpec.disabled</code> option to true. See <a href="https://loopback.io/doc/en/lb4/Server.html#customize-how-openapi-spec-is-served" target="_blank" rel="noopener noreferrer">Customize How OpenAPI Spec is Served</a> for more <code>rest.openApiSpec</code> options. <a href="https://github.com/strongloop/loopback-next/pull/2470" target="_blank" rel="noopener noreferrer">PR #2470</a>.</p></li><li><p>Another <code>rest</code> option introduced is <code>requestBodyParser</code>, so you can now <a href="https://loopback.io/doc/en/lb4/Server.html#configure-the-request-body-parser-options" target="_blank" rel="noopener noreferrer">configure the request body parser</a>. <a href="https://github.com/strongloop/loopback-next/pull/2432" target="_blank" rel="noopener noreferrer">PR #2432</a>.</p></li><li><p>LoopBack cares a lot about your security. A security issue related to <code>JSON.parse()</code> was <a href="https://github.com/hapijs/bourne#introduction" target="_blank" rel="noopener noreferrer">discovered</a> and this PR added a sanitizer for JSON. <a href="https://github.com/strongloop/loopback-next/pull/2348" target="_blank" rel="noopener noreferrer">PR #2348</a>.</p></li><li><p>Now you can override the default <a href="https://loopback.io/doc/en/lb4/Server.html#express-settings" target="_blank" rel="noopener noreferrer">Express settings</a> and also add your own. <a href="https://github.com/strongloop/loopback-next/pull/2423" target="_blank" rel="noopener noreferrer">PR #2423</a>.</p></li><li><p>You can now use a custom repository base class in your LoopBack application. <a href="https://github.com/strongloop/loopback-next/pull/2235" target="_blank" rel="noopener noreferrer">PR #2235</a>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="events">Events<a href="#events" class="hash-link" aria-label="Direct link to Events" title="Direct link to Events">​</a></h2><p>This month, the team went to downtown Toronto for a <a href="https://www.meetup.com/Toronto-Cloud-Integration-Meetup/events/257171001/" target="_blank" rel="noopener noreferrer">meetup</a>. This included an overview of LoopBack 4, along with demonstrations of what LoopBack 4 can do. Check out the <a href="https://strongloop.com/strongblog/watch-meetup-quickly-build-apis-with-loopback/" target="_blank" rel="noopener noreferrer">blog post</a> about it. There was also a <a href="https://developer.ibm.com/tutorials/create-rest-apis-minutes-with-loopback-4/" target="_blank" rel="noopener noreferrer">Quick Lab</a> and <a href="https://myibm.ibm.com/events/think/all-sessions/session/7764A" target="_blank" rel="noopener noreferrer">Master Class session</a> for LoopBack 4 in IBM's Code@Think in mid-February. And finally, <a href="https://strongloop.com/authors/Raymond_Feng/" target="_blank" rel="noopener noreferrer">Raymond</a> presented at DeveloperWeek 2019 where he talked about <a href="https://developerweek2019.sched.com/event/JXDc/pro-talk-speed-and-scale-building-apis-with-nodejs-typescript-and-loopback" target="_blank" rel="noopener noreferrer">Building APIs with Node.js, TypeScript, and LoopBack</a>.</p><p>If you want to come to our future events, keep an eye out on the <a href="https://strongloop.com/strongblog/" target="_blank" rel="noopener noreferrer">Strongblog</a> for announcements.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="community-contributions">Community Contributions<a href="#community-contributions" class="hash-link" aria-label="Direct link to Community Contributions" title="Direct link to Community Contributions">​</a></h2><p>As the number of contributions from our community rises, we are spending an increasing part of our time on reviewing these pull requests and helping our volunteers to get their changes landed. In fact, every fifth pull request opened this month was contributed by you! Check out the <a href="https://github.com/strongloop/loopback-next/pulls?q=is%3Apr+is%3Aopen+label%3Acommunity-contribution" target="_blank" rel="noopener noreferrer">community-contribution label</a> to see pull requests by the community.</p><p>We would like to take a moment to thank everyone who has submitted a pull request; the team really appreciates your contributions.</p><p>There are also other ways for getting involved beyond code contributions. Triaging issues and reviewing pull requests are examples of activities that would help us to accelerate the success of LoopBack as an open-source project. You can learn more about different contribution opportunities in <a href="https://loopback.io/doc/en/contrib/index.html" target="_blank" rel="noopener noreferrer">Contributing to LoopBack</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's future success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Joining</a> our user group.</li></ul>]]></content>
        <author>
            <name>Nora Abdelgadir</name>
            <uri>https://github.com/nabdelgadir</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Watch Video from our Meetup - Quickly Build APIs with Existing Services and Data Using LoopBack!]]></title>
        <id>https://loopback.io/blog/watch-meetup-quickly-build-apis-with-loopback</id>
        <link href="https://loopback.io/blog/watch-meetup-quickly-build-apis-with-loopback"/>
        <updated>2019-02-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>The Toronto Cloud Integration Meetup hosted an event on Tuesday, February 5, 2019: "Quickly Build APIs with Existing Services and Data Using LoopBack!" Since not everyone is local, we filmed the meetup so we could share it with our community.</p><p><img loading="lazy" alt="Meetup - Quickly Build APIs with Existing Services and Data Using LoopBack!" src="/blog/assets/images/meetup-feb-5-video-still-1dea4be24dd3f444043509175137e44b.png" width="1461" height="822" class="img_ev3q"></p><p>Our goal was to bring awareness of LoopBack to the Node.js community in Toronto. We also brought snacks and swag to share. Here's a snapshot of what was covered.</p><ul><li><p><a href="https://twitter.com/houjanny" target="_blank" rel="noopener noreferrer">Janny Hou</a> explained what LoopBack is, what you can do with it, and the rationale behind the rewrite of the framework. You can find the link to relevant LB4 docs <a href="https://loopback.io/doc/en/lb4/" target="_blank" rel="noopener noreferrer">here</a>.</p></li><li><p><a href="https://twitter.com/badmikew" target="_blank" rel="noopener noreferrer">Biniam Admikew</a> demonstrated how how easy it is to expose REST API from your database with just a few steps.  </p></li><li><p><a href="https://twitter.com/iamjamilspain" target="_blank" rel="noopener noreferrer">Jamil Spain</a> provided an additional demo while also taking care of capturing the meetup on video. </p></li></ul><p>You can view each videos on our YouTube channel playlist <a href="https://www.youtube.com/playlist?list=PL2I5I38o2kSCPCIxd8IjzYAMZnxcy3BYo" target="_blank" rel="noopener noreferrer">here</a>.</p><p>You can view the slides from the meetup on <a href="https://www.slideshare.net/DaveWhiteley1/2019-02-05-toronto-cloud-integration-meetup" target="_blank" rel="noopener noreferrer">Slideshare</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><ul><li>Visit the <a href="https://github.com/strongloop/loopback-next/" target="_blank" rel="noopener noreferrer">LoopBack 4 GithHub page</a> to contribute!</li></ul>]]></content>
        <author>
            <name>Dave Whiteley</name>
            <uri>https://github.com/DaveYVR</uri>
        </author>
        <category label="community" term="community"/>
        <category label="event" term="event"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[New Developer Page - Create Dynamic End-to-End REST APIs with LoopBack 4]]></title>
        <id>https://loopback.io/blog/create-dynamic-end-to-end-REST-APIs-with-loopback4</id>
        <link href="https://loopback.io/blog/create-dynamic-end-to-end-REST-APIs-with-loopback4"/>
        <updated>2019-02-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>We've provided news, tutorials, and updates on LoopBack for almost as long as the StrongLoop site existed, and continued to do so after IBM acquired StrongLoop in 2015. Recently, IBM created another resource for LoopBack! In addition to accessing news of the open-source Node.js API Framework on this site, you can now also find news, code and more on the official <a href="https://developer.ibm.com/open/projects/loopback/" target="_blank" rel="noopener noreferrer">IBM Developer LoopBack page</a>. </p><p>The site clearly explains what LoopBack is, what you can use it for, and what it includes:</p><blockquote><p>LoopBack is a highly extensible, open-source Node.js framework based on Express that enables you to quickly create dynamic end-to-end REST APIs and connect to backend systems such as databases and SOAP or REST services.</p></blockquote><blockquote><p>With LoopBack, you can easily create models based on a schema (if you have one) or define models if you don’t and build relationships between models.</p></blockquote><blockquote><p>LoopBack 4 is the latest release from the LoopBack team and includes:</p></blockquote><blockquote><ul><li>A new core to deliver great extensibility and flexibility written in TypeScript/ES2017.</li><li>Creation experience for defining REST APIs and handling API requests and responses.</li><li>Programming model with dependency injection and concepts like components, mixins, and repositories to make LoopBack extensible.</li><li>GraphQL support through OASGraph.</li></ul></blockquote><p>In addition, the site provides a diagram displaying how LoopBack interacts with incoming requests and outgoing integrations as well as LoopBack's various capabilities. It also outlines the benefits of contributing to the project and how LoopBack addresses certain business problems. </p><p>Check it all out on the official <a href="https://developer.ibm.com/open/projects/loopback/" target="_blank" rel="noopener noreferrer">IBM Developer page</a>! </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-next">What Next?<a href="#what-next" class="hash-link" aria-label="Direct link to What Next?" title="Direct link to What Next?">​</a></h2><ul><li><p>Learn about other <a href="https://strongloop.com/projects/" target="_blank" rel="noopener noreferrer">open source projects</a> that provide key technologies for the API economy: API Microgateway; OpenAPI Spec; and of course LoopBack. </p></li><li><p>Be sure to follow StrongLoop on <a href="https://www.facebook.com/strongloop/" target="_blank" rel="noopener noreferrer">Facebook</a> and <a href="https://twitter.com/StrongLoop" target="_blank" rel="noopener noreferrer">Twitter</a>!</p></li></ul>]]></content>
        <author>
            <name>Dave Whiteley</name>
            <uri>https://github.com/DaveYVR</uri>
        </author>
        <category label="community" term="community"/>
        <category label="news" term="news"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 January 2019 Milestone Update]]></title>
        <id>https://loopback.io/blog/january-2019-milestone</id>
        <link href="https://loopback.io/blog/january-2019-milestone"/>
        <updated>2019-02-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>We're one month into the new year! While the team had some time off extending into January, we still managed to work and spike on authentication, migration from LB3, user adoption, extensibility, and documentation. Read more to find out how it all unfolded.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="authentication-epic">Authentication Epic<a href="#authentication-epic" class="hash-link" aria-label="Direct link to Authentication Epic" title="Direct link to Authentication Epic">​</a></h2><p>Last month we implemented the strategy resolver, JWT strategy class and authentication action and created the diagram that depicts their dependency relations. Based on those efforts, in January we enriched the <code>loopback4-example-shopping</code> repository with a working JWT authentication system, and added two endpoints for model <code>User</code> to make use of it:</p><ul><li><code>POST /Users/login</code> verify a user's credentials and return a valid JWT access token</li><li><code>GET /Users/me</code> display the logged in user of the application</li></ul><p>The following picture describes how the authentication mechanism works:</p><img loading="lazy" src="https://strongloop.com/blog-assets/2019/01/auth_endpoints.png" alt="authentication endpoints in the example" class="img_ev3q"><p>This month our discussion focused on dividing the responsibilities among controller, repository and services/utilities. </p><p>The login related logic should be extracted into a service which could be shared among different clients, like REST, gRPC and WebSocket. Those logic include taking in credentials, verifying users, generating and decoding access token. The login service receives User's repository via DI. As the first implementation, we simply keep them as utils. They will be refactored into service in story <a href="https://github.com/strongloop/loopback4-example-shopping/issues/40" target="_blank" rel="noopener noreferrer">Refactor authentication util functions into a service</a></p><p>The controller function should extract credentials like email, username and password from the request. And calls the service to perform login. The service is injected via DI. </p><p>We also discovered there are three extension points that are needed in order to make LoopBack's authentication system more flexible. We need extension points such as:</p><ul><li>plugin Passport based strategies leveraging the existing auth action in <a href="https://github.com/strongloop/loopback-next/blob/master/packages/authentication/src/providers/authentication.provider.ts" target="_blank" rel="noopener noreferrer"><code>@loopback/authentication</code></a>.</li><li>plugin non-passport based strategies like the JWT strategy created by us.</li><li>a more flexible user profile type that allow people return custom properties.</li></ul><p>PR <a href="https://github.com/strongloop/loopback-next/pull/2249" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback-next/pull/2249</a> illustrates extension point/extension pattern is in progress. It provides a standard to make extension point that the 3 above stories could follow.</p><p>A more detailed tutorial will be created after finishing the story <a href="https://github.com/strongloop/loopback4-example-shopping/issues/40" target="_blank" rel="noopener noreferrer">Refactor authentication util functions into a service</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="user-adoption">User Adoption<a href="#user-adoption" class="hash-link" aria-label="Direct link to User Adoption" title="Direct link to User Adoption">​</a></h2><p>In order to cater to users developing LoopBack applications with JavaScript, <a href="https://strongloop.com/authors/Hage_Yaapa/" target="_blank" rel="noopener noreferrer">Yaapa</a> conducted a spike on how to get a LoopBack 4 JavaScript application up and running in <a href="https://github.com/strongloop/loopback-next/issues/1978" target="_blank" rel="noopener noreferrer">#1978</a>.</p><p>You can checkout the <a href="https://github.com/strongloop/loopback4-example-javascript/tree/hack" target="_blank" rel="noopener noreferrer">hack</a> branch of <code>loopback4-example-javascript</code> and preview the progress and the possible JavaScript API for LoopBack 4. It is a working example, feel free to experiment.</p><p>Also, in <a href="https://github.com/strongloop/loopback.io/pull/795" target="_blank" rel="noopener noreferrer">PR #795</a>, <a href="https://github.com/nabdelgadir" target="_blank" rel="noopener noreferrer">Nora</a> improved the UX for users on <code>loopback.io</code> by setting up redirects for the current LoopBack 4 website and LoopBack 3 in Active LTS, akin to how Node.js has the split for the different version downloads in their main landing page.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="extensibility">Extensibility<a href="#extensibility" class="hash-link" aria-label="Direct link to Extensibility" title="Direct link to Extensibility">​</a></h2><p>We continue to refine our extensibility story as we build more extensions.</p><ul><li><a href="https://github.com/strongloop/loopback-next/pull/2289" target="_blank" rel="noopener noreferrer">2289</a><ul><li>Introduced <code>BindingFilter</code> to match multiple bindings using a function.</li><li>Refactored code to use it for Context APIs such as <code>find</code> and <code>findByTag</code>.</li><li>Exposed <code>filterByKey</code> and <code>filterByTag</code> utility functions.</li></ul></li></ul><p>To make it easy to implement the extension point/extension pattern, we're building up new features for <code>@loopback/context</code>. There are number of PRs under review.</p><ul><li><p><a href="https://github.com/strongloop/loopback-next/pull/2291" target="_blank" rel="noopener noreferrer">PR#2291</a></p><ul><li>Add support for <code>context</code> to emit <code>bind</code> and <code>unbind</code> events</li><li>Allow observers to register with the context chain and respond to come and go of bindings of interest</li></ul></li><li><p><a href="https://github.com/strongloop/loopback-next/pull/2122" target="_blank" rel="noopener noreferrer">PR#2122</a> (depends on #2291)</p><ul><li>Introduce <code>ContextView</code> to dynamically resolve values of matching bindings</li><li>Introduce <code>@inject.view</code> to support dependency injection of multiple bound values</li><li>Extend <code>@inject</code> and <code>@inject.getter</code> to support multiple bound values</li></ul></li><li><p><a href="https://github.com/strongloop/loopback-next/pull/2249" target="_blank" rel="noopener noreferrer">PR#2249</a></p><ul><li>Add an example package to illustrate how to implement extension point/extension pattern using LoopBack 4's IoC and DI container</li></ul></li><li><p><a href="https://github.com/strongloop/loopback-next/pull/2259" target="_blank" rel="noopener noreferrer">PR#2259</a></p><ul><li>Propose new APIs for <code>Context</code> to configure bindings</li><li>Add <code>@inject.config</code> to simplify injection of configuration</li></ul></li></ul><p>You are welcome to join our discussions in these pull requests. Please be aware that such PRs can be changed or abandoned during the review process.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation-updates">Documentation updates<a href="#documentation-updates" class="hash-link" aria-label="Direct link to Documentation updates" title="Direct link to Documentation updates">​</a></h2><p>We're always striving to have better documentation for our users. In <a href="https://github.com/strongloop/loopback-next/pull/2214" target="_blank" rel="noopener noreferrer">PR#2214</a>, <a href="https://github.com/nabdelgadir" target="_blank" rel="noopener noreferrer">Nora</a> added much needed descriptions to our <a href="https://loopback.io/doc/en/lb4/Decorators_repository.html#relation-decorators" target="_blank" rel="noopener noreferrer">relation decorators</a> page with clear examples on how they are applied. Moreover, <a href="https://github.com/emonddr" target="_blank" rel="noopener noreferrer">Dominique</a> wrote an excellent guide on how to publish a LoopBack 4 application to Kubernetes on IBM Cloud in <a href="https://github.com/strongloop/loopback-next/pull/2160" target="_blank" rel="noopener noreferrer">PR#2160</a>. Check it out <a href="https://loopback.io/doc/en/lb4/deploying_to_ibm_cloud_kubernetes.html" target="_blank" rel="noopener noreferrer">here</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="loopback-v3-compatibility-layer">LoopBack v3 compatibility layer<a href="#loopback-v3-compatibility-layer" class="hash-link" aria-label="Direct link to LoopBack v3 compatibility layer" title="Direct link to LoopBack v3 compatibility layer">​</a></h2><p>In January, Miroslav implemented a proof of concept showing a compatibility layer that would allow application developers to take their model files (<code>.json</code> and <code>.js</code>) from an existing LB3 project and drop them mostly as-is to a LB4 application.</p><p>The idea is to simplify the migration path from LB3 to LB4 by allowing developers to update their existing applications from LB3 to LB4 runtime (and dependencies) without having to rework their source code to the new programming model yet.</p><p>With the proposed compatibility layer, LB3 models are "upgraded" to use:</p><ul><li><code>loopback-datasource-juggler</code> version 4.x (instead of 3.x)</li><li><code>@loopback/rest</code> for REST APIs (instead of <code>strong-remoting</code>)</li><li>OpenAPI v3 (instead of Swagger a.k.a. OpenAPI v2)</li><li><code>@loopback/rest-explorer</code> for API Explorer (instead of <code>loopback-component-explorer</code>)</li></ul><p>The migrated models will run fully on LB4 runtime and thus enjoy longer LTS.</p><p>If you have an LB3 application and considering upgrading to LB4, then please join the discussion in <a href="https://github.com/strongloop/loopback-next/pull/2274" target="_blank" rel="noopener noreferrer">PR#2274</a>. Your feedback is very important to us!</p><p>While waiting for more feedback from our users, Miroslav reviewed early input and started to look into ways to mount an entire LB3 application inside an LB4 project. While such solution still depends on LB3 runtime that will eventually go out of support, it will provide almost 100% backwards compatibility and require very little code changes. Let us know if this option would be useful for your project and leave a comment in <!-- -->[PR#2318]<!-- -->strongloop/loopback-next#2318).</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="community-engagement-events">Community Engagement Events<a href="#community-engagement-events" class="hash-link" aria-label="Direct link to Community Engagement Events" title="Direct link to Community Engagement Events">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="toronto-loopback-meetup">Toronto LoopBack Meetup<a href="#toronto-loopback-meetup" class="hash-link" aria-label="Direct link to Toronto LoopBack Meetup" title="Direct link to Toronto LoopBack Meetup">​</a></h3><p>The LoopBack team hosted a meetup in downtown Toronto on February 5th, 2019. We taught users all about LoopBack 4 and demonstrated the capabilities and integrations of the framework. We worked hard to prepare presentations and demos for the meetup during this month. If you are in the Toronto area and are interested in future meetups, check out the <a href="https://www.meetup.com/Toronto-Cloud-Integration-Meetup/" target="_blank" rel="noopener noreferrer">Toronto Cloud Integration Meetup Group</a> and make sure to sign up!</p><p>February is an event-filled month. Besides the meetup in Toronto, there will be LoopBack coverage at <a href="https://www.ibm.com/events/think/code/" target="_blank" rel="noopener noreferrer">Code @ Think</a> in Node.js Master Class and as one of the Quick Labs. <a href="https://strongloop.com/authors/Raymond_Feng/" target="_blank" rel="noopener noreferrer">Raymond</a> will be presenting at DeveloperWeek on Feb 21 on the topic -- <a href="https://sched.co/JXDc" target="_blank" rel="noopener noreferrer">Speed and Scale: Building APIs with Node.js, TypeScript and LoopBack</a>. </p><p>Twitter is a great way to stay in the loop with StrongLoop and LoopBack news. The best way to learn about events we are part of is generally <a href="https://strongloop.com/events/" target="_blank" rel="noopener noreferrer">https://strongloop.com/events/</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="welcome-new-core-maintainer">Welcome New Core Maintainer<a href="#welcome-new-core-maintainer" class="hash-link" aria-label="Direct link to Welcome New Core Maintainer" title="Direct link to Welcome New Core Maintainer">​</a></h2><p>We'd like to introduce our new LoopBack development team member <a href="https://github.com/emonddr" target="_blank" rel="noopener noreferrer">Dominique</a> at our Markham lab. Dominique brings lots of experience and knowledge from working in Message Broker and App Connect development team in the past. He has already given us a step-by-step tutorial on how to deploy a LoopBack 4 application to Kubernetes in IBM Cloud <a href="https://loopback.io/doc/en/lb4/deploying_to_ibm_cloud_kubernetes.html" target="_blank" rel="noopener noreferrer">here</a>. Welcome, Dominique!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's future success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Joining</a> our user group.</li></ul>]]></content>
        <author>
            <name>Biniam Admikew</name>
            <uri>https://github.com/b-admike</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Meetup - Quickly Build APIs with Existing Services and Data Using LoopBack!]]></title>
        <id>https://loopback.io/blog/meetup-quickly-build-apis-using-loopback</id>
        <link href="https://loopback.io/blog/meetup-quickly-build-apis-using-loopback"/>
        <updated>2019-01-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>The Toronto Cloud Integration Meetup is hosting an event on Tuesday, February 5, 2019. The subject is near and dear to our hearts: "Quickly Build APIs with Existing Services and Data Using LoopBack!" If you are in town, we'd love to meet you as we cover this topic.</p><p><img loading="lazy" alt="Meetup - Quickly Build APIs with Existing Services and Data Using LoopBack!" src="/blog/assets/images/loopback-4-logo-sample-5f749dabbc27918570f5deff11b1841e.png" width="594" height="602" class="img_ev3q"></p><p>We interact with APIs regularly through our mobile and desktop devices! Modern apps and websites integrate them, and we want to help you build APIs off of existing services and data quickly and easily. To do so, some of our LoopBack 4 developers will demonstrate creating an API on top of databases and services in just a few steps, as well as show you how to test it. We will also have developers discuss integrating LoopBack with the latest technologies - Blockchain, Kafka, and more!</p><p>One of the purposes of this meetup is to bring awareness of this awesome Node.js framework to the Node.js community in Toronto. Of course, if you’re not using Node.js at this moment, feel free to join us and learn more!</p><p>Speakers from the LoopBack and IBM team include:</p><ul><li><p>Janny Hou - Since it’s our first LB4 Meetup, we’ll keep things light and interactive in this main presentation. We will share what LoopBack is and what you can do with it. We will also tell some of the story about the rationale behind the rewrite of the framework.</p></li><li><p>Biniam Admikew - This demonstration will show how easy it is to expose REST API from your database with just a few steps.  We will go a bit deeper on the concepts and what’s happening in each steps.</p></li><li><p>Jamil Spain will provide an additional demo.</p></li></ul><p>The meetup will be held at 120 Bloor Street East in Toronto, Ontario. There will also be some snacks and swag on hand, as well as a great chance to network with like-minded folks. </p><p>You can register for the event <a href="https://www.meetup.com/Toronto-Cloud-Integration-Meetup/events/257171001/" target="_blank" rel="noopener noreferrer">here</a>!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><ul><li><p>Visit the <a href="http://v4.loopback.io/" target="_blank" rel="noopener noreferrer">LoopBack 4</a> homepage to learn more. </p></li><li><p>Do a deeper dive to learn how to <a href="https://strongloop.com/strongblog/simplify-your-database-migrations" target="_blank" rel="noopener noreferrer">simplify your database migrations</a> using LoopBack 4.</p></li><li><p>See how you can <a href="https://strongloop.com/strongblog/deploying-to-ibm-cloud/" target="_blank" rel="noopener noreferrer">deploy LoopBack 4 applications to IBM Cloud</a>.</p></li></ul>]]></content>
        <author>
            <name>Dave Whiteley</name>
            <uri>https://github.com/DaveYVR</uri>
        </author>
        <category label="community" term="community"/>
        <category label="event" term="event"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[LoopBack 4 December 2018 Milestone Update]]></title>
        <id>https://loopback.io/blog/december-2018-milestone</id>
        <link href="https://loopback.io/blog/december-2018-milestone"/>
        <updated>2019-01-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Originally published on strongloop.com]]></summary>
        <content type="html"><![CDATA[<p><em>Originally published on <a href="https://strongloop.com" target="_blank" rel="noopener noreferrer">strongloop.com</a></em></p><p>Happy New Year! We hope everyone had a wonderful holiday and warmly welcomed 2019. This past December was a short month due to the vacation days, but we were still able to complete several fixes and take off in our next focused epics like authentication and building a JavaScript LoopBack 4 application. You can read more about our progress below.</p><p><img loading="lazy" alt="LoopBack 4 December 2018 Milestone Update" src="/blog/assets/images/LoopBack-4-December-2018-Milestone-Update-0cddccdd224f069fad6852d2a9d92325.png" width="1247" height="471" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="community-contribution">Community Contribution<a href="#community-contribution" class="hash-link" aria-label="Direct link to Community Contribution" title="Direct link to Community Contribution">​</a></h2><p>In December we received several document updates and code refactor PRs to improve our code base and user experience. Our LoopBack team appreciates all the contributions that community members have made through the past year. We look forward to continually improving LoopBack 4 with you in the new year! Thank you for participating in the new era of LoopBack.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="authentication-and-authorization">Authentication and Authorization<a href="#authentication-and-authorization" class="hash-link" aria-label="Direct link to Authentication and Authorization" title="Direct link to Authentication and Authorization">​</a></h2><p>For the first refactoring task of the authentication component, we started by implementing a JWT strategy in the shopping example. We did this to discover the common abstractions among different authentication strategies, and to explore ways of defining the default LoopBack 4 User model integrated with authorization methods like login and logout.</p><p>During the implementation, we found some twisted concepts that could confuse people in terms of how each layer's metadata are injected and the mechanism of how the authentication component works. We created a diagram depicting the dependency relations and functionality of each concept to guide community contributors. You can find it in this <a href="https://github.com/strongloop/loopback-next/issues/1997#issuecomment-450998083" target="_blank" rel="noopener noreferrer">comment</a>.</p><p>We were able to write a PoC PR with the following elements:</p><ul><li>A JWT strategy that verifies a request's permission by the authentication metadata from its header</li><li>A custom strategy resolver which returns the JWT strategy</li><li>An AccessToken model that has a one-to-many relation to the User model</li><li>A sign in endpoint in the User controller that finds a user and creates the JWT access token</li></ul><p>The PR is still in progress. We will summarize the required elements and the steps to create them in the document when it's done. Our next focus would be extracting the pieces in the PoC PR into proper modules, including our existing <code>@loopback/authentication</code> package or a new created extension package. You can check story <a href="https://github.com/strongloop/loopback-next/issues/1997" target="_blank" rel="noopener noreferrer">#1997</a> to track the discussions.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="relation-epic">Relation Epic<a href="#relation-epic" class="hash-link" aria-label="Direct link to Relation Epic" title="Direct link to Relation Epic">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-hasone-relation">Support hasOne relation<a href="#support-hasone-relation" class="hash-link" aria-label="Direct link to Support hasOne relation" title="Direct link to Support hasOne relation">​</a></h3><p>With the <code>hasMany</code> relation feature in place and with a lot of request from our community, it made logical sense to implement <code>hasOne</code> relation next. The first iteration <a href="https://github.com/strongloop/loopback-next/pull/1879" target="_blank" rel="noopener noreferrer">1879</a> involved an acceptance test to drive the feature with tests for <code>create</code> and <code>get</code> or <code>find</code> methods. However, it was using a race-condition prone approach in order to guarantee that a single related model instance was created for a source instance. The code called the <code>find()</code> and <code>create()</code> methods on the target repository which can lead to multiple target instances based on the asynchronous nature of those methods (see <a href="https://github.com/strongloop/loopback-next/pull/1879#discussion_r227363386" target="_blank" rel="noopener noreferrer">this comment</a> for a clear example). </p><p>In order to address this issue, <a href="https://github.com/bajtos" target="_blank" rel="noopener noreferrer">Miroslav</a> proposed using the target model's Primary Key as the Foreign Key from the source model and let the underlying database enforce uniqueness. With it came <code>belongsToUniquely()</code> decorator which is used as part of the target model definition to mark a property as a non-generated <code>id</code> field for use with <code>hasOne</code> relation. After making sure it works with in-memory and MySQL databases, we concluded that it was universal enough and made sense to delegate uniqueness enforcement at the database level and landed the PR. </p><p>However, <a href="https://github.com/raymondfeng" target="_blank" rel="noopener noreferrer">Raymond</a> pointed out that this approach does not indeed enforce uniqueness across all supported connectors. Instead, he proposed to mark the foreign key as a unique index. While <a href="https://github.com/b-admike" target="_blank" rel="noopener noreferrer">Biniam</a> started the implementation in <a href="https://github.com/strongloop/loopback-next/pull/2126" target="_blank" rel="noopener noreferrer">2126</a>, he discovered that some connectors like <code>in-memory</code> and <code>cloudant</code> do not have support for <code>unique indexes</code>. Raymond, Miroslav, and Biniam discussed HasOne's unique constraint for the foreign key and discovered a new way of looking at relations and constraints:</p><ul><li>Weak relations, where the developer primarily wants to navigate related models (think of GraphQL) and referential integrity is either not important or already enforced by the (SQL) database.</li><li>Strong relations, where the referential integrity is guaranteed by the framework together with the database.</li></ul><p>Given this and the fact that we don't have a concrete way to enforce referential integrity in LoopBack from the approaches taken thus far, <a href="https://github.com/strongloop/loopback-next/pull/2126" target="_blank" rel="noopener noreferrer">#2126</a> was put on hold and <a href="https://github.com/strongloop/loopback-next/pull/2147" target="_blank" rel="noopener noreferrer">2147</a> aimed to remove the implementation which used target model's PK as the FK for a <code>hasOne</code> relation. The onus is now on users to make sure that referential integrity is enforced by the database they're using by defining a unique index as shown in our <a href="https://loopback.io/doc/en/lb4/hasOne-relation.html#setting-up-your-database-for-hasone-relation---mysql" target="_blank" rel="noopener noreferrer">docs</a>. For more discussion, see <a href="https://github.com/strongloop/loopback-next/issues/2127" target="_blank" rel="noopener noreferrer">2127</a> and <a href="https://github.com/strongloop/loopback-next/issues/1718" target="_blank" rel="noopener noreferrer">1718</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="inclusion-spike">Inclusion Spike<a href="#inclusion-spike" class="hash-link" aria-label="Direct link to Inclusion Spike" title="Direct link to Inclusion Spike">​</a></h3><p>To explore a good approach for doing the inclusion traverse, we did a spike that implemented an inclusion handler as a function to fetch the included items. When a one to many relation is established, the repository of the source model registers the inclusion handler, which takes in the target model's repository getter, applies constraints and invoke the target repository's <code>find</code> method with the inclusion filter.</p><p>This works well for <code>hasMany</code> relation but exposes more high level design problems when implementing the <code>belongsTo</code> inclusion handler. The <a href="https://github.com/strongloop/loopback-next/issues/1799" target="_blank" rel="noopener noreferrer">circular dependency restriction</a> results in two models could not define each other as a property in the model class. Therefore the <code>belongsTo</code> relation only has a foreignKey id property but not a relation property in the source model, and as a consequence, the source model couldn't really describe the data included from its parent.</p><p>Here is a summary of the things we could re-design and improve:</p><ul><li>The Filter interface is not designed to describe related entities</li><li>The relation(inclusion) property shouldn't be part of the model class</li><li>We need a new design to resolve and describe the inclusion property</li></ul><p>The discussion is tracked in <a href="https://github.com/strongloop/loopback-next/issues/2152" target="_blank" rel="noopener noreferrer">story 2152</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documents">Documents<a href="#documents" class="hash-link" aria-label="Direct link to Documents" title="Direct link to Documents">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="contribution-guide">Contribution Guide<a href="#contribution-guide" class="hash-link" aria-label="Direct link to Contribution Guide" title="Direct link to Contribution Guide">​</a></h3><p>To make users more easier to contribute the code, we cleaned up the <a href="https://loopback.io/doc/en/contrib/Reporting-issues.html" target="_blank" rel="noopener noreferrer">Reporting issues</a> page with a more detailed guide of reporting in appropriate channels, and updated the instructions of filing Loopback 2/3 and Loopback 4 bugs separately.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="api-documents">API Documents<a href="#api-documents" class="hash-link" aria-label="Direct link to API Documents" title="Direct link to API Documents">​</a></h3><p>We fixed the <code>AuthenticationBindings</code> and <code>StrategyAdapter</code>'s API document in the authentication module.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="extensible-request-body-parsing-blog">Extensible Request Body Parsing Blog<a href="#extensible-request-body-parsing-blog" class="hash-link" aria-label="Direct link to Extensible Request Body Parsing Blog" title="Direct link to Extensible Request Body Parsing Blog">​</a></h2><p>The API client sends an HTTP request with <code>Content-Type</code> header to indicate the media type of the request body. Now we added 6 built-in body parsers for different content types and also allow users to register custom body parser as extensions by implementing the <code>BodyParser</code> interface and bind it to the application.</p><p>To know more about the details, you can read the blog <a href="https://strongloop.com/strongblog/the-journey-to-extensible-request-body-parsing" target="_blank" rel="noopener noreferrer">The journey to extensible request body parsing</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="write-loopback-4-app-in-javascript">Write Loopback 4 App in JavaScript<a href="#write-loopback-4-app-in-javascript" class="hash-link" aria-label="Direct link to Write Loopback 4 App in JavaScript" title="Direct link to Write Loopback 4 App in JavaScript">​</a></h2><p>We are working on a JavaScript abstraction for LoopBack 4. Using this, JavaScript developers will be able to develop LoopBack 4 applications without having to use TypeScript. You can preview an app using the progress we have made so far at <a href="https://github.com/strongloop/loopback4-example-javascript" target="_blank" rel="noopener noreferrer">https://github.com/strongloop/loopback4-example-javascript</a>.</p><p>The next step is to further optimize the abstraction and make it as seamless as possible.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="openapi-specifications">OpenAPI Specifications<a href="#openapi-specifications" class="hash-link" aria-label="Direct link to OpenAPI Specifications" title="Direct link to OpenAPI Specifications">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="base-path">Base Path<a href="#base-path" class="hash-link" aria-label="Direct link to Base Path" title="Direct link to Base Path">​</a></h3><p>We enabled adding the base path of the REST server by calling the app method <code>app.basePath('/abasepath')</code> or server method <code>server.basePath('/abasepath')</code>. The base path can be provided in the configuration too:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> app </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">RestApplication</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   rest</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     basePath</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/api'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="models-for-anonymous-schema">Models for Anonymous Schema<a href="#models-for-anonymous-schema" class="hash-link" aria-label="Direct link to Models for Anonymous Schema" title="Direct link to Models for Anonymous Schema">​</a></h3><p>Previously when creating LoopBack 4 artifacts by <code>lb4 openapi</code>, the controller class used inline TypeScript type literals to describe the object/array parameters for anonymous schemas. Therefore we introduced a flag called <code>--promote-anonymous-schemas</code> to generate separate model classes/types for them. A good use case for turning on the flag would be generating models for the anonymous objects that describe a POST/PATCH operation's responses. For a more detailed usage of the flag and the conventions of the created LoopBack 4 model, please check <a href="https://loopback.io/doc/en/lb4/OpenAPI-generator.html" target="_blank" rel="noopener noreferrer">the documentation of OpenAPI generator</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="context-improvement">Context Improvement<a href="#context-improvement" class="hash-link" aria-label="Direct link to Context Improvement" title="Direct link to Context Improvement">​</a></h2><p>To avoid duplicating the binding configuration every time the users are applying the same attributes such as tags and scope, we allow applying a template function to a binding in the following way:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">serverTemplate</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">binding</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Binding</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  binding</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">inScope</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">BindingScope</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">SINGLETON</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">tag</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'server'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> serverBinding </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Binding</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">RestServer</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'servers.RestServer1'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">serverBinding</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">serverTemplate</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We also polished the binding related documentation and extracted them into a standalone page <a href="https://loopback.io/doc/en/lb4/Binding.html" target="_blank" rel="noopener noreferrer">Binding</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="tslint-configurations">Tslint Configurations<a href="#tslint-configurations" class="hash-link" aria-label="Direct link to Tslint Configurations" title="Direct link to Tslint Configurations">​</a></h2><p>The built-in <code>no-unused-variable</code> rule raised many issues like conflicts with other rules and it's also been deprecated. As a solution, we are replacing it with another configuration property <code>no-unused</code>. This causes a possible breaking change and therefore a new standalone package <code>@loopback/tslint-config</code> is created to separate the major version bump for changing the tslint configurations from <code>@loopback/build</code>. You can check <a href="https://github.com/strongloop/loopback-next/pull/2159" target="_blank" rel="noopener noreferrer">PR#2159</a> for details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="loopback-3-support">LoopBack 3 Support<a href="#loopback-3-support" class="hash-link" aria-label="Direct link to LoopBack 3 Support" title="Direct link to LoopBack 3 Support">​</a></h2><p>Since LB2 will reach its end of line by April 2019, we're searching through the modules in the StrongLoop organization and updating LoopBack dependencies from version to 2 to version 3. We updated <code>loopback-workspace</code> from a LoopBack 2 application to LoopBack 3 application without changing any behaviours of its APIs. As part of the update, the <code>WorkspaceEntity</code> and <code>Definition</code> models were removed from the model configuration file, as they are not meant to be accessed directly and they are not attached to a datasource. Finally, the application has been updated to use Node 6+ and the application's dependencies have also been updated to their latest versions.</p><p>You can find out more in our <a href="https://loopback.io/doc/en/contrib/Long-term-support.html" target="_blank" rel="noopener noreferrer">LTS schedule</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="call-to-action">Call to Action<a href="#call-to-action" class="hash-link" aria-label="Direct link to Call to Action" title="Direct link to Call to Action">​</a></h2><p>LoopBack's future success depends on you. We appreciate your continuous support and engagement to make LoopBack even better and meaningful for your API creation experience. Please join us and help the project by:</p><ul><li><a href="https://github.com/strongloop/loopback-next/issues" target="_blank" rel="noopener noreferrer">Reporting issues</a>.</li><li><a href="https://github.com/strongloop/loopback-next/blob/master/docs/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing</a>
code and documentation.</li><li><a href="https://github.com/strongloop/loopback-next/labels/good%20first%20issue" target="_blank" rel="noopener noreferrer">Opening a pull request on one of our "good first issues"</a>.</li><li><a href="https://github.com/strongloop/loopback-next/issues/110" target="_blank" rel="noopener noreferrer">Joining</a> our user group.</li></ul>]]></content>
        <author>
            <name>Janny Hou</name>
            <uri>https://github.com/jannyhou</uri>
        </author>
        <category label="Milestone update" term="Milestone update"/>
    </entry>
</feed>